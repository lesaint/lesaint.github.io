<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Javatronic</title><link href="https://www.javatronic.fr/" rel="alternate"></link><link href="https://www.javatronic.fr/feeds/all.atom.xml" rel="self"></link><id>https://www.javatronic.fr/</id><updated>2024-10-11T00:00:00+02:00</updated><entry><title>Create an Android app from scratch, with CI, and no knowledge - Part 3</title><link href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/" rel="alternate"></link><published>2024-10-11T00:00:00+02:00</published><updated>2024-10-11T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-10-11:/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/</id><summary type="html">
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; This is a multi-part article&lt;/p&gt;
&lt;p&gt;You're reading part 3.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/"&gt;Part 1&lt;/a&gt; focuses on bootstrapping an Android app dev project and run it on an emulated device&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/"&gt;Part 2&lt;/a&gt; focuses on deploying the app to my phone and create a CI pipeline producing APKs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/"&gt;Part 3&lt;/a&gt; focuses on basic Jetpack Compose …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; This is a multi-part article&lt;/p&gt;
&lt;p&gt;You're reading part 3.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/"&gt;Part 1&lt;/a&gt; focuses on bootstrapping an Android app dev project and run it on an emulated device&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/"&gt;Part 2&lt;/a&gt; focuses on deploying the app to my phone and create a CI pipeline producing APKs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/"&gt;Part 3&lt;/a&gt; focuses on basic Jetpack Compose and Kotlin programming to create a demo UI for LMS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;So far, we worked on the Hello World Android App generated by Android Studio.&lt;/p&gt;
&lt;p&gt;However, the point of all this is to create the TODO LINK MVP of an Android App for LMS, and find out how easy/hard it is.&lt;/p&gt;
&lt;p&gt;The requirements are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an input field to search, initially empty&lt;/li&gt;
&lt;li&gt;a list displaying persons (id, first name, and last name)&lt;/li&gt;
&lt;li&gt;the same behaviors as the PyLMS UI: display all persons by default, display the result of filtering first and last name by the value of the input field on submit&lt;/li&gt;
&lt;li&gt;(Optional) use state-of-the-art/recommended UI patterns for Android&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="kotlin-for-programming"&gt;Kotlin for programming&lt;a class="headerlink" href="#kotlin-for-programming" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I knew from keeping an eye on the news that Kotlin is THE programing language for Android for a while.&lt;/p&gt;
&lt;p&gt;I never programmed with Kotlin. I do have a high-level understanding of the language from looking at Java-Kotlin
comparison articles over time and collaborating with Kotlin developers at work. &lt;/p&gt;
&lt;p&gt;I'm happy to have a practical opportunity to learn a new language. Plus, I'm super eager to find out how a language
intended to provide a faster and more fluent syntax for coding on the JVM compares to Python.&lt;/p&gt;
&lt;h1 id="jetpack-compose-for-the-ui"&gt;Jetpack Compose for the UI&lt;a class="headerlink" href="#jetpack-compose-for-the-ui" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I recalled from past looks at Android programming that the UI was coded with XML. And indeed, the 1st few resources I
found confirmed it.&lt;/p&gt;
&lt;p&gt;Yet, my deep self couldn't help but try and find an alternative where I could code everything (eg. generate XML with Code). &lt;/p&gt;
&lt;p&gt;And indeed, after a little googling, I stumbled upon articles talking about Jetpack Compose as the new and recommended
way of UI programming for Android, and I liked what I saw.&lt;/p&gt;
&lt;p&gt;In a nutshell, Jetpack Compose has nothing to do with XML and my understanding of it is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it is based on Kotlin functions, annotated with &lt;code&gt;@Composable&lt;/code&gt;, each describing a piece of the UI&lt;/li&gt;
&lt;li&gt;functions are composed of one another, down to using Jetpack Compose base UI &lt;code&gt;@Composable&lt;/code&gt; functions (eg. an input field) (or drawing functions -- I guess), &lt;/li&gt;
&lt;li&gt;and variables implementing &lt;code&gt;State&lt;/code&gt; (or more commonly &lt;code&gt;MutableState&lt;/code&gt;), to hold any state related to the UI.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Jetpack Compose is then responsible for drawing the UI calling these methods, as well as refreshing the UI, upon 
both user/system events and changes of state variables (which Jetpack monitors), calling &lt;strong&gt;only the 
impacted&lt;/strong&gt; functions.&lt;/p&gt;
&lt;p&gt;As a consequence, it's important to understand that &lt;code&gt;@Composable&lt;/code&gt; functions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;may &lt;strong&gt;not&lt;/strong&gt; be called &lt;a href="https://developer.android.com/develop/ui/compose/mental-model#any-order"&gt;in the order&lt;/a&gt; they are defined in code,&lt;/li&gt;
&lt;li&gt;will be called &lt;a href="https://developer.android.com/develop/ui/compose/mental-model#frequent"&gt;multiple times&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;can be called &lt;a href="https://developer.android.com/develop/ui/compose/mental-model#parallel"&gt;in parallel&lt;/a&gt;,&lt;/li&gt;
&lt;li&gt;as a consequence, they &lt;strong&gt;must not have side effects&lt;/strong&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;&lt;code&gt;@Composable&lt;/code&gt; functions are expected to be named with a capital head letter. This is not standard for Kotlin.&lt;/p&gt;
&lt;p&gt;Since functions are typically named after components, my guess is that it is intended to make it easier for
developers to reason around functions as composable UI components.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/why-adopt"&gt;Why adopt Compose - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/mental-model"&gt;Thinking in Compose - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="recommended-android-app-ui"&gt;Recommended Android app UI&lt;a class="headerlink" href="#recommended-android-app-ui" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I'm not a UI guy. So, my go-to action is to find references on how to design an Android app.&lt;/p&gt;
&lt;p&gt;Turns out, there is exactly that, provided directly by Google: &lt;a href="https://m3.material.io/"&gt;Material Design 3&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Scaffold&lt;/code&gt; is a top component, provided by Jetpack Compose, that provides scaffolding to create an App with the
typical (and recommended) appearance: a top bar, a bottom bar, content in the middle, and a floating action
button.&lt;/p&gt;
&lt;p&gt;I took the code sample from Android Developer and built my MVP from there:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ usage of the &lt;code&gt;TopAppBar&lt;/code&gt; function requires adding &lt;code&gt;OptIn(ExperimentalMaterial3Api::class)&lt;/code&gt; to the wrapping &lt;code&gt;@Composable&lt;/code&gt; function&lt;/li&gt;
&lt;li&gt;➋ color code copy/pasted from code example&lt;/li&gt;
&lt;li&gt;➌ top bar only need to contain the name of the App for now&lt;/li&gt;
&lt;li&gt;➍ bottom bar will display infos about displayed data, whether it's filtered or not&lt;/li&gt;
&lt;li&gt;➎ I disabled/hide the floating button as it is out of scope of the MVP, but it seems a great way to add a new person&lt;/li&gt;
&lt;li&gt;➏ this function defines the "content" (what's between top and bottom bars) and takes a parameter &lt;code&gt;innerPadding&lt;/code&gt; which 
     must be passed to the top inner component. If not passed, inner content will render behind the top bar (if top aligned).&lt;/li&gt;
&lt;li&gt;➐ more on &lt;code&gt;PersonsList&lt;/code&gt; below (see &lt;a href="#list-of-persons"&gt;List of persons&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;➑ passing the padding value as a &lt;code&gt;Modifier&lt;/code&gt; type to &lt;code&gt;PersonsList&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@OptIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExperimentalMaterial3Api&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;AndroLMSScaffold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topBar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;TopAppBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;colors&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TopAppBarDefaults&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;topAppBarColors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;containerColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;primaryContainer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;titleContentColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;primary&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;title&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"AndroLMS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bottomBar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;BottomAppBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;containerColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;primaryContainer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;contentColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;textAlign&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TextAlign&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Displaying everything"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="c1"&gt;//    }, floatingActionButton = { # ➎&lt;/span&gt;
&lt;span class="c1"&gt;//        FloatingActionButton(onClick = { }) {&lt;/span&gt;
&lt;span class="c1"&gt;//            Icon(Icons.Default.Add, contentDescription = "Create person")&lt;/span&gt;
&lt;span class="c1"&gt;//        }&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➏&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➑&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition tip"&gt;
&lt;p class="admonition-title"&gt;Tip&lt;/p&gt;
&lt;p&gt;Compose appears to make extensive use of the Kotlin convention that allows writing a lambda expression
after the function's arguments when the trailing parameter is a function (see ➏). &lt;br/&gt;
I find this quite neat, and it does improve the readability of the code.&lt;br/&gt;
At first sight, though, it does create confusion of capitalized functions with call to class constructors.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Usage of &lt;code&gt;@OptIn(ExperimentalMaterial3Api::class)&lt;/code&gt; may not be required in 35 and above, it is with API 34 (the one I target for my phone).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://m3.material.io/get-started"&gt;Get to know Material 3 - material.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/components/scaffold#example"&gt;Scaffold code example - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://kotlinlang.org/docs/lambdas.html#passing-trailing-lambdas"&gt;Passing trailing lambdas - Kotlinlang.org&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="list-of-persons"&gt;List of persons&lt;a class="headerlink" href="#list-of-persons" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;To display a list of persons, I looked for a List, or tree component.&lt;/p&gt;
&lt;p&gt;I didn't find one and quick googling (and asking Copilot on Skype - I had to use the software for communication, 
discover it had a bot built-in and gave it a try) taught me that the correct approach with Android is to use a &lt;code&gt;Column&lt;/code&gt;
component with any other repeated component inside. A &lt;code&gt;Text&lt;/code&gt; one will do.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;🄌 introducing a data class to mock a &lt;code&gt;Person&lt;/code&gt; in the app&lt;/li&gt;
&lt;li&gt;➊ following Compose approach, every piece of the UI is a &lt;code&gt;@Composable&lt;/code&gt; function&lt;/li&gt;
&lt;li&gt;➋ to be side-effect-free, it must take the list of persons to display as a parameter&lt;/li&gt;
&lt;li&gt;➌ and accept the padding from &lt;code&gt;Scaffold&lt;/code&gt; to not be displayed behind the top bar&lt;/li&gt;
&lt;li&gt;➍ using &lt;code&gt;LazyColumn&lt;/code&gt; instead of &lt;code&gt;Column&lt;/code&gt; to get a vertical scrollbar&lt;/li&gt;
&lt;li&gt;➎ using the &lt;code&gt;items&lt;/code&gt; function from the &lt;code&gt;LazyDsl&lt;/code&gt; to load all the persons at once (which is not lazy at all, but &lt;a href="https://en.wikipedia.org/wiki/KISS_principle"&gt;KISS&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;➏ each person is represented on screen with a &lt;code&gt;PersonView&lt;/code&gt;, another &lt;code&gt;@Composable&lt;/code&gt; function&lt;/li&gt;
&lt;li&gt;➐ a &lt;code&gt;PersonView&lt;/code&gt; is only made of one &lt;code&gt;Text&lt;/code&gt;, which content is the person's id followed by first and last name&lt;/li&gt;
&lt;li&gt;➑ the &lt;code&gt;Text&lt;/code&gt; takes the full width of the screen (and content is left-aligned by default -- is it localized?)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;data&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Int&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;lastname&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String?&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;🄌&lt;/span&gt;

&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;LazyColumn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➎&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PersonView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➏&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;PersonView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➏&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;lastname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"(&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;) &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;lastname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➑&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To provide a list of persons to &lt;code&gt;PersonsList&lt;/code&gt;, the calling code must be changed a bit:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ create a mocked list of 300 persons, odd ones don't have a last name&lt;/li&gt;
&lt;li&gt;➋ we will change the list of persons and let's take the good habit of passing any data to the UI as &lt;code&gt;State&lt;/code&gt;. &lt;br/&gt;
     This is not required though, passing &lt;code&gt;p&lt;/code&gt; will equally work for static content as it is now.&lt;/li&gt;
&lt;li&gt;➌ skipping unchanged constructor parameters in this snippet&lt;/li&gt;
&lt;li&gt;➍ pass the persons&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@OptIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExperimentalMaterial3Api&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;AndroLMSScaffold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"fn&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"ln&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result looks quite plain, but data is displayed and scrolling works:&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot simplistic display of a list of persons" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/simplistic_list_of_persons.png"/&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/components/scaffold"&gt;Scaffold component doc and code example - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/layouts/basics#standard-layouts"&gt;Standard layouts, including Column - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/lists#lazy"&gt;Lazy lists - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/compose/foundation/lazy/package-summary#LazyColumn(androidx.compose.ui.Modifier,androidx.compose.foundation.lazy.LazyListState,androidx.compose.foundation.layout.PaddingValues,kotlin.Boolean,androidx.compose.foundation.layout.Arrangement.Vertical,androidx.compose.ui.Alignment.Horizontal,androidx.compose.foundation.gestures.FlingBehavior,kotlin.Boolean,kotlin.Function1)"&gt;Lazy column documentation - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="improve-personview"&gt;Improve PersonView&lt;a class="headerlink" href="#improve-personview" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The least improvement to make is to have a clearer separation of the people lines and plan for future touch actions on 
them, highlighting the sensitive zone of each line.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ the &lt;code&gt;Card&lt;/code&gt; function adds a background with rounded corners out of the box &lt;/li&gt;
&lt;li&gt;➋ adds a little distance between cards&lt;/li&gt;
&lt;li&gt;➌ just add previous &lt;code&gt;Text&lt;/code&gt; as content for now. &lt;code&gt;Card&lt;/code&gt; is a container and would make it easy to add an icon, multiple texts with diverse alignments, ...&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;PersonView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Card&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;5.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;lastname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;" "&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;lastname&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"(&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;) &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;person&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="n"&gt;lastname&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Screenshot display of a list of persons with Card" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/PersonView_with_a_Card.png"/&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/components/card"&gt;The Card base component - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="search-field"&gt;Search field&lt;a class="headerlink" href="#search-field" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h3 id="add-a-textfield"&gt;Add a TextField&lt;a class="headerlink" href="#add-a-textfield" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To allow searching a person, I'll add an input field between the top bar and the list of persons.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ using a &lt;code&gt;Column&lt;/code&gt; to put the search field "on top" of the list of persons, withing the content of the &lt;code&gt;Scaffold&lt;/code&gt; 
     component. Note that the &lt;code&gt;Column&lt;/code&gt; receives the modifier from &lt;code&gt;Scaffold&lt;/code&gt; not the &lt;code&gt;LazyColumn&lt;/code&gt; anymore.&lt;/li&gt;
&lt;li&gt;➋ using a &lt;code&gt;Composable&lt;/code&gt; function for the search field is overkill at this stage since it contains a single component
     but this will become useful as the component becomes more complex&lt;/li&gt;
&lt;li&gt;➌ add a &lt;code&gt;10&lt;/code&gt; "dp" (for Density Independent Pixel, aka. dpi) between the search field and the list&lt;/li&gt;
&lt;li&gt;➍ Using an &lt;code&gt;OutlinedTextField&lt;/code&gt;, only the style changes and I believe it looks much better at very low cost&lt;/li&gt;
&lt;li&gt;➎ parameters &lt;code&gt;value&lt;/code&gt; and &lt;code&gt;onValueChange&lt;/code&gt; are discussed below (TODO link). They are mandatory, so provide empty values&lt;/li&gt;
&lt;li&gt;➏ use "Search" as label. it is plain text but could easily include an icon or whatever. Out of the box, the label 
     neatly appears within the text field until the user focuses on it, and it moves to the top-left and over the outline. &lt;/li&gt;
&lt;li&gt;➐ limit the field to display only one line. At this stage, user can use return to create more than one line, and they
     won't be visible.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;LazyColumn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PersonView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OutlinedTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➎&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;onValueChange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➎&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➏&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;singleLine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Screenshot OutlinedTextField out of focus" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/Plain_OutlinedTextField_out_of_focus.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot OutlinedTextField in focus" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/Plain_OutlinedTextField_in_focus.png"/&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://m2.material.io/design/layout/pixel-density.html#density-independence"&gt;Density independence and DP - Material Design&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/text/user-input#choose-textfield"&gt;Choose TextField implementation - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="react-upon-line-return"&gt;React upon line return&lt;a class="headerlink" href="#react-upon-line-return" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In its current form, the TextField displays only one line but accepts line returns to create more than one.&lt;/p&gt;
&lt;p&gt;I'd rather have search triggered when the user hits enter/line return and use the content of the &lt;code&gt;TextField&lt;/code&gt; to filter the list.
As a first step, I'll display the filtering string in the bottom bar.&lt;/p&gt;
&lt;p&gt;This can be achieved with &lt;code&gt;TextField&lt;/code&gt; built-in &lt;code&gt;keyboardOptions&lt;/code&gt; :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ define a state &lt;code&gt;string&lt;/code&gt; variable named &lt;code&gt;searchQuery&lt;/code&gt; to hold the value of the search&lt;/li&gt;
&lt;li&gt;➋ &lt;code&gt;topBar&lt;/code&gt; is unchanged&lt;/li&gt;
&lt;li&gt;➌ the &lt;code&gt;bottomBar&lt;/code&gt; will display "Displaying everything" unless &lt;code&gt;searchQuery&lt;/code&gt; has content. It will be automatically updated when &lt;code&gt;searchQuery&lt;/code&gt; is updated&lt;/li&gt;
&lt;li&gt;➍ pass a function to &lt;code&gt;PersonsList&lt;/code&gt; (see below) that takes some text and set it as value of &lt;code&gt;searchQuery&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;➎ &lt;code&gt;PersonsList&lt;/code&gt; now accepts a function and pass it as is to &lt;code&gt;SearchField&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;➏ &lt;code&gt;SearchField&lt;/code&gt; now accepts a function argument. This function takes a single &lt;code&gt;string&lt;/code&gt; argument and returning nothing&lt;/li&gt;
&lt;li&gt;➐ define a state &lt;code&gt;string&lt;/code&gt; variable named &lt;code&gt;localText&lt;/code&gt; to hold the content of the textfield. Using parameter &lt;code&gt;onValueChange&lt;/code&gt; and a lambda, this variable is updated with every change of the &lt;code&gt;TextField&lt;/code&gt; content.&lt;/li&gt;
&lt;li&gt;➑ when &lt;code&gt;imeAction&lt;/code&gt; is &lt;code&gt;ImeAction.Search&lt;/code&gt;, an amplifying glass is displayed on the keyboard. No new line can be added to the &lt;code&gt;TextField&lt;/code&gt;, instead a keyboard action called 'search' is triggered.&lt;/li&gt;
&lt;li&gt;➒ define a &lt;code&gt;keyboardActions&lt;/code&gt; when 'search' is triggered, function &lt;code&gt;onSearchStringChange&lt;/code&gt; is called with the current value of &lt;code&gt;localText&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@OptIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExperimentalMaterial3Api&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;AndroLMSScaffold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"fn&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"ln&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;searchQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;topBar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bottomBar&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;BottomAppBar&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;containerColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;primaryContainer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;contentColor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MaterialTheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;colorScheme&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;primary&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;textAlign&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TextAlign&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Center&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;searchQuery&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isNotEmpty&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Searching for &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;searchQuery&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;..."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"Displaying everything"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;searchQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➎&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Column&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➎&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;LazyColumn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;start&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;top&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;bottom&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0.&lt;/span&gt;&lt;span class="n"&gt;dp&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;items&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PersonView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;item&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➏&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OutlinedTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;onValueChange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;singleLine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyboardOptions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KeyboardOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imeAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ImeAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➑&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyboardActions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KeyboardActions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➒&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Screenshot Amplifying glass on the keyboard" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/amplifying_glass_on_the_keyboard.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Screenshot Search string in bottom bar" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/search_string_in_bottom_bar.png"/&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;In a question on how to hide the keyboard (see &lt;a href="#hide-keyboard-upon-line-return"&gt;below&lt;/a&gt;), a user demonstrates &lt;a href="https://stackoverflow.com/q/69124822"&gt;how to use &lt;code&gt;ImeAction.search&lt;/code&gt; - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/develop/ui/compose/text/user-input#state-practices"&gt;Best practices with TextField state - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://medium.com/androiddevelopers/effective-state-management-for-textfield-in-compose-d6e5b070fbe5"&gt;Effective State Management for TextFields - Medium&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="hide-keyboard-upon-line-return"&gt;Hide keyboard upon line return&lt;a class="headerlink" href="#hide-keyboard-upon-line-return" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The keyboard taking a big share of the screen, I was immediately frustrated not seing the whole list once I hit search.&lt;/p&gt;
&lt;p&gt;To hide the keyboard upon hitting search:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ trigger the ImeAction &lt;code&gt;Done&lt;/code&gt; to hide the keyboard and presumably release focus. &lt;code&gt;TextField&lt;/code&gt; keeps it in this case, though. I assume because no other component can take it.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OutlinedTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;onValueChange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;singleLine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyboardOptions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KeyboardOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imeAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ImeAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyboardActions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KeyboardActions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;defaultKeyboardAction&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ImeAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Done&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Behavior upon triggering the keyboard action is not specifically defined, and could be platform dependant/change over time.&lt;/p&gt;
&lt;p&gt;An alternative is to use &lt;code&gt;LocalSoftwareKeyboardController&lt;/code&gt;, which is specific to the behavior we are looking for, and will
come in handy when we can't access the &lt;code&gt;KeyboardActionScope&lt;/code&gt; (the type exposing function &lt;code&gt;defaultKeyboardAction&lt;/code&gt;):&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ get the current &lt;code&gt;LocalSoftwareKeyboardController&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;➋ call the &lt;code&gt;hide&lt;/code&gt; function. Usage of &lt;code&gt;?.&lt;/code&gt; operator appears to be required. &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;keyboardController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LocalSoftwareKeyboardController&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;current&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OutlinedTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;value&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;onValueChange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;label&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Text&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;fillMaxWidth&lt;/span&gt;&lt;span class="p"&gt;(),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;singleLine&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyboardOptions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KeyboardOptions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;imeAction&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ImeAction&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Search&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyboardActions&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;KeyboardActions&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearch&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;keyboardController&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="na"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}),&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/76600586"&gt;Hide the keyboard with ImeAction.Done after hitting search - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/63696027"&gt;Use LocalSoftwareKeyboardController to hide the current software keyboard - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/reference/kotlin/androidx/compose/ui/text/input/ImeAction"&gt;IMEAction - API reference&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="add-icon-to-clear-search"&gt;Add icon to clear search&lt;a class="headerlink" href="#add-icon-to-clear-search" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Out of curiosity rather than out of necessity, I wanted to find out how I could implement a clear button on the search field.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;TextField&lt;/code&gt; defines a trailing icon out of the box. It's only a matter of adding some behavior to it and find a way to 
display it only when the TextField is not empty:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ other parameters unchanged&lt;/li&gt;
&lt;li&gt;➋ &lt;code&gt;if&lt;/code&gt; could be used and be a little shorter, but I like how using &lt;code&gt;when&lt;/code&gt; makes the code more descriptive&lt;/li&gt;
&lt;li&gt;➌ use &lt;code&gt;localText.isNotEmpty()&lt;/code&gt; to display the icon only when the TextField has some content&lt;/li&gt;
&lt;li&gt;➍ use system's icon for 'Clear'&lt;/li&gt;
&lt;li&gt;➎ hide the keyboard&lt;/li&gt;
&lt;li&gt;➏ clear the &lt;code&gt;TextField&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;➐ update the bottom bar&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SearchField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;Unit&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;keyboardController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;LocalSoftwareKeyboardController&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;current&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;OutlinedTextField&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;trailingIcon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;when&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isNotEmpty&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Icon&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;Icons&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Default&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;Clear&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;contentDescription&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"clear search"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;clickable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;keyboardController&lt;/span&gt;&lt;span class="o"&gt;?.&lt;/span&gt;&lt;span class="na"&gt;hide&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➎&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;localText&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➏&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➐&lt;/span&gt;
&lt;span class="w"&gt;                    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="Screenshot Clear TextField button" src="https://www.javatronic.fr/images/2024-10-11_create_an_android_app_from_scratch_part_3/clear_textfield_button.png"/&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/68483797"&gt;Trailing icon to clear TextField - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/71887430"&gt;Display Trailing icon only when TextField is not empty - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="filter-the-list-of-persons"&gt;Filter the list of persons&lt;a class="headerlink" href="#filter-the-list-of-persons" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Finally, it's time to filter the content of the list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ move variable &lt;code&gt;p&lt;/code&gt; with dummy content to a function implementing filtering with (really) dummy code&lt;/li&gt;
&lt;li&gt;➋ assign variable &lt;code&gt;person&lt;/code&gt; with list of persons filtered by with an empty search string&lt;/li&gt;
&lt;li&gt;➌ when search string is modified, assign variable &lt;code&gt;person&lt;/code&gt; with the filtered list of persons&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;searchPersons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1.&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="m"&gt;300&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;map&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Person&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"fn&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;%&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"ln&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;filter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;it&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;firstname&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;contains&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nd"&gt;@OptIn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ExperimentalMaterial3Api&lt;/span&gt;&lt;span class="o"&gt;::&lt;/span&gt;&lt;span class="n"&gt;class&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nd"&gt;@Composable&lt;/span&gt;
&lt;span class="kd"&gt;fun&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;AndroLMSScaffold&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;searchPersons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kd"&gt;var&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;searchQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;remember&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mutableStateOf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Scaffold&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;})&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;PersonsList&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;onSearchStringChange&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;searchQuery&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;persons&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;searchPersons&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;modifier&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Modifier&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;padding&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;innerPadding&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Android"></category></entry><entry><title>Create an Android app from scratch, with CI, and no knowledge - Part 2</title><link href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/" rel="alternate"></link><published>2024-09-14T00:00:00+02:00</published><updated>2024-09-14T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-09-14:/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/</id><summary type="html">
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; This is a multi-part article&lt;/p&gt;
&lt;p&gt;You're reading part 2.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/"&gt;Part 1&lt;/a&gt; focuses on bootstrapping an Android app dev project and run it on an emulated device&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/"&gt;Part 2&lt;/a&gt; focuses on deploying the app to my phone and create a CI pipeline producing APKs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/"&gt;Part 3&lt;/a&gt; focuses on basic Jetpack Compose …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; This is a multi-part article&lt;/p&gt;
&lt;p&gt;You're reading part 2.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/"&gt;Part 1&lt;/a&gt; focuses on bootstrapping an Android app dev project and run it on an emulated device&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/"&gt;Part 2&lt;/a&gt; focuses on deploying the app to my phone and create a CI pipeline producing APKs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/"&gt;Part 3&lt;/a&gt; focuses on basic Jetpack Compose and Kotlin programming to create a demo UI for LMS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="deploy-to-my-phone"&gt;Deploy to my phone&lt;a class="headerlink" href="#deploy-to-my-phone" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="build-the-project"&gt;Build the project&lt;a class="headerlink" href="#build-the-project" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Two options&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;use Android Studio&lt;ul&gt;
&lt;li&gt;deploying the app the emulator automatically builds the app (see &lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/#run-the-app"&gt;Run the app&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;otherwise &lt;code&gt;Build &amp;gt; Make project&lt;/code&gt; or the keyboard shortcut (CTRL+F9 on Ubuntu Gnome)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;use the command line&lt;ul&gt;
&lt;li&gt;&lt;code&gt;./gradlew build&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="create-signed-apks"&gt;Create signed APKs&lt;a class="headerlink" href="#create-signed-apks" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="with-android-studio"&gt;With Android Studio&lt;a class="headerlink" href="#with-android-studio" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;I selected &lt;code&gt;Build &amp;gt; Generate Signed App Bundle / APK...&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;I selected &lt;code&gt;APK&lt;/code&gt; as I target only my phone (and not Google Play)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Select APK and click next" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/generate_signed_apk_select_apk.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I selected &lt;code&gt;Create new&lt;/code&gt; to create a keystore with the wizard, as I don't have one yet&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Click Create new" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/generate_signed_apk_keystore.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I input the following keystore details&lt;ul&gt;
&lt;li&gt;location: &lt;code&gt;[path to project]/app/signing_keystore.jks&lt;/code&gt;, this location makes it straightforward to reference it from Gradle (see &lt;a href="#from-the-command-line"&gt;From the command line&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;I used strong passwords for both the keystore and the key&lt;/li&gt;
&lt;li&gt;I named the key &lt;code&gt;release&lt;/code&gt; (because this matches the build signing configuration in Gradle (see &lt;a href="#from-the-command-line"&gt;From the command line&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;I only filed the &lt;code&gt;Organization&lt;/code&gt; with &lt;code&gt;javatronic.fr&lt;/code&gt; as I don't see the point of providing any personal data&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Input keystore and key details" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/generate_signed_apk_new_keystore.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Click on &lt;code&gt;Create&lt;/code&gt; creates the keystore and shows the previous screen with all fields completed&lt;/li&gt;
&lt;li&gt;Click on &lt;code&gt;Next&lt;/code&gt; and make sure to select at least build variant &lt;code&gt;release&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;the build variant &lt;code&gt;debug&lt;/code&gt; actually uses a Google's signing key, see &lt;a href="#verify-the-apk-is-signed"&gt;Verify the APK is signed&lt;/a&gt; (this can be overridden, but it doesn't matter at this point)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Select build variants" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/generate_signed_apk_build_variants.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Android Studio starts a Gradle build with targets &lt;code&gt;[:app:assembleDebug, :app:assembleRelease]&lt;/code&gt; (if both variants were selected)&lt;ul&gt;
&lt;li&gt;the logs are visible in the build tab as any other build&lt;/li&gt;
&lt;li&gt;the APKs are written to directories &lt;code&gt;app/release&lt;/code&gt; and &lt;code&gt;app/debug&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/publish/app-signing#generate-key"&gt;Generate an upload key and keystore with Android Studio - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="from-the-command-line"&gt;From the command line&lt;a class="headerlink" href="#from-the-command-line" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Building from the command line requires a keystore, its password, a key alias and the key password.&lt;/p&gt;
&lt;p&gt;I used the one created with Android Studio but Java JDK's &lt;code&gt;keytool&lt;/code&gt; utility can be used as well (not tested).&lt;/p&gt;
&lt;p&gt;Modify &lt;code&gt;app/build.gradle.kts&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;before the &lt;code&gt;buildTypes&lt;/code&gt; bloc, add a signing configuration named &lt;code&gt;release&lt;/code&gt;. It describes where and how to read the signing key.&lt;ul&gt;
&lt;li&gt;➊: create and specify the name of configuration&lt;/li&gt;
&lt;li&gt;➋: path can be absolute (not great) or relative to the current Gradle file&lt;/li&gt;
&lt;li&gt;➌: the name of the key to use (there can be more than one in a keystore)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;signingConfigs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;create&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"release"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;storeFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"signing_keystore.jks"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;storePassword&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"the_store_password"&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;keyAlias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"release"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;keyPassword&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"the_key_password"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; Don't use passwords in clear-text&lt;/p&gt;
&lt;p&gt;Use of password written in clear-text in &lt;code&gt;build.gradle.kts&lt;/code&gt; is bad. A better way, using environment variables, is
described below.&lt;/p&gt;
&lt;p&gt;It's ok to use locally for testing. Do not push it to GitHub (or any other non-local place) unless you intend to
delete and drop the keystore, and not use these passwords ever again. &lt;/p&gt;
&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;modify the &lt;code&gt;release&lt;/code&gt; bloc in &lt;code&gt;buildTypes&lt;/code&gt; to reference and use this new signing configuration&lt;ul&gt;
&lt;li&gt;➊: reference the signing configuration with name &lt;code&gt;release&lt;/code&gt; created above&lt;/li&gt;
&lt;li&gt;➋ and ➌: as is from Android Developer reference&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;buildTypes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;release&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;signingConfig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;signingConfigs&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getByName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"release"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;isMinifyEnabled&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;proguardFiles&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;getDefaultProguardFile&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"proguard-android-optimize.txt"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="s"&gt;"proguard-rules.pro"&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="3"&gt;
&lt;li&gt;Generate the signed APKs (both &lt;code&gt;debug&lt;/code&gt; and &lt;code&gt;release&lt;/code&gt;, the former appears to be implicit) with&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./gradlew&lt;span class="w"&gt; &lt;/span&gt;build
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="4"&gt;
&lt;li&gt;The signed APKs are generated in &lt;code&gt;app/build/outputs/apk/debug/&lt;/code&gt; and &lt;code&gt;app/build/outputs/apk/release/&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/build/building-cmdline#gradle_signing"&gt;Configure Gradle to sign your app - Android developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/build/building-cmdline#sign_cmdline"&gt;Create a keystore for Android signing with keytool - Android developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="install-the-app"&gt;Install the app&lt;a class="headerlink" href="#install-the-app" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I downloaded the release APK onto my phone via SSH from my NAS (because I had this method readily available, but email,
Google Drive or many other ways will do).&lt;/p&gt;
&lt;p&gt;On the phone, enable Installation from Unknown Sources:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open &lt;code&gt;Paramètres&lt;/code&gt; (&lt;code&gt;Settings&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Sécurité et confidentialité&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Autres paramètres de sécurité&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Open &lt;code&gt;Installation applis inconnues&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;Amaze&lt;/code&gt; (or any other tool intended to open the APK with)&lt;/li&gt;
&lt;li&gt;Go to &lt;code&gt;Amaze&lt;/code&gt;, find the APK, click on it and install it&lt;/li&gt;
&lt;li&gt;Start &lt;code&gt;AndroLMS&lt;/code&gt; like any other app&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://medium.com/@msowski/release-your-apps-apk-file-and-deploy-it-on-your-device-66a5a2177ac8"&gt;Release your app’s APK file and deploy it on your device by Msowski&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://play.google.com/store/apps/details?id=com.amaze.filemanager"&gt;Amaze file manager - Google Play&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="create-an-android-ci-pipeline"&gt;Create an Android CI pipeline&lt;a class="headerlink" href="#create-an-android-ci-pipeline" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The goal is to have a GitHub Action workflow build and publish APKs with GitHub actions.&lt;/p&gt;
&lt;p&gt;This can be achieved with the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Java&lt;/li&gt;
&lt;li&gt;Build the project with Gradle, securely providing the key to sign the APK&lt;/li&gt;
&lt;li&gt;Upload the APKs as GitHub artifacts&lt;/li&gt;
&lt;li&gt;Add a comment to the PR (when building on a PR) with a link to download the APKs&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="adapt-github-workflow-to-a-monorepo-setup"&gt;Adapt GitHub workflow to a monorepo setup&lt;a class="headerlink" href="#adapt-github-workflow-to-a-monorepo-setup" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The &lt;code&gt;PyLMS&lt;/code&gt; repository contains a Python project. I want to add the Android &lt;code&gt;AndroLMS&lt;/code&gt; project to the same repo and soon rename the repository to &lt;code&gt;LMS&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I've decided to move all Python code to subdirectory &lt;code&gt;python&lt;/code&gt; and put the Android project into the &lt;code&gt;android&lt;/code&gt; subdirectory.&lt;/p&gt;
&lt;p&gt;The existing workflow building the Python project must be adapted:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊: Rename some steps for consistency&lt;/li&gt;
&lt;li&gt;➋: run the steps in the &lt;code&gt;python&lt;/code&gt; subdirectory and not from root anymore&lt;ul&gt;
&lt;li&gt;depending on the step's implementation, how this is achieved varies&lt;/li&gt;
&lt;li&gt;&lt;code&gt;working-directory&lt;/code&gt; works for raw steps&lt;/li&gt;
&lt;li&gt;commonly, steps using an action accepts &lt;code&gt;with.working-directory&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;SonarCloud takes &lt;code&gt;with.projectBaseDir&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;➌: Trigger the job only when change happens in the &lt;code&gt;pyton&lt;/code&gt; subdirectory&lt;ul&gt;
&lt;li&gt;except changes to &lt;code&gt;README.md&lt;/code&gt;, as obviously it does not impact the Python artefacts&lt;/li&gt;
&lt;li&gt;note the &lt;code&gt;!&lt;/code&gt; at the beginning of the path to exclude it&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;PyLMS CI&lt;/span&gt;
&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;main&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➌&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"python/**"&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"!python/README.md"&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;synchronize&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reopened&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➌&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"python/**"&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"!python/README.md"&lt;/span&gt;
&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;python-ci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;runs-on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ubuntu-latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;fetch-depth&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;0&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# Shallow clones should be disabled for a better relevancy of analysis&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Set up Python 3.10&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/setup-python@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;python-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"3.10"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;check-format&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make check-format&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;working-directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;tests&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;coactions/setup-xvfb@v1.0.1&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make test-ci&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;working-directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SonarCloud Scan&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;SonarSource/sonarcloud-github-action@master&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;GITHUB_TOKEN&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.GITHUB_TOKEN }}&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;# Needed to get PR information, if any&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;projectBaseDir&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python/&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;python-build&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;pull-requests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;write&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;runs-on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ubuntu-latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v4&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Set up Python 3.10&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/setup-python@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;python-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"3.10"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;build&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;coactions/setup-xvfb@v1.0.1&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;make build&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;working-directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;python&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://en.wikipedia.org/wiki/Monorepo"&gt;Monorepo - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/writing-workflows/choosing-when-your-workflow-runs/triggering-a-workflow#using-filters-to-target-specific-paths-for-pull-request-or-push-events"&gt;Using filters to target specific paths for pull request or push events - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsworking-directory"&gt;jobs.&amp;lt;job_id&amp;gt;.steps[*].working-directory - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.sonarsource.com/sonarcloud/advanced-setup/ci-based-analysis/github-actions-for-sonarcloud/#github-actions-yml-file"&gt;Sample Github Action workflow for monorepo setup - SonarCloud doc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="build-android-apks-with-github-action"&gt;Build Android APKs with GitHub Action&lt;a class="headerlink" href="#build-android-apks-with-github-action" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Building the APKs with a Github Action workflow is the same as building from the command line (see &lt;a href="#from-the-command-line"&gt;From the command line&lt;/a&gt;),
except that it's not acceptable to have the keystore in Git.&lt;/p&gt;
&lt;p&gt;We need an alternative way to read it from the disk of the GitHub Action runner.&lt;/p&gt;
&lt;p&gt;The one way to access sensitive data in GitHub action is using secrets.&lt;/p&gt;
&lt;h3 id="change-gradle-build-to-securely-read-the-signing-key"&gt;Change Gradle build to securely read the signing key&lt;a class="headerlink" href="#change-gradle-build-to-securely-read-the-signing-key" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Let's change the Gradle build to:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Read the keystore from a file in the runner's filesystem's temporary folder when executed on a GitHub Action runner &lt;ul&gt;
&lt;li&gt;➊: The situation is detected by checking whether the environment variable &lt;code&gt;RUNNER_TEMP&lt;/code&gt; is set&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;RUNNER_TEMP&lt;/code&gt; directory is emptied at the beginning and end of each job, preventing leak&lt;/li&gt;
&lt;li&gt;➋: if not on a runner, read the keystore from the current directory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;➌: Fail if the subdirectory &lt;code&gt;androlms&lt;/code&gt; or the &lt;code&gt;keystore&lt;/code&gt; is not found&lt;ul&gt;
&lt;li&gt;explicit fail intends to ease debugging&lt;/li&gt;
&lt;li&gt;using a subdirectory to reduce the risk of collisions in a shared directory&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;➍: Read password from environment variables&lt;ul&gt;
&lt;li&gt;environment variables can securely be set from GitHub secrets&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;signingConfigs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;register&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"release"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyAlias&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"release"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;storePassword&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SIGNING_STORE_PASSWORD"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;keyPassword&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"SIGNING_KEY_PASSWORD"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➍&lt;/span&gt;

&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;runnerTemp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;System&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getenv&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"RUNNER_TEMP"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➊&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;runnerTemp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;storeFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;file&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"signing_keystore.jks"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➋&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;keystoreDir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;runnerTemp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"androlms"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="kd"&gt;val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;keystoreFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;File&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;keystoreDir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"signing_keystore.jks"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;keystoreDir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;throw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FileNotFoundException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;keystoreDir&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;absolutePath&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; not found"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;keystoreFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;exists&lt;/span&gt;&lt;span class="p"&gt;())&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="err"&gt;➌&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;throw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;FileNotFoundException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="n"&gt;keystoreFile&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;absolutePath&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s"&gt; not found"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;storeFile&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;keystoreFile&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/security-for-github-actions/security-guides/using-secrets-in-github-actions"&gt;Using secrets in GitHub Actions - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/store-information-in-variables#default-environment-variables"&gt;RUNNER_TEMP env var in Github Action - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://proandroiddev.com/how-to-securely-build-and-sign-your-android-app-with-github-actions-ad5323452ce"&gt;How To Securely Build and Sign Your Android App With GitHub Actions by Yanneck Reiß&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="create-github-repository-secrets"&gt;Create GitHub repository secrets&lt;a class="headerlink" href="#create-github-repository-secrets" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;GitHub secrets only accepts text, so we must encode the keystore (binary data) with Base64. &lt;code&gt;openssl&lt;/code&gt; is the best tool
in this context.&lt;/p&gt;
&lt;p&gt;The following prints the Base64 encoding of the keystore to the console.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;openssl&lt;span class="w"&gt; &lt;/span&gt;base64&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="w"&gt; &lt;/span&gt;app/signing_keystore.jks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In GitHub's UI of your repository, go to &lt;code&gt;Settings &amp;gt; Secrets and variables &amp;gt; Actions&lt;/code&gt; and click on &lt;code&gt;New Repository Secret&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;store the encoded keystore under secret &lt;code&gt;SIGNING_KEYSTORE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;store passwords under &lt;code&gt;SIGNING_STORE_PASSWORD&lt;/code&gt; and &lt;code&gt;SIGNING_KEY_PASSWORD&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Create New Repository secret on GitHub" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/create_new_repository_secret.png"/&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;The name of the secrets is not important but must be consistent with GitHub workflow steps (see &lt;a href="#create-the-github-action-job"&gt;Create the GitHub Action job&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;h3 id="create-the-github-action-job"&gt;Create the GitHub Action job&lt;a class="headerlink" href="#create-the-github-action-job" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Gradle has only one requirement: a Java JDK. Android requires Java 17+.&lt;/p&gt;
&lt;p&gt;Similarly to the Python project, the job:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ runs on pushes to the &lt;code&gt;main&lt;/code&gt; branch (and only that branch)&lt;/li&gt;
&lt;li&gt;➋ runs when Pull Request are opened, reopened and pushed to&lt;/li&gt;
&lt;li&gt;➌ runs only when changes are made to the &lt;code&gt;android&lt;/code&gt; subdirectory, except to the &lt;code&gt;README.md&lt;/code&gt; file&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;AndroLMS CI&lt;/span&gt;
&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;push&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;branches&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;main&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➌&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"android/**"&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"!android/README.md"&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;pull_request&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;types&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;opened&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;synchronize&lt;/span&gt;&lt;span class="p p-Indicator"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;reopened&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;paths&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➌&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"android/**"&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"!android/README.md"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The job has the following steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Write the keystore from the GitHub Repository secret and write it to the runner's disk&lt;ul&gt;
&lt;li&gt;➊ stores the value of secret &lt;code&gt;SIGNING_KEYSTORE&lt;/code&gt; into environment variable &lt;code&gt;ENCODED_STRING&lt;/code&gt; of the step&lt;/li&gt;
&lt;li&gt;➋ create directory &lt;code&gt;androlms&lt;/code&gt; in &lt;code&gt;$RUNNER_TEMP&lt;/code&gt; directory and decode the keystore from Base64 into file &lt;code&gt;${RUNNER_TEMP}/androlms/signing_keystore.jks&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Print the MD5 sum of the keystore (Optional - only for troubleshooting purpose)&lt;/li&gt;
&lt;li&gt;Check out the repository's content&lt;/li&gt;
&lt;li&gt;Install Java 17 using action &lt;code&gt;actions/setup-java@v4&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;➌ using &lt;code&gt;Temurin&lt;/code&gt; distribution because it is opensource and from the Eclipse Foundation &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install Gradle using Gradle's official action &lt;code&gt;gradle/actions/setup-gradle@v3&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Build the APKs&lt;ul&gt;
&lt;li&gt;➍ passing password as environment variables&lt;/li&gt;
&lt;li&gt;➎ running the same command as &lt;a href="#from-the-command-line"&gt;From the command line&lt;/a&gt; with the additional option &lt;code&gt;--no-daemon&lt;/code&gt; 
  as Gradle's daemon is slow to start and useless since we run Gradle only once&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;android-ci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;pull-requests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;write&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;runs-on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;ubuntu-latest&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;steps&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Decode Keystore&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;ENCODED_STRING&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.SIGNING_KEYSTORE }}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;TMP_KEYSTORE_FILE_PATH="${RUNNER_TEMP}/androlms"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;mkdir "${TMP_KEYSTORE_FILE_PATH}"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="no"&gt;echo "$ENCODED_STRING" | base64 --decode --ignore-garbage &amp;gt; "${TMP_KEYSTORE_FILE_PATH}/signing_keystore.jks"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Show Keystore checksum&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;md5sum "${RUNNER_TEMP}/androlms/signing_keystore.jks"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/checkout@v4&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Setup Java&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➌&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/setup-java@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;distribution&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;'temurin'&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;java-version&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;17&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Setup Gradle&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;gradle/actions/setup-gradle@v3&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Build with Gradle&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;SIGNING_STORE_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.SIGNING_STORE_PASSWORD }}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➍&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;SIGNING_KEY_PASSWORD&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ secrets.SIGNING_KEY_PASSWORD }}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➍&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;./gradlew build --no-daemon&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➎&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;working-directory&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;android&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/actions/setup-java"&gt;action to install Java (setup-java)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/gradle/actions/blob/main/docs/setup-gradle.md"&gt;action to install and run Gradle (setup-gradle)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="make-the-apks-available-for-download"&gt;Make the APKs available for download&lt;a class="headerlink" href="#make-the-apks-available-for-download" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The action from GitHub &lt;code&gt;actions/upload-artifact&lt;/code&gt; allows upload artifacts and make them available for download from the
Actions User Interface on GitHub.com of a specific run.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ the name of the archive, both in the UI and for the archive file.&lt;/li&gt;
&lt;li&gt;➋ put both the &lt;code&gt;debug&lt;/code&gt; and the &lt;code&gt;release&lt;/code&gt; APK in the archive&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;APKs upload&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/upload-artifact@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;AndroLMS_artifacts&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;android/app/build/outputs/apk/debug/AndroLMS-*.apk &lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;android/app/build/outputs/apk/release/AndroLMS-*.apk&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;img alt="screenshot Open GitHub Action UI of a specific run" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/go_to_action_ui.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Download the archive of a specific run" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/download_archive_from_action_ui.png"/&gt;&lt;/p&gt;
&lt;h2 id="shorten-retention-of-a-github-action-archive"&gt;Shorten retention of a GitHub action archive&lt;a class="headerlink" href="#shorten-retention-of-a-github-action-archive" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By default, uploaded archives are stored for 30 days. Especially for PRs, we don't need that long storage. For the main branch, we can always re-run the job.
So, let's be nice to the planet (and to GitHub) and shorten the retention:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;➊ set retention to 7 days&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;APKs upload&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;apk-upload-step&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/upload-artifact@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;AndroLMS_artifacts&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;android/app/build/outputs/apk/debug/AndroLMS-*.apk &lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;android/app/build/outputs/apk/release/AndroLMS-*.apk&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;retention-days&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="create-a-pr-comment-with-apk-download-link"&gt;Create a PR comment with APK download link&lt;a class="headerlink" href="#create-a-pr-comment-with-apk-download-link" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I find going to the UI of a specific run too complicated.&lt;/p&gt;
&lt;p&gt;I want to have the link to download in a comment on the PR, I only care about the latest built archives, and never mind
the email notifications with every comment on a PR that I configured, the quick access is worth the noise in my mailbox.&lt;/p&gt;
&lt;p&gt;Also, for the fun (and my convenience, a bit), let's add to the comment the last day the archive will be available.&lt;/p&gt;
&lt;p&gt;Let's modify the workflow:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make the number of days a env variable to share the value between steps&lt;ul&gt;
&lt;li&gt;➊ define env variable &lt;code&gt;UPLOAD_RETENTION&lt;/code&gt; for the whole workflow&lt;/li&gt;
&lt;li&gt;➋ use the env variable the &lt;code&gt;actions/upload-artifact@v4&lt;/code&gt; action&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;add a step computing the expiration date as a string with the Bash's &lt;code&gt;date&lt;/code&gt; command and make the value an output of the step&lt;ul&gt;
&lt;li&gt;➌ &lt;code&gt;echo "key=value" &amp;gt;&amp;gt; $GITHUB_OUTPUT&lt;/code&gt; is the new syntax to create a step output from command line within a runner &lt;/li&gt;
&lt;li&gt;➍ for other steps to access its output, a step must have an &lt;code&gt;id&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;add a step creating a pull request comment&lt;ul&gt;
&lt;li&gt;➎ using with action &lt;code&gt;thollander/actions-comment-pull-request@v2&lt;/code&gt;. Found this action and does the job.&lt;/li&gt;
&lt;li&gt;➏ using output of steps "APKs upload" (named &lt;code&gt;artifact-url&lt;/code&gt;) for the download URL and the date from step 
  "Compute expiration date" (named &lt;code&gt;expiration_date&lt;/code&gt;) to create a comment with dynamic content&lt;/li&gt;
&lt;li&gt;➐ to make the action recreate a comment every time the job runs, use both &lt;code&gt;comment_tag&lt;/code&gt; (for the action to find 
  its previous comment from run to another) and &lt;code&gt;mode: recreate&lt;/code&gt; (using &lt;code&gt;mode: upsert&lt;/code&gt; will not move the comment to
  the end of the conversation)&lt;/li&gt;
&lt;li&gt;➑ the same job is used on both PRs and the &lt;code&gt;main&lt;/code&gt; branch, use this condition to not execute this step for PRs, it
  would fail&lt;/li&gt;
&lt;li&gt;➒ to create the PR comment, the job must be given write permissions&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;AndroLMS CI&lt;/span&gt;
&lt;span class="nt"&gt;env&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;UPLOAD_RETENTION&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;7&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➊&lt;/span&gt;
&lt;span class="nt"&gt;on&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="nt"&gt;jobs&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;android-ci&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;permissions&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;pull-requests&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;write&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➒&lt;/span&gt;
&lt;span class="p p-Indicator"&gt;[&lt;/span&gt;&lt;span class="nv"&gt;...&lt;/span&gt;&lt;span class="p p-Indicator"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;APKs upload&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;apk-upload-step&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➍&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;actions/upload-artifact@v4&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;AndroLMS_artifacts&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;path&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p p-Indicator"&gt;|&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;android/app/build/outputs/apk/debug/AndroLMS-*.apk &lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="no"&gt;android/app/build/outputs/apk/release/AndroLMS-*.apk&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;retention-days&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ env.UPLOAD_RETENTION }}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➋&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Compute expiration date&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;id&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;expiration-date&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➍&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;run&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;echo "expiration_date=$(date --date ${UPLOAD_RETENTION}d +%Y-%m-%d)" &amp;gt;&amp;gt; $GITHUB_OUTPUT&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➌&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p p-Indicator"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;uses&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;thollander/actions-comment-pull-request@v2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➎&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;if&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;${{ github.event_name == 'pull_request' }}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➑&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nt"&gt;with&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;message&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;Latest AndroLMS artifacts available from ${{ steps.apk-upload-step.outputs.artifact-url }} until ${{ steps.expiration-date.outputs.expiration_date }}.&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➏&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;comment_tag&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;apk-upload&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➐&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nt"&gt;mode&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="l l-Scalar l-Scalar-Plain"&gt;recreate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# ➐&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is a sample of the result&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot PR comment to download AndroLMS archive" src="https://www.javatronic.fr/images/2024-09-14_create_an_android_app_from_scratch_part_2/androlms_artifact_download_comment.png"/&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/actions/upload-artifact?tab=readme-ov-file#using-outputs"&gt;Get the artifact download URL from the &lt;code&gt;upload-artifact&lt;/code&gt; action - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/writing-workflows/choosing-what-your-workflow-does/passing-information-between-jobs"&gt;Passing information between jobs - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/thollander/actions-comment-pull-request?tab=readme-ov-file#permissions"&gt;Write permission to create a PR comment - &lt;code&gt;actions-comment-pull-request&lt;/code&gt; action doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.github.com/en/actions/writing-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsif"&gt;Conditionally run a step, including an exemple for running only in Pull Request - GitHub doc&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/#examples"&gt;Create step output from Command Line - GitHub blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/60942437"&gt;Compute the current date in GitHub action (but uses deprecated syntax) - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="verify-the-apk-is-signed"&gt;Verify the APK is signed&lt;a class="headerlink" href="#verify-the-apk-is-signed" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Finally, we need to confirm the produced APKs are signed as expected.&lt;/p&gt;
&lt;p&gt;After downloading the AndroLMS archives from GitHub, use the &lt;code&gt;apksigner&lt;/code&gt; tool from the Android SDK.&lt;/p&gt;
&lt;p&gt;The &lt;code&gt;--print-certs&lt;/code&gt; options shows digest and certificates fields of the key used to sign the APK:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="o"&gt;[&lt;/span&gt;some_path&lt;span class="o"&gt;]&lt;/span&gt;/sdk/build-tools/34.0.0/apksigner&lt;span class="w"&gt; &lt;/span&gt;apksigner&lt;span class="w"&gt; &lt;/span&gt;verify&lt;span class="w"&gt; &lt;/span&gt;--print-certs&lt;span class="w"&gt; &lt;/span&gt;/tmp/AndroLMS-1.0-release.apk&lt;span class="w"&gt; &lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate DN: O=javatronic.fr&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate SHA-256 digest: e8b09ece77c0f37a24c9cc5dbe1f83a16ffc563a337c03d938324c71b2c01ea9&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate SHA-1 digest: c968ba63a8b8270e23d7c16247805f6fcb00333a&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate MD5 digest: 26aee2775b3f788fc33dea2611ad7e31&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;apksigner&lt;/code&gt; of the debug APK shows Google's key is used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="o"&gt;[&lt;/span&gt;some_path&lt;span class="o"&gt;]&lt;/span&gt;/sdk/build-tools/34.0.0/apksigner&lt;span class="w"&gt; &lt;/span&gt;apksigner&lt;span class="w"&gt; &lt;/span&gt;verify&lt;span class="w"&gt; &lt;/span&gt;--print-certs&lt;span class="w"&gt; &lt;/span&gt;/tmp/AndroLMS-1.0-debug.apk&lt;span class="w"&gt;              &lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate DN: C=US, O=Android, CN=Android Debug&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate SHA-256 digest: 0f244cc1996da11be5d27a08c58dcc58519fcb88f6a980ad2706cfafa9dbb373&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate SHA-1 digest: 15d42424d81e9ca193bbcd0a7f95c3f39dca7711&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate MD5 digest: 3b59ba84d68a1f45d71d528a4ff34836&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt;Warning&lt;/p&gt;
&lt;p&gt;One can find many articles advising using Java JDK's &lt;code&gt;keytool&lt;/code&gt; or &lt;code&gt;jarsigner&lt;/code&gt; tool to verify an APK is signed.&lt;/p&gt;
&lt;p&gt;Those are most likely outdated as Jar signing was the first signing scheme used and appears to not be used by
default anymore. See below for insights.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Using &lt;code&gt;--verbose&lt;/code&gt; shows that &lt;code&gt;apksigner&lt;/code&gt; verifies multiple signature scheme and informs which one is used:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;/&lt;span class="o"&gt;[&lt;/span&gt;some_path&lt;span class="o"&gt;]&lt;/span&gt;/sdk/build-tools/34.0.0/apksigner&lt;span class="w"&gt; &lt;/span&gt;apksigner&lt;span class="w"&gt; &lt;/span&gt;verify&lt;span class="w"&gt; &lt;/span&gt;--verbose&lt;span class="w"&gt; &lt;/span&gt;--print-certs&lt;span class="w"&gt; &lt;/span&gt;/tmp/AndroLMS-1.0-release.apk&lt;span class="w"&gt;              &lt;/span&gt;
Verifies
Verified&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;v1&lt;span class="w"&gt; &lt;/span&gt;scheme&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;JAR&lt;span class="w"&gt; &lt;/span&gt;signing&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
Verified&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;v2&lt;span class="w"&gt; &lt;/span&gt;scheme&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;APK&lt;span class="w"&gt; &lt;/span&gt;Signature&lt;span class="w"&gt; &lt;/span&gt;Scheme&lt;span class="w"&gt; &lt;/span&gt;v2&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;true&lt;/span&gt;
Verified&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;v3&lt;span class="w"&gt; &lt;/span&gt;scheme&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;APK&lt;span class="w"&gt; &lt;/span&gt;Signature&lt;span class="w"&gt; &lt;/span&gt;Scheme&lt;span class="w"&gt; &lt;/span&gt;v3&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
Verified&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;v3.1&lt;span class="w"&gt; &lt;/span&gt;scheme&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;APK&lt;span class="w"&gt; &lt;/span&gt;Signature&lt;span class="w"&gt; &lt;/span&gt;Scheme&lt;span class="w"&gt; &lt;/span&gt;v3.1&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
Verified&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;v4&lt;span class="w"&gt; &lt;/span&gt;scheme&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;APK&lt;span class="w"&gt; &lt;/span&gt;Signature&lt;span class="w"&gt; &lt;/span&gt;Scheme&lt;span class="w"&gt; &lt;/span&gt;v4&lt;span class="o"&gt;)&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
Verified&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;SourceStamp:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
Number&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;signers:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate DN: O=javatronic.fr&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate SHA-256 digest: e8b09ece77c0f37a24c9cc5dbe1f83a16ffc563a337c03d938324c71b2c01ea9&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate SHA-1 digest: c968ba63a8b8270e23d7c16247805f6fcb00333a&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 certificate MD5 digest: 26aee2775b3f788fc33dea2611ad7e31&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 key algorithm: RSA&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 key size (bits): 2048&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 public key SHA-256 digest: 211d040fd3924474e9052fb87eb549bc0e76cf96371d4a607f88046f88922e8c&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 public key SHA-1 digest: 72ad7d19e7cd951e92f9c2ea9756f28aac9d5367&lt;/span&gt;
Signer&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;#1 public key MD5 digest: 1faa2d71812f475b21e40663c158866d&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Android"></category></entry><entry><title>Create an Android app from scratch, with CI, and no knowledge - Part 1</title><link href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/" rel="alternate"></link><published>2024-09-13T00:00:00+02:00</published><updated>2024-09-13T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-09-13:/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/</id><summary type="html">
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; This is a multi-part article&lt;/p&gt;
&lt;p&gt;You're reading part 1.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/"&gt;Part 1&lt;/a&gt; focuses on bootstrapping an Android app dev project and run it on an emulated device&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/"&gt;Part 2&lt;/a&gt; focuses on deploying the app to my phone and create a CI pipeline producing APKs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/"&gt;Part 3&lt;/a&gt; focuses on basic Jetpack Compose …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt; This is a multi-part article&lt;/p&gt;
&lt;p&gt;You're reading part 1.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/13/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-1/"&gt;Part 1&lt;/a&gt; focuses on bootstrapping an Android app dev project and run it on an emulated device&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/09/14/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-2/"&gt;Part 2&lt;/a&gt; focuses on deploying the app to my phone and create a CI pipeline producing APKs&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.javatronic.fr/posts/2024/10/11/create-an-android-app-from-scratch-with-ci-and-no-knowledge-part-3/"&gt;Part 3&lt;/a&gt; focuses on basic Jetpack Compose and Kotlin programming to create a demo UI for LMS&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="the-context"&gt;The context&lt;a class="headerlink" href="#the-context" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Work on &lt;a href="https://github.com/lesaint/PyLMS/"&gt;PyLMS&lt;/a&gt; has proved that the approach is viable enough to continue.&lt;/p&gt;
&lt;p&gt;However, a CLI or a Desktop GUI are not the best to access the information I may store in the tool. 
Only my phone is (almost) always at reach when a "Lacune Mémorielle Sociale" (aka LMS) hits me.&lt;/p&gt;
&lt;p&gt;I need an Android App, but I have never programmed one (I only looked at Android programming quickly many years ago).&lt;/p&gt;
&lt;p&gt;Last Monday (today is Friday), I decided to create one, with the following goals and constraints:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;create a UI that demonstrates the feasibility of listing persons and filtering them by inputting text&lt;/li&gt;
&lt;li&gt;use state-of-the-art Android programming&lt;/li&gt;
&lt;li&gt;my phone is the only target&lt;/li&gt;
&lt;li&gt;demonstrate deployment on it&lt;/li&gt;
&lt;li&gt;demonstrate building APKs with Github Actions&lt;/li&gt;
&lt;li&gt;setup minimal quality control (with SonarCloud)&lt;/li&gt;
&lt;li&gt;refactor PyLMS repository to hold both PyLMS and the Android App&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Disclaimer&lt;/p&gt;
&lt;p&gt;This series describes what I did in less than 4 days, starting with zero knowledge on Android and Kotlin development, 
googling and reading my way toward a solution.&lt;/p&gt;
&lt;p&gt;Any Android- and Kotlin-related statement reflects the knowledge acquired over that short period.&lt;/p&gt;
&lt;p&gt;Of course, I'm skipping all the back and forth, tries and errors, and only describing the end result.&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="install-android-studio"&gt;Install Android Studio&lt;a class="headerlink" href="#install-android-studio" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Android Studio (Koala Feature Drop at the moment) is THE IDE for Android Development.&lt;/p&gt;
&lt;p&gt;I followed these steps to install it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;download from &lt;a href="https://developer.android.com/studio"&gt;Android Developers&lt;/a&gt; (&lt;a href="https://redirector.gvt1.com/edgedl/android/studio/ide-zips/2024.1.2.12/android-studio-2024.1.2.12-linux.tar.gz"&gt;direct link&lt;/a&gt;, skips the licence to skip the licence agreement screen)&lt;/li&gt;
&lt;li&gt;Unpack the &lt;code&gt;.tar.gz&lt;/code&gt; to an appropriate location (&lt;code&gt;~/DEV/Android_Studio&lt;/code&gt; in my case)
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tar xvfz android-studio-2024.1.2.12-linux.tar.gz
mv android-studio 2024.1.2.12
ln -s 2024.1.2.12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Install i386 libraries because I run a 64-bit version of Linux
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install libc6:i386 libncurses5:i386 libstdc++6:i386 lib32z1 libbz2-1.0:i386
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Open terminal and launch Android Studio
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;~/DEV/Android_Studio/current/bin/studio.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Do not import previous Android Studio settings&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Complete the Android Studio Setup Wizard&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I selected "custom install" but it would not let me install any other SDK than 35&lt;/li&gt;
&lt;li&gt;I selected &lt;code&gt;~/DEV/Android_Studio/android&lt;/code&gt; as destination&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Install Wizard Installation Type" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/setup_wizard_select_install_type.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Install Wizard SDK Componnents Setup" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/setup_wizard_sdk_components_setup.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Wizard advised configuring hardware acceleration for the emulator (see &lt;a href="#install-emulator-acceleration"&gt;Install Emulator Acceleration&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Install Wizard Emulator Settings" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/setup_wizard_emulator_settings.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create Desktop entry with &lt;code&gt;Tools &amp;gt; Create Desktop Entry...&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;Search &lt;code&gt;Android Studio&lt;/code&gt; in Gnome's application hub and add it to favorites&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/install#linux"&gt;Install Android Studio on Linux - Android Developers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/about/versions/14/setup-sdk"&gt;Set up the Android 14 SDK - Android Developers&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="install-android-sdk"&gt;Install Android SDK&lt;a class="headerlink" href="#install-android-sdk" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I checked &lt;code&gt;Settings &amp;gt; About my phone &amp;gt; About software&lt;/code&gt; in phone, it runs Android 14.&lt;/p&gt;
&lt;p&gt;I need to install Android SDK Platform 34 package for Android 14.0 ("UpsideDownCake") and remove SDK 35.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open Settings with &lt;code&gt;File &amp;gt; Settings&lt;/code&gt; and go to &lt;code&gt;Android SDKs&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Untick &lt;code&gt;Android API 35&lt;/code&gt; and tick &lt;code&gt;Android 14.0 ("UpsideDownCake")&lt;/code&gt; with API Level &lt;code&gt;34&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="screenshot Install Android SDK" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/install_android_sdk.png"/&gt;&lt;/p&gt;
&lt;h1 id="bootstrap-an-application"&gt;Bootstrap an application&lt;a class="headerlink" href="#bootstrap-an-application" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Use Android Studio &lt;code&gt;File &amp;gt; New &amp;gt; New Project...&lt;/code&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Android Studio Create Project wizard screen 1" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/new_project_wizard_1.png"/&gt;
&lt;img alt="screenshot Android Studio Create Project wizard screen 2" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/new_project_wizard_2.png"/&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;select template &lt;code&gt;Empty Activity&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Name: &lt;code&gt;AndroLMS&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Package: &lt;code&gt;fr.javatronic.lms.android&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="run-on-an-emulator"&gt;Run on an emulator&lt;a class="headerlink" href="#run-on-an-emulator" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="create-a-device"&gt;Create a device&lt;a class="headerlink" href="#create-a-device" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Open the Device Manager&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Create Virtual Device in Device Manager" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/create_virtual_device_in_device_manager.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open Create a new Hardware Profile&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Open New Hardware Profile" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/new_hardware_profile.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Create Galaxy S23 profile&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Create Hardware Profile screen" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/create_hardware_profile_screen.png"/&gt;
(S23 data comes from Samsung's skin website (see &lt;a href="#use-a-phone-skin"&gt;Use a phone skin&lt;/a&gt;))&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="install-emulator-acceleration"&gt;Install Emulator Acceleration&lt;a class="headerlink" href="#install-emulator-acceleration" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;Install and run &lt;code&gt;cpu-checker&lt;/code&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ sudo apt-get install cpu-checker
$ sudo sudo kvm-ok
INFO: /dev/kvm exists
KVM acceleration can be used
$ sudo apt-get remove cpu-checker
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Install KVM
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;verify with
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$ ~/DEV/Android_Studio/android/sdk/emulator/emulator -accel-check
INFO    | Storing crashdata in: /tmp/android-lesaint/emu-crash-35.1.20.db, detection is enabled for process: 711988
accel:
0
KVM (version 12) is installed and usable.
accel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.android.com/studio/run/emulator-acceleration#vm-linux"&gt;Configure VM acceleration on Linux - Android Developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/63975329"&gt;Checking if android emulator is using KVM accelation or not? - Stackoverflow&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="run-the-app"&gt;Run the app&lt;a class="headerlink" href="#run-the-app" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To run the app in Emulator:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Run the app in emulator" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/run_the_app_in_emulator.png"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Make sure the device created earlier is selected&lt;/li&gt;
&lt;li&gt;Maks sure &lt;code&gt;app&lt;/code&gt; is selected&lt;ul&gt;
&lt;li&gt;&lt;code&gt;app&lt;/code&gt; is the name of Gradle submodule that contains the Android App in the Gradle project generated by Android Studio&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on the 'Run' icon&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if the icon is disabled, make sure the Gradle configuration is synchronized. If so you may be seeing this banner. Click on &lt;code&gt;Sync&lt;/code&gt;. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="screenshot Run the app in emulator" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/run_the_app_in_emulator.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The emulated device's screen appears in a panel on the right-hand side of the IDE
   (screenshot of &lt;code&gt;AndroLMS&lt;/code&gt; MVP UI, not of the generated application)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="screenshot Emulated device screen" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/emulated_device_no_skin.png"/&gt;&lt;/p&gt;
&lt;h2 id="stop-the-emulator"&gt;Stop the emulator&lt;a class="headerlink" href="#stop-the-emulator" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Closing the tab with the device screen is not enough. To make sure the emulator is stopped, go to the Device Manager and click on the square icon.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Stop the emulator" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/stop_the_emulator.png"/&gt;&lt;/p&gt;
&lt;h2 id="use-a-phone-skin"&gt;Use a phone skin&lt;a class="headerlink" href="#use-a-phone-skin" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;A "skin" can be used to better visualize the application's look on the screen with the device's borders around it and 
the whole shape of the device.&lt;/p&gt;
&lt;p&gt;I googled and found a Samsung page where I can download a skin for the S23, with the specification of the S23's screen.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot S23 skin" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/s23_specifications.png"/&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download the skin's zip file from the &lt;a href="https://developer.samsung.com/galaxy-emulator-skin/galaxy-s.html"&gt;website&lt;/a&gt; to &lt;code&gt;~/DEV/Android_Studio/android/skin/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Unzip it&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the Device Manager and edit the S23 device&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Edit device in Device Manager" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/edit_device_from_device_manager.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Display advanced settings&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Show advanced settings of device" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/show_advanced_settings.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Scroll to the very bottom, tick "Enable device frame" and select the directory where the skin is stored &lt;code&gt;~/DEV/Android_Studio/android/skin/Galaxy_S23&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Show advanced settings of device" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/select_skin.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Stop the emulator (see &lt;a href="#stop-the-emulator"&gt;Stop the emulator&lt;/a&gt;) and run the app again (see &lt;a href="#run-the-app"&gt;Run the app&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot Emulated device screen with skin" src="https://www.javatronic.fr/images/2024-09-13_create_a_POC_android_app_from_scratch/emulated_device_with_skin.png"/&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;p&gt;Samsung documentation advises unchecking "Launch in the Running Devices tool window" to launch Android Emulator as a
standalone application and ensure correct rendering of the skin.&lt;/p&gt;
&lt;p&gt;I initially followed this advise, which opened the emulator in a new window rather than in a tab, but reverted as I
noticed the skin rendered correctly.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition hint"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developer.samsung.com/galaxy-emulator-skin/galaxy-s.html"&gt;Galaxy S skins downloads - Samsung developer&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developer.samsung.com/galaxy-emulator-skin/guide.html"&gt;Skin installation following instruction - Samsung developer&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="articles"></category><category term="Android"></category></entry><entry><title>Fix warning "Unable to import Android Lint report file(s)" in SonarQube/SonarCloud</title><link href="https://www.javatronic.fr/posts/2024/09/13/fix-warning-unable-to-import-android-lint-report-files-in-sonarqubesonarcloud/" rel="alternate"></link><published>2024-09-13T00:00:00+02:00</published><updated>2024-09-13T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-09-13:/posts/2024/09/13/fix-warning-unable-to-import-android-lint-report-files-in-sonarqubesonarcloud/</id><summary type="html">&lt;p&gt;I used Android Studio Koala Feature Drop | 2024.1.2 to create a new Android Application project (I used the 
"Empty Activity" template) and set up the SonarCloud analysis using the scanner for Gradle.&lt;/p&gt;
&lt;p&gt;I had the following warning in Gradle logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; Task :sonar
Unable to import Android Lint report …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I used Android Studio Koala Feature Drop | 2024.1.2 to create a new Android Application project (I used the 
"Empty Activity" template) and set up the SonarCloud analysis using the scanner for Gradle.&lt;/p&gt;
&lt;p&gt;I had the following warning in Gradle logs:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; Task :sonar
Unable to import Android Lint report file(s):
- /home/runner/work/PyLMS/PyLMS/android/app/build/reports/lint-results-debug.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and further down the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; Task :app:lintReportDebug
Wrote HTML report to file:///home/runner/work/PyLMS/PyLMS/android/app/build/reports/lint-results-debug.html
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I concluded that the &lt;code&gt;sonar&lt;/code&gt; task was executed to early.&lt;/p&gt;
&lt;p&gt;I modified the &lt;code&gt;build.gradle.kts&lt;/code&gt; of the root project (where I configure the sonar tasks) to create a dependency onto
the task &lt;code&gt;:app:lint&lt;/code&gt; (&lt;code&gt;:app:lintReportDebug&lt;/code&gt; is a child task):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;// add a dependency of sonar task onto any task lint of any subproject
// use afterEvaluate otherwise the task set is empty
val sonarTask = tasks.getByName(&amp;quot;sonar&amp;quot;)
subprojects {
    afterEvaluate {
        project.tasks.filter { it.name == &amp;quot;lint&amp;quot; }.forEach{ sonarTask.dependsOn(it)}
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The warning is removed and Android Lint issues are now visible in SonarQube/SonarCloud.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Resources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.sonarsource.com/sonarcloud/advanced-setup/ci-based-analysis/sonarscanner-for-gradle/"&gt;Configure SonarCloud scanner for Gradle&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://plugins.gradle.org/plugin/org.sonarqube"&gt;version of latest SonarCloud scanner for Gradle&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Android"></category></entry><entry><title>Tilde expansion in SSH client broken on QNAP</title><link href="https://www.javatronic.fr/posts/2024/08/18/tilde-expansion-in-ssh-client-broken-on-qnap/" rel="alternate"></link><published>2024-08-18T00:00:00+02:00</published><updated>2024-08-18T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-08-18:/posts/2024/08/18/tilde-expansion-in-ssh-client-broken-on-qnap/</id><summary type="html">
&lt;p&gt;I have a nightly job running on my QNAP NAS (QTS 5.1.8.2823 2024/07/12), connecting to a remote device over SSH.
The job had been running fine for months, but a couple of days ago, it started failing with &lt;code&gt;The authenticity of host '[&amp;lt;redacted&amp;gt;]:&amp;lt;redacted&amp;gt; ([&amp;lt;redacted …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">
&lt;p&gt;I have a nightly job running on my QNAP NAS (QTS 5.1.8.2823 2024/07/12), connecting to a remote device over SSH.
The job had been running fine for months, but a couple of days ago, it started failing with &lt;code&gt;The authenticity of host '[&amp;lt;redacted&amp;gt;]:&amp;lt;redacted&amp;gt; ([&amp;lt;redacted&amp;gt;]:&amp;lt;redacted&amp;gt;)' can't be established.&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;I started investigating because the host had not changed (neither IP nor SSH server configuration), the host identity
was and is still in &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; and accepting the new host information simply isn't the right secure move.&lt;/p&gt;
&lt;h1 id="tldr"&gt;TLDR&lt;a class="headerlink" href="#tldr" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The error was only one of several symptoms caused by the expansion of &lt;code&gt;~&lt;/code&gt; (tilde) in the path to the user's identity
file (eg. &lt;code&gt;~/.ssh/id_rsa&lt;/code&gt;) or known_hosts file (&lt;code&gt;~/.ssh/known_hosts&lt;/code&gt;) not working on my QNAP device for non-root users.&lt;/p&gt;
&lt;p&gt;I initially had the error with the admin user created upon initial setup of my QNAP system and reproduced with another
non-root user.&lt;/p&gt;
&lt;p&gt;A workaround is to create a user SSH client configuration file &lt;code&gt;~/.ssh/config&lt;/code&gt; and add two options with absolute paths
to the files know_hosts and identity files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;UserKnownHostsFile /home/the_user/.ssh/known_hosts
IdentityFile /home/the_user/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Oddly enough, this workaround demonstrates that tilde expansion appears to work for the SSH client configuration file.&lt;/p&gt;
&lt;p&gt;As to what causes the failed tilde expansion, I don't know at this point but pinned down to a handful possible causes
(see &lt;a href="#tilde-expansion-works-for-some-files-but-not-others"&gt;Tilde expansion works for some files but not others&lt;/a&gt;).
I opened a support ticket at QNAP.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p&gt;To ease reading, instead of redacting information, I'll use dummy values for SSH port number (&lt;code&gt;9999&lt;/code&gt;), user (&lt;code&gt;the_user&lt;/code&gt;), hostname (&lt;code&gt;donut.acme.com&lt;/code&gt;) and IP (&lt;code&gt;126.126.126.126&lt;/code&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="host-identity-hash-protocol-is-different"&gt;Host identity hash protocol is different&lt;a class="headerlink" href="#host-identity-hash-protocol-is-different" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I reproduced the SSH call and the error directly from the command line and activated the full debug logs to try and
understand what caused the host authentication error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-vvvv&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;9999&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the_user@donut.acme.com&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ls -1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is an extract of the output around the host authentication failure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debug1:&lt;span class="w"&gt; &lt;/span&gt;expecting&lt;span class="w"&gt; &lt;/span&gt;SSH2_MSG_KEX_ECDH_REPLY
debug3:&lt;span class="w"&gt; &lt;/span&gt;receive&lt;span class="w"&gt; &lt;/span&gt;packet:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
debug1:&lt;span class="w"&gt; &lt;/span&gt;SSH2_MSG_KEX_ECDH_REPLY&lt;span class="w"&gt; &lt;/span&gt;received
debug1:&lt;span class="w"&gt; &lt;/span&gt;Server&lt;span class="w"&gt; &lt;/span&gt;host&lt;span class="w"&gt; &lt;/span&gt;key:&lt;span class="w"&gt; &lt;/span&gt;ssh-ed25519&lt;span class="w"&gt; &lt;/span&gt;SHA256:&amp;lt;redacted&amp;gt;
debug3:&lt;span class="w"&gt; &lt;/span&gt;put_host_port:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;126&lt;/span&gt;.126.126.126&lt;span class="o"&gt;]&lt;/span&gt;:9999
debug3:&lt;span class="w"&gt; &lt;/span&gt;put_host_port:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;donut.acme.com&lt;span class="o"&gt;]&lt;/span&gt;:9999
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/.ssh/known_hosts:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/.ssh/known_hosts2:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts2:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;checking&lt;span class="w"&gt; &lt;/span&gt;without&lt;span class="w"&gt; &lt;/span&gt;port&lt;span class="w"&gt; &lt;/span&gt;identifier
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/.ssh/known_hosts:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/.ssh/known_hosts2:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts2:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug3:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;trying&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;hostfile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/.ssh/known_hosts"&lt;/span&gt;
debug1:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;hostkeys&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;/.ssh/known_hosts&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist
debug3:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;trying&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;hostfile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/.ssh/known_hosts2"&lt;/span&gt;
debug1:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;hostkeys&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;/.ssh/known_hosts2&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist
debug3:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;trying&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;hostfile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/usr/etc/ssh_known_hosts"&lt;/span&gt;
debug1:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;hostkeys&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist
debug3:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;trying&lt;span class="w"&gt; &lt;/span&gt;system&lt;span class="w"&gt; &lt;/span&gt;hostfile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/usr/etc/ssh_known_hosts2"&lt;/span&gt;
debug1:&lt;span class="w"&gt; &lt;/span&gt;hostkeys_find_by_key_hostfile:&lt;span class="w"&gt; &lt;/span&gt;hostkeys&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts2&lt;span class="w"&gt; &lt;/span&gt;does&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;exist
The&lt;span class="w"&gt; &lt;/span&gt;authenticity&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;host&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'[donut.acme.com]:9999 ([126.126.126.126]:9999)'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;can&lt;span class="err"&gt;'&lt;/span&gt;t&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;established.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point, I'm not sure what to think of these logs.&lt;/p&gt;
&lt;p&gt;However, I notice that the job does connect to the server just before the failure, with a &lt;code&gt;rsync&lt;/code&gt; command over
&lt;code&gt;ssh&lt;/code&gt;. The only difference is that the &lt;code&gt;rsync&lt;/code&gt; command runs with &lt;code&gt;sudo&lt;/code&gt; and explicitly provides the path to the identity
file on the command line. So &lt;code&gt;sudo&lt;/code&gt; is really the only difference (keep that in mind for later). &lt;/p&gt;
&lt;p&gt;So I try with &lt;code&gt;sudo&lt;/code&gt; and intend to compare the debug output.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;-vvvv&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;/home/the_user/.ssh/id_rsa&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;9999&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;the_user@donut.acme.com&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'ls -1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And here is an extract of the output around the host authentication failure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debug1:&lt;span class="w"&gt; &lt;/span&gt;expecting&lt;span class="w"&gt; &lt;/span&gt;SSH2_MSG_KEX_ECDH_REPLY
debug3:&lt;span class="w"&gt; &lt;/span&gt;receive&lt;span class="w"&gt; &lt;/span&gt;packet:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;31&lt;/span&gt;
debug1:&lt;span class="w"&gt; &lt;/span&gt;SSH2_MSG_KEX_ECDH_REPLY&lt;span class="w"&gt; &lt;/span&gt;received
debug1:&lt;span class="w"&gt; &lt;/span&gt;Server&lt;span class="w"&gt; &lt;/span&gt;host&lt;span class="w"&gt; &lt;/span&gt;key:&lt;span class="w"&gt; &lt;/span&gt;ecdsa-sha2-nistp256&lt;span class="w"&gt; &lt;/span&gt;SHA256:&amp;lt;redacted&amp;gt;
debug3:&lt;span class="w"&gt; &lt;/span&gt;put_host_port:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="m"&gt;126&lt;/span&gt;.126.126.126&lt;span class="o"&gt;]&lt;/span&gt;:9999
debug3:&lt;span class="w"&gt; &lt;/span&gt;put_host_port:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;donut.acme.com&lt;span class="o"&gt;]&lt;/span&gt;:9999
debug3:&lt;span class="w"&gt; &lt;/span&gt;record_hostkey:&lt;span class="w"&gt; &lt;/span&gt;found&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ECDSA&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;/root/.ssh/known_hosts:2
debug3:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys_file:&lt;span class="w"&gt; &lt;/span&gt;loaded&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;keys&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;donut.acme.com&lt;span class="o"&gt;]&lt;/span&gt;:9999
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/root/.ssh/known_hosts2:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;load_hostkeys:&lt;span class="w"&gt; &lt;/span&gt;fopen&lt;span class="w"&gt; &lt;/span&gt;/usr/etc/ssh_known_hosts2:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
debug1:&lt;span class="w"&gt; &lt;/span&gt;Host&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'[donut.acme.com]:9999'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;known&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;matches&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;ECDSA&lt;span class="w"&gt; &lt;/span&gt;host&lt;span class="w"&gt; &lt;/span&gt;key.
debug1:&lt;span class="w"&gt; &lt;/span&gt;Found&lt;span class="w"&gt; &lt;/span&gt;key&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/root/.ssh/known_hosts:2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I noticed that the host key protocol is &lt;code&gt;ecdsa-sha2-nistp256&lt;/code&gt; with &lt;code&gt;sudo&lt;/code&gt;, while it is &lt;code&gt;ssh-ed25519&lt;/code&gt; without it.&lt;/p&gt;
&lt;p&gt;From previous knowledge of the SSH protocol, my assumption was that the client, somehow, would request different
protocols from the server for authentication. So, I want to loop up earlier occurrences of the protocol names in both
logs but decide to simply text-compare the whole logs, to get a better view and see all the differences.&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot meld diff logs with and without sudo" src="https://www.javatronic.fr/images/2024-08-18_ssh_tilde_expansion_in_SSH_broken_on_qnap/meld_diff_ssh_debug_logs.png"/&gt;&lt;/p&gt;
&lt;p&gt;This highlights the reason a different protocol is used:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;when &lt;code&gt;sudo&lt;/code&gt; is used: a key for the host is found and the SSH client requests protocols that match the existing key
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debug3: record_hostkey: found key type ECDSA in file /root/.ssh/known_hosts:2
[...]
debug3: order_hostkeyalgs: prefer hostkeyalgs: ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp256
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;when &lt;code&gt;sudo&lt;/code&gt; is not used: no key is found and the SSH client let the server send hash key in its favorite protocol
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debug1: load_hostkeys: fopen /.ssh/known_hosts: No such file or directory
[...]
debug3: order_hostkeyalgs: no algorithms matched; accept original
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="known_host-file-is-not-read"&gt;known_host file is not read&lt;a class="headerlink" href="#known_host-file-is-not-read" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;As stated before, the host key IS present in the user's know_host file &lt;code&gt;/home/the_user/.ssh/known_host&lt;/code&gt;. In addition,
it is the same as the one in root user's known_host file &lt;code&gt;/root/.ssh/known_hosts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So, the question becomes why is the user's know_host file not read?&lt;/p&gt;
&lt;p&gt;&lt;code&gt;/home/the_user/.ssh/known_host&lt;/code&gt; does not appear in logs. &lt;code&gt;/.ssh/known_host&lt;/code&gt; is shown instead and, of course, does not
exist since the path &lt;code&gt;/.ssh/&lt;/code&gt; is not valid.&lt;/p&gt;
&lt;p&gt;The following log caught my attention and demonstrates that, when not running as root, &lt;code&gt;~&lt;/code&gt; is not replaced by 
&lt;code&gt;/home/the_user&lt;/code&gt; as it should be. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debug3:&lt;span class="w"&gt; &lt;/span&gt;expanded&lt;span class="w"&gt; &lt;/span&gt;UserKnownHostsFile&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'~/.ssh/known_hosts'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'/.ssh/known_hosts'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This debug log is produced by at &lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/ssh.c#L1522-L1523"&gt;line 1522&lt;/a&gt;
in SSH client's &lt;code&gt;main&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;num_user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;continue&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tilde_expand_filename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;default_client_percent_dollar_expand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cinfo&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;strcmp&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;debug3&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"expanded UserKnownHostsFile '%s' -&amp;gt; "&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s"&gt;"'%s'"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;cp&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;options&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;user_hostfiles&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;j&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The expansion is performed by function &lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/misc.c#L1245-L1253"&gt;&lt;code&gt;tilde_expand_filename&lt;/code&gt;&lt;/a&gt;, 
calling the implementation function &lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/misc.c#L1173-L1243"&gt;&lt;code&gt;tilde_expand&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="nf"&gt;tilde_expand_filename&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uid_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;tilde_expand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;cleanup_exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="cm"&gt;/*&lt;/span&gt;
&lt;span class="cm"&gt; * Expands tildes in the file name.  Returns data allocated by xmalloc.&lt;/span&gt;
&lt;span class="cm"&gt; * Warning: this calls getpw*.&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt;
&lt;span class="nf"&gt;tilde_expand&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;uid_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;**&lt;/span&gt;&lt;span class="n"&gt;retp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;ocopy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;const&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;char&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;passwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;size_t&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;-1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;retp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'~'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;retp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ocopy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;filename&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'\0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;&lt;span class="cm"&gt;/* ~ */&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strspn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'\0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* ~/ */&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* ~/path */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strchr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'\0'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strspn&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'\0'&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="cm"&gt;/* ~user/ */&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="cm"&gt;/* else              ~user/path */&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="cm"&gt;/* else                 ~user */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getpwnam&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="n"&gt;error_f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"No such user %s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getpwuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;error_f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"No such uid %ld"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;uid&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* Make sure directory has a trailing '/' */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xasprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"%s%s%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;error_f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"xasprintf failed"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PATH_MAX&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;error_f&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Path too long"&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;goto&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="cm"&gt;/* success */&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;retp&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nl"&gt;out&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;free&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;ocopy&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If my understanding of the code is correct, the home directory path is retrieved by calling function &lt;code&gt;getpwuid(uid)&lt;/code&gt; and
reading the returned field &lt;code&gt;pw_dir&lt;/code&gt; (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/misc.c#L1226"&gt;here&lt;/a&gt;),
which &lt;code&gt;uuid&lt;/code&gt; argument is retrieved by a call to function &lt;code&gt;getuuid()&lt;/code&gt; (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/ssh.c#L1519"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;According to &lt;a href="https://linux.die.net/man/3/getpwuid"&gt;getpwuid man page&lt;/a&gt;, reads the &lt;code&gt;/etc/passwd&lt;/code&gt; file and I confirmed
that the user's directory is set in this file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;strlen&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;len&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sc"&gt;'/'&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xasprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"%s%s%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;slash&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"/"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;""&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;According to the code above, the string &lt;code&gt;~/.ssh/known_hosts&lt;/code&gt; being transformed to &lt;code&gt;/.ssh/known_hosts&lt;/code&gt; could have two
possible causes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;pw-&amp;gt;pw_dir&lt;/code&gt; is an empty string, in which case the heading slash in &lt;code&gt;/.ssh/known_hosts&lt;/code&gt; comes from &lt;code&gt;slash&lt;/code&gt; variable
being &lt;code&gt;true&lt;/code&gt; (because &lt;code&gt;len&lt;/code&gt; is &lt;code&gt;0&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pw-&amp;gt;pw_dir&lt;/code&gt; is &lt;code&gt;/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="workaround"&gt;Workaround&lt;a class="headerlink" href="#workaround" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Without much hope, because accessing it also requires expanding the tilde, I tried providing the path to the known_hosts
file in the user's SSH client config file &lt;code&gt;~/.ssh/config&lt;/code&gt; (remember to change the file permissions &lt;code&gt;chmod 600 ~/.ssh/config&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;UserKnownHostsFile /home/the_user/.ssh/known_hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Authenticating the remote host worked but the SSH command failed with a new error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;debug1: Authentications that can continue: publickey
debug3: start over, passed a different list publickey
debug3: preferred publickey,keyboard-interactive,password
debug3: authmethod_lookup publickey
debug3: remaining preferred: keyboard-interactive,password
debug3: authmethod_is_enabled publickey
debug1: Next authentication method: publickey
debug1: Will attempt key: /.ssh/id_rsa 
debug1: Will attempt key: /.ssh/id_ecdsa 
debug1: Will attempt key: /.ssh/id_ecdsa_sk 
debug1: Will attempt key: /.ssh/id_ed25519 
debug1: Will attempt key: /.ssh/id_ed25519_sk 
debug1: Will attempt key: /.ssh/id_xmss 
debug2: pubkey_prepare: done
debug1: Trying private key: /.ssh/id_rsa
debug3: no such identity: /.ssh/id_rsa: No such file or directory
debug1: Trying private key: /.ssh/id_ecdsa
debug3: no such identity: /.ssh/id_ecdsa: No such file or directory
debug1: Trying private key: /.ssh/id_ecdsa_sk
debug3: no such identity: /.ssh/id_ecdsa_sk: No such file or directory
debug1: Trying private key: /.ssh/id_ed25519
debug3: no such identity: /.ssh/id_ed25519: No such file or directory
debug1: Trying private key: /.ssh/id_ed25519_sk
debug3: no such identity: /.ssh/id_ed25519_sk: No such file or directory
debug1: Trying private key: /.ssh/id_xmss
debug3: no such identity: /.ssh/id_xmss: No such file or directory
debug2: we did not send a packet, disable method
debug1: No more authentication methods to try.
the_user@donut.acme.com: Permission denied (publickey).
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This demonstrates that tilde expansion is also failing for the identity file, which must also be provided with an 
absolute path in &lt;code&gt;~/.ssh/config&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;UserKnownHostsFile /home/the_user/.ssh/known_hosts
IdentityFile /home/the_user/.ssh/id_rsa
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="tilde-expansion-works-for-some-files-but-not-others"&gt;Tilde expansion works for some files but not others&lt;a class="headerlink" href="#tilde-expansion-works-for-some-files-but-not-others" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Investigation so far allowed us to corner down that tilde expansion works for the user's SSH config file but does not 
for the user's known_host file and identity file.&lt;/p&gt;
&lt;p&gt;Let's see how expansion happens for the user's SSH config file.&lt;/p&gt;
&lt;p&gt;Path config file appears to not be expanded with function &lt;code&gt;tilde_expand&lt;/code&gt; but computed with a specific piece of code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;user's SSH config file is resolved and read in function &lt;code&gt;process_config_files&lt;/code&gt; (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/ssh.c#L556-L587"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;the user's directory is concatenated with a constant unless a config file was explicitly provided (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/ssh.c#L575-L576"&gt;source&lt;/a&gt;) 
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;snprintf&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;buf&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"%s/%s"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;_PATH_SSH_USER_CONFFILE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;value of &lt;code&gt;_PATH_SSH_USER_CONFFILE&lt;/code&gt; is &lt;code&gt;.ssh/config&lt;/code&gt; (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/pathnames.h#L61-L94"&gt;source&lt;/a&gt;) 
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cp"&gt;#define _PATH_SSH_USER_DIR      ".ssh"&lt;/span&gt;
&lt;span class="p"&gt;[...]&lt;/span&gt;
&lt;span class="cp"&gt;#define _PATH_SSH_USER_CONFFILE     _PATH_SSH_USER_DIR "/config"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;and &lt;code&gt;pw&lt;/code&gt; in &lt;code&gt;pw-&amp;gt;pw_dir&lt;/code&gt; also comes from calls to &lt;code&gt;getuid&lt;/code&gt; and &lt;code&gt;getpwuid&lt;/code&gt; (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/ssh.c#L709-L716"&gt;source&lt;/a&gt;)
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="cm"&gt;/* Get user data. */&lt;/span&gt;
&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;getpwuid&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;logit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"No user exists for uid %lu"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;u_long&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="n"&gt;getuid&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;exit&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;255&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="cm"&gt;/* Take a copy of the returned structure. */&lt;/span&gt;
&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pwcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pwcopy&lt;/code&gt; does a plain copy of the field &lt;code&gt;pw_dir&lt;/code&gt; (&lt;a href="https://github.com/openssh/openssh-portable/blob/V_9_8_P1/misc.c#L483-L507"&gt;source&lt;/a&gt;):
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;passwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;
&lt;span class="n"&gt;pwcopy&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;passwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;struct&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nc"&gt;passwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xcalloc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;sizeof&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="o"&gt;*&lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;));&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_name&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_passwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_passwd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NULL&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;?&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"*"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_passwd&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef HAVE_STRUCT_PASSWD_PW_GECOS&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_gecos&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_gecos&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_uid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_uid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_gid&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_gid&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef HAVE_STRUCT_PASSWD_PW_EXPIRE&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_expire&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_expire&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef HAVE_STRUCT_PASSWD_PW_CHANGE&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_change&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_change&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="cp"&gt;#ifdef HAVE_STRUCT_PASSWD_PW_CLASS&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_class&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_class&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="cp"&gt;#endif&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_dir&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_shell&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;xstrdup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;pw&lt;/span&gt;&lt;span class="o"&gt;-&amp;gt;&lt;/span&gt;&lt;span class="n"&gt;pw_shell&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;copy&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To sum up, the difference between tilde expansion for the user SSH client config file and the known_host and identity files could be:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a bug in string replacement code I could have missed?&lt;/li&gt;
&lt;li&gt;the usage of &lt;code&gt;pwcopy&lt;/code&gt; making a difference?&lt;/li&gt;
&lt;li&gt;a different &lt;code&gt;uuid&lt;/code&gt; being returned by &lt;code&gt;getuid()&lt;/code&gt;?&lt;/li&gt;
&lt;li&gt;&lt;code&gt;getpwuid()&lt;/code&gt; somehow not returning the same structure on the second/later call?&lt;/li&gt;
&lt;/ul&gt;</content><category term="tips"></category><category term="QNAP"></category></entry><entry><title>Send email notification upon Ubuntu server restart</title><link href="https://www.javatronic.fr/posts/2024/06/24/send-email-notification-upon-ubuntu-server-restart/" rel="alternate"></link><published>2024-06-24T00:00:00+02:00</published><updated>2024-06-24T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-06-24:/posts/2024/06/24/send-email-notification-upon-ubuntu-server-restart/</id><summary type="html">
&lt;p&gt;I want to be notified by email upon restart of the remote server serving the HDD where I do the offsite backup of my
data.&lt;/p&gt;
&lt;p&gt;I used &lt;code&gt;init&lt;/code&gt; in the past for such purpose, combined with a script that sends an email.&lt;/p&gt;
&lt;p&gt;But &lt;code&gt;init&lt;/code&gt; is gone and has been replaced …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;I want to be notified by email upon restart of the remote server serving the HDD where I do the offsite backup of my
data.&lt;/p&gt;
&lt;p&gt;I used &lt;code&gt;init&lt;/code&gt; in the past for such purpose, combined with a script that sends an email.&lt;/p&gt;
&lt;p&gt;But &lt;code&gt;init&lt;/code&gt; is gone and has been replaced by &lt;code&gt;systemd&lt;/code&gt; in Ubuntu for a while now.&lt;/p&gt;
&lt;p&gt;Yet, the same result can be achieved by creating a service in &lt;code&gt;systemd&lt;/code&gt; and have it run only once.&lt;/p&gt;
&lt;h1 id="send-an-email"&gt;Send an email&lt;a class="headerlink" href="#send-an-email" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I'll create a script in my home directory that sends me an email: &lt;code&gt;vi ~/scripts/notify_start.sh&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To prevent emails from stacking in the same conversation in Gmail, I'll include the current date and time in the subject
(plus it's a useful information, in case emails are delayed).&lt;/p&gt;
&lt;p&gt;Since restarts happen only so often, I'll include instructions in the body of what and how I should be doing manually
upon restart, in case I forget.&lt;/p&gt;
&lt;p&gt;I'll use &lt;code&gt;ssmtp&lt;/code&gt; to send the email, see &lt;a href="https://www.javatronic.fr/posts/2023/12/12/configure-ssmtp-with-gmail-on-ubuntu/"&gt;how to configure gmail with SSMTP on Ubuntu&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I'll use the braces + pipe trick and the &lt;code&gt;echo&lt;/code&gt; command to send multiple lines to &lt;code&gt;ssmtp&lt;/code&gt; (over the harder to read &lt;code&gt;cat&lt;/code&gt;
+ delimiter, which I find harder to read and maintain).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;

&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-euo&lt;span class="w"&gt; &lt;/span&gt;pipefail

&lt;span class="nv"&gt;DATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="w"&gt; &lt;/span&gt;+&lt;span class="s2"&gt;"%Y-%m-%d-%H%M%S"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Subject: MyServer (re)started at &lt;/span&gt;&lt;span class="nv"&gt;$DATE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"This email is sent from systemd service notify_start.service on MyServer."&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Check service logs with either 'sudo systemctl status notify_start.service' or 'journalctl -u notify_start.service'."&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Immediate actions to take:"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;" * mount and open HDD with '/blablabla/mount.sh'"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ssmtp&lt;span class="w"&gt; &lt;/span&gt;me@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="create-the-service"&gt;Create the service&lt;a class="headerlink" href="#create-the-service" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The unit of work in &lt;code&gt;systemd&lt;/code&gt; is a &lt;code&gt;unit&lt;/code&gt;. We will use one of type &lt;code&gt;service&lt;/code&gt;, since &lt;code&gt;systemd&lt;/code&gt; starts, stops and 
generally manages the lifecycle of those, and we can declare dependencies on other services (see below).&lt;/p&gt;
&lt;p&gt;A unit is created with a configuration file. I'll use &lt;code&gt;/etc/systemd/system&lt;/code&gt; as location since it prevails over any other
and I have root access.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sudo vi /etc/systemd/system/notify_start.service&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I create and a description to the unit
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[Unit]
Description=Send me an email when system starts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;the unit is a service
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[Service]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;the service calls the above script (upon starting):
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ExecStart=/home/phan/scripts/pidatabak_scripts/notify_start/notify_start.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;the service must be started only once (to run the script only once):
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Type=oneshot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;since the script sends an email, the service requires network to be available before running:
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;After=network-online.target
Wants=network-online.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Side benefit: since the service just calls a script, it can be easily duplicated to serve other purpose.&lt;/p&gt;
&lt;h1 id="test-the-service"&gt;Test the service&lt;a class="headerlink" href="#test-the-service" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;After testing the script, test the service with &lt;code&gt;sudo systemctl start notify_start.service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If service was already tested, stop it first: &lt;code&gt;sudo systemctl stop notify_start.service&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="enable-the-service"&gt;Enable the service&lt;a class="headerlink" href="#enable-the-service" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;To have the service managed by &lt;code&gt;systemd&lt;/code&gt;, it needs to be enabled with &lt;code&gt;sudo systemctl enable notify_start.service&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This fails with the following message:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;The unit files have no installation config (WantedBy=, RequiredBy=, Also=,
Alias= settings in the [Install] section, and DefaultInstance= for template
units). This means they are not meant to be enabled using systemctl.

Possible reasons for having this kind of units are:
• A unit may be statically enabled by being symlinked from another unit's
  .wants/ or .requires/ directory.
• A unit's purpose may be to act as a helper for some other unit which has
  a requirement dependency on it.
• A unit may be started when needed via activation (socket, path, timer,
  D-Bus, udev, scripted systemctl call, ...).
• In case of template units, the unit is meant to be enabled with some
  instance name specified.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To fix this, add the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="monitor-the-service"&gt;Monitor the service&lt;a class="headerlink" href="#monitor-the-service" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;check logs with either &lt;code&gt;sudo systemctl status notify_start.service&lt;/code&gt; or &lt;code&gt;journalctl -u notify_start.service&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;check status with &lt;code&gt;sudo systemctl status notify_start.service&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;[Unit]
Description=Send me an email when system starts
# source: https://systemd.io/NETWORK_ONLINE/
After=network-online.target
Wants=network-online.target

[Service]
Type=oneshot
RemainAfterExit=yes
ExecStart=/home/phan/scripts/pidatabak_scripts/notify_start/notify_start.sh

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/a/506374"&gt;Fixing missing WantedBy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/understanding-systemd-units-and-unit-files"&gt;Understanding Systemd Units and Unit Files&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Ubuntu"></category></entry><entry><title>Unit testing a Bash script</title><link href="https://www.javatronic.fr/posts/2024/06/16/unit-testing-a-bash-script/" rel="alternate"></link><published>2024-06-16T00:00:00+02:00</published><updated>2024-06-16T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-06-16:/posts/2024/06/16/unit-testing-a-bash-script/</id><summary type="html">
&lt;h1 id="fixing-rsync-time-backup"&gt;Fixing rsync-time-backup&lt;a class="headerlink" href="#fixing-rsync-time-backup" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/lesaint/rsync-time-backup"&gt;rsync-time-backup&lt;/a&gt; is a Bash script I maintain that wraps around
&lt;a href="https://linux.die.net/man/1/rsync"&gt;rsync&lt;/a&gt; to produce Apple Time Machine style backups.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt; is able to create incremental backups thanks to its &lt;code&gt;--link-dest=DIR&lt;/code&gt; option, that creates hardlinks to files in
&lt;code&gt;DIR&lt;/code&gt; when unchanged. &lt;/p&gt;
&lt;p&gt;To leverage this option, &lt;code&gt;rsync-time-backup&lt;/code&gt; has a key …&lt;/p&gt;</summary><content type="html">
&lt;h1 id="fixing-rsync-time-backup"&gt;Fixing rsync-time-backup&lt;a class="headerlink" href="#fixing-rsync-time-backup" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;a href="https://github.com/lesaint/rsync-time-backup"&gt;rsync-time-backup&lt;/a&gt; is a Bash script I maintain that wraps around
&lt;a href="https://linux.die.net/man/1/rsync"&gt;rsync&lt;/a&gt; to produce Apple Time Machine style backups.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;rsync&lt;/code&gt; is able to create incremental backups thanks to its &lt;code&gt;--link-dest=DIR&lt;/code&gt; option, that creates hardlinks to files in
&lt;code&gt;DIR&lt;/code&gt; when unchanged. &lt;/p&gt;
&lt;p&gt;To leverage this option, &lt;code&gt;rsync-time-backup&lt;/code&gt; has a key piece of logic that resolves the directory (let's call it &lt;code&gt;LINK_DEST&lt;/code&gt;)
to use as the argument to the &lt;code&gt;link-dest&lt;/code&gt; option.&lt;/p&gt;
&lt;p&gt;Resolving &lt;code&gt;LINK_DEST&lt;/code&gt; must support several use cases. When the script runs:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;for the 1st time&lt;/li&gt;
&lt;li&gt;any later time&lt;/li&gt;
&lt;li&gt;after a previous backup attempt failed/was interrupted&lt;/li&gt;
&lt;li&gt;after several previous backup attempts failed/were interrupted.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Last week, I changed the logic for the 4th use case because it was broken: the script would use an incomplete
backup attempt as &lt;code&gt;LINK_DEST&lt;/code&gt; and this broke the incremental backup, recreating many unchanged files as new.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p&gt;The changes to &lt;code&gt;rsync-time-backup&lt;/code&gt; described in this article are visible in commits
&lt;a href="https://github.com/lesaint/rsync-time-backup/commit/e2bc6ad08cdca55db548351666e1c04ba3ce6023"&gt;e2bc6ad&lt;/a&gt; and 
&lt;a href="https://github.com/lesaint/rsync-time-backup/commit/6577c3eb714778bd8173d90145f749b955994b69"&gt;6577c3&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Keep and automate the tests&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;When coding the new logic, I found myself creating several directories reproducing the above use cases
(and several others) to test my changes. &lt;/p&gt;
&lt;p&gt;Unit testing is seldom practice in &lt;code&gt;Bash&lt;/code&gt;, probably due to the nature and usage of &lt;code&gt;Bash&lt;/code&gt;, as well as due to the lack of
tooling.&lt;/p&gt;
&lt;p&gt;Nevertheless, it's such a pity not to have these tests to prevent regressions during future changes. So I
decided to take on the challenge, try and write Unit Test for Directory Resolution, time-boxed to a weekend.&lt;/p&gt;
&lt;h1 id="code-unit-tests-for-bash"&gt;Code Unit tests for Bash&lt;a class="headerlink" href="#code-unit-tests-for-bash" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;div class="admonition attention"&gt;
&lt;p&gt;There are some existing tools to test &lt;code&gt;Bash&lt;/code&gt; scripts (e.g. &lt;a href="https://github.com/bats-core/bats-core"&gt;Bats-core&lt;/a&gt;).    &lt;br/&gt;
I want to try and explore feasibility and how far I can go writing Unit Tests on my own. &lt;br/&gt;
Also, having defined a very small timebox, I'd rather save the time to learn another tool, and potentially have to 
adapt my script to it, and get to it right away (and keep it for later, maybe).&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The basic requirements for useful Unit Tests in &lt;code&gt;Bash&lt;/code&gt; are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;run the tests&lt;/li&gt;
&lt;li&gt;run the script from the tests&lt;/li&gt;
&lt;li&gt;inspect and run only the code under test&lt;/li&gt;
&lt;li&gt;ensure reproducibility&lt;/li&gt;
&lt;li&gt;ensure stateless execution to achieve reentrancy of the tests&lt;/li&gt;
&lt;li&gt;declare the expected behaviors with assertions, which would fail the test if not met&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="run-the-tests"&gt;Run the tests&lt;a class="headerlink" href="#run-the-tests" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Following common practices in other programming languages, I'll code tests in a dedicated directory: &lt;code&gt;tests&lt;/code&gt;. &lt;br/&gt;
I'll have one script per feature under test, i.e. a test suite: &lt;code&gt;directory_resolution.sh&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;➜&lt;span class="w"&gt;  &lt;/span&gt;rsync-time-backup&lt;span class="w"&gt; &lt;/span&gt;git:&lt;span class="o"&gt;(&lt;/span&gt;master&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tree
.
├──&lt;span class="w"&gt; &lt;/span&gt;README.md
├──&lt;span class="w"&gt; &lt;/span&gt;rsync_tmbackup.sh
└──&lt;span class="w"&gt; &lt;/span&gt;tests
&lt;span class="w"&gt;    &lt;/span&gt;├──&lt;span class="w"&gt; &lt;/span&gt;directory_resolution.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="run-the-script-from-the-tests"&gt;Run the script from the tests&lt;a class="headerlink" href="#run-the-script-from-the-tests" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;&lt;a href="https://en.wikipedia.org/wiki/KISS_principle"&gt;KISS&lt;/a&gt;, I'll hardcore the path to &lt;code&gt;rsync_tmbackup.sh&lt;/code&gt;, expecting test suites always to be called from their directory.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fn_run_test&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;test_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;under_test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"../../../rsync_tmbackup.sh"&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="inspect-and-run-only-the-code-under-test"&gt;Inspect and run only the code under test&lt;a class="headerlink" href="#inspect-and-run-only-the-code-under-test" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Directory resolution is only one of many &lt;code&gt;rsync-time-backup&lt;/code&gt; features. I don't want to run these other features when
testing directory resolution.&lt;/p&gt;
&lt;p&gt;In other programming languages, the usual practice is to have the feature under test in a separate piece of code
(a class, a package, a library, ...).
In &lt;code&gt;Bash&lt;/code&gt;, the candidates I see are files or functions.&lt;/p&gt;
&lt;p&gt;Such isolation does not exist (yet) and I decided against refactoring because:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;I lack tests to prevent regression during this refactoring (sic!)&lt;/li&gt;
&lt;li&gt;My focus is on proving I can write Unit Tests for Bash, not on writing testable Bash code (yet)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, I went for a simpler solution (which is also a bad practice) and altered my production code with two control points
for my tests:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The first one prints directory-resolution-related variables.&lt;/li&gt;
&lt;li&gt;The second one prints the same variables and stops &lt;code&gt;rsync-time-backup&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Both are inactive unless the variable &lt;code&gt;TEST1&lt;/code&gt; is set.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Printing allows me to inspect the code. Exiting allows me to only execute the directory resolution code (almost, see &lt;a href="#conclusions"&gt;Conclusions&lt;/a&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;---&lt;span class="w"&gt; &lt;/span&gt;i/rsync_tmbackup.sh
+++&lt;span class="w"&gt; &lt;/span&gt;w/rsync_tmbackup.sh
@@&lt;span class="w"&gt; &lt;/span&gt;-165,6&lt;span class="w"&gt; &lt;/span&gt;+165,32&lt;span class="w"&gt; &lt;/span&gt;@@&lt;span class="w"&gt; &lt;/span&gt;fn_dest_chown_link&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;

+#&lt;span class="w"&gt; &lt;/span&gt;-----------------------------------------------------------------------------
+#&lt;span class="w"&gt; &lt;/span&gt;Test&lt;span class="w"&gt; &lt;/span&gt;code
+#&lt;span class="w"&gt; &lt;/span&gt;-----------------------------------------------------------------------------
+fn_is_test1_active&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TEST1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
+&lt;span class="o"&gt;}&lt;/span&gt;
+
+fn_test_1_echo_vars&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST1: SYM_LINK=&lt;/span&gt;&lt;span class="nv"&gt;$SYM_LINK&lt;/span&gt;&lt;span class="s2"&gt; DEST=&lt;/span&gt;&lt;span class="nv"&gt;$DEST&lt;/span&gt;&lt;span class="s2"&gt; LINK_DEST=&lt;/span&gt;&lt;span class="nv"&gt;$LINK_DEST&lt;/span&gt;&lt;span class="s2"&gt; LAST_BACKUP_DIR=&lt;/span&gt;&lt;span class="nv"&gt;$LAST_BACKUP_DIR&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
+&lt;span class="o"&gt;}&lt;/span&gt;
+
+fn_test_1_step_1&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fn_is_test1_active&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
+&lt;span class="w"&gt;        &lt;/span&gt;fn_test_1_echo_vars
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
+&lt;span class="o"&gt;}&lt;/span&gt;
+
+fn_test_1_step_2&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fn_is_test1_active&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
+&lt;span class="w"&gt;        &lt;/span&gt;fn_test_1_echo_vars
+&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="c1"&gt;# end test&lt;/span&gt;
+&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"TEST1: end execution"&lt;/span&gt;
+&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
+&lt;span class="o"&gt;}&lt;/span&gt;
+
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Source and destination information&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
@@&lt;span class="w"&gt; &lt;/span&gt;-300,6&lt;span class="w"&gt; &lt;/span&gt;+326,8&lt;span class="w"&gt; &lt;/span&gt;@@&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="nv"&gt;LINK_DEST&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;fn_dest_find_last_backup&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;

+fn_test_1_step_1
+
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Handle case where a previous backup failed or was interrupted.&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
@@&lt;span class="w"&gt; &lt;/span&gt;-330,6&lt;span class="w"&gt; &lt;/span&gt;+358,8&lt;span class="w"&gt; &lt;/span&gt;@@&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;fn_dest_find&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$INPROGRESS_FILE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;

+fn_test_1_step_2
+
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Run in a loop to handle the "No space left on device" logic.&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="ensure-reproducibility"&gt;Ensure reproducibility&lt;a class="headerlink" href="#ensure-reproducibility" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;There is one non-deterministic piece of code in Directory Resolution: the name of the new backup directory is generated 
from the current date.&lt;/p&gt;
&lt;p&gt;Such code is a challenge to test, notably because it is a dependency to code outside our own.&lt;/p&gt;
&lt;p&gt;The common practice in other programming languages in such case is to mock, or patch in &lt;code&gt;Python&lt;/code&gt;, the dependency.&lt;/p&gt;
&lt;p&gt;There are no libraries to mock or patch with &lt;code&gt;Bash&lt;/code&gt;&lt;sup&gt;*&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;Focusing on my goal to write tests, I went for the same (and bad) solution as above: I altered the production code.&lt;/p&gt;
&lt;p&gt;This time, I replaced the code that computes the name of a directory from the current date with a function and allowed
variable &lt;code&gt;INJECT_NOW&lt;/code&gt; to be set to provide the value to return instead of calling the system's &lt;code&gt;date&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;---&lt;span class="w"&gt; &lt;/span&gt;i/rsync_tmbackup.sh&lt;span class="w"&gt; &lt;/span&gt;
+++&lt;span class="w"&gt; &lt;/span&gt;w/rsync_tmbackup.sh
@@&lt;span class="w"&gt; &lt;/span&gt;-273,7&lt;span class="w"&gt; &lt;/span&gt;+273,15&lt;span class="w"&gt; &lt;/span&gt;@@&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;

&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# Date logic&lt;/span&gt;
-NOW&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="w"&gt; &lt;/span&gt;+&lt;span class="s2"&gt;"%Y-%m-%d-%H%M%S"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
+fn_now&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;INJECT_NOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
+&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$INJECT_NOW&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;
+&lt;span class="w"&gt;        &lt;/span&gt;date&lt;span class="w"&gt; &lt;/span&gt;+&lt;span class="s2"&gt;"%Y-%m-%d-%H%M%S"&lt;/span&gt;
+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
+&lt;span class="o"&gt;}&lt;/span&gt;
+
+NOW&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;fn_now&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;EPOCH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"+%s"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;KEEP_ALL_DATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;EPOCH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;86400&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;&lt;span class="w"&gt;       &lt;/span&gt;&lt;span class="c1"&gt;# 1 day ago&lt;/span&gt;
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;KEEP_DAILIES_DATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$((&lt;/span&gt;&lt;span class="nv"&gt;EPOCH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;15768000&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="c1"&gt;# 6 months&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p&gt;&lt;em&gt;&lt;sup&gt;*&lt;/sup&gt; I didn't do an extensive search. At least, there is none in the standard &lt;code&gt;Bash&lt;/code&gt; ecosystem.&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;h2 id="setup-and-teardown-for-reentrancy"&gt;Setup and teardown for reentrancy&lt;a class="headerlink" href="#setup-and-teardown-for-reentrancy" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Directory resolution needs... directories. A source directory (the one to back up) and a target directory (the one 
where to create backups).&lt;/p&gt;
&lt;p&gt;I'll create source and target directories for the tests in a dedicated directory for a run of the test suite, which I 
create in setup code and execute before all tests.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# creates a directory dedicated to this run of tests&lt;/span&gt;
fn_prepare_test&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"out"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;TEST_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mktemp&lt;span class="w"&gt; &lt;/span&gt;--tmpdir&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"out"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;test1-XXXXXXXX&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;##########################&lt;/span&gt;
&lt;span class="c1"&gt;#--- the actual tests ---#&lt;/span&gt;
&lt;span class="c1"&gt;##########################&lt;/span&gt;
&lt;span class="c1"&gt;# Suite level preparation&lt;/span&gt;
fn_prepare_test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The source directory is only read and can be the same for tests. This one is set up once for all tests.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# creates an empty directory&lt;/span&gt;
fn_prepare_source_dir&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_DIR&lt;/span&gt;&lt;span class="s2"&gt;/src"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

&lt;span class="c1"&gt;##########################&lt;/span&gt;
&lt;span class="c1"&gt;#--- the actual tests ---#&lt;/span&gt;
&lt;span class="c1"&gt;##########################&lt;/span&gt;
&lt;span class="c1"&gt;# Test level preparation&lt;/span&gt;
fn_prepare_test
&lt;span class="c1"&gt;# same source dir is used for all tests&lt;/span&gt;
fn_prepare_source_dir
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Target directory changes from one test to the other AND directory resolution may its content (when resuming from an interrupted backup).&lt;/p&gt;
&lt;p&gt;I have setup code before each test, creating the directories for that one test:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# creates an empty directory&lt;/span&gt;
fn_prepare_source_dir&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_DIR&lt;/span&gt;&lt;span class="s2"&gt;/src"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# create a target directory with name 1st argument and executes method 2nd argument in it&lt;/span&gt;
fn_prepare_target_dir&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;test_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;prepare_function&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;target_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_DIR&lt;/span&gt;&lt;span class="s2"&gt;/target/&lt;/span&gt;&lt;span class="nv"&gt;$test_dir&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"**************** &lt;/span&gt;&lt;span class="nv"&gt;$test_dir&lt;/span&gt;&lt;span class="s2"&gt; ****************"&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Preparing &lt;/span&gt;&lt;span class="nv"&gt;$test_dir&lt;/span&gt;&lt;span class="s2"&gt;..."&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;$prepare_function&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"../../../../"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;#--- common functions used during prepare of a test ---#&lt;/span&gt;
fn_marker_file&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;touch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"backup.marker"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

fn_inprogress_file&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;touch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"backup.inprogress"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

fn_latest_symlink&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;target_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$target_dir&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"latest"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

fn_prepare_target_2nd_backup_interrupted&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_marker_file
&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2022-04-19-202210"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2022-10-25-213541"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_latest_symlink&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2022-04-19-202210"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_inprogress_file
&lt;span class="o"&gt;}&lt;/span&gt;
fn_prepare_target_dir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"2nd_backup_interrupted"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"fn_prepare_target_2nd_backup_interrupted"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After successfully completing the tests, I delete the directory for the suite in a piece of teardown code for the test suite.    &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fn_teardown_test&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Clean up: deleting &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;TEST_DIR&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;..."&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-Rf&lt;span class="w"&gt; &lt;/span&gt;--&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_DIR&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

fn_teardown_test

&lt;span class="o"&gt;[&lt;/span&gt;EOF&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="implement-assertions"&gt;Implement assertions&lt;a class="headerlink" href="#implement-assertions" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Because this is the way I verified the code behavior when modifying directory resolution, I want to code assertions 
against some logs produced by the script.&lt;/p&gt;
&lt;p&gt;The assertions will be line-based and will be exact matches (&lt;a href="https://en.wikipedia.org/wiki/KISS_principle"&gt;KISS&lt;/a&gt; again). &lt;br/&gt;
They come in 2 flavors: 1/ find a line in the logs 2/ verify the logs ends with the N following lines&lt;/p&gt;
&lt;p&gt;To code assertions on the script output, I need:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;to capture the script output (both &lt;code&gt;stdout&lt;/code&gt; and &lt;code&gt;stderr&lt;/code&gt;, indistinctly for now)&lt;/li&gt;
&lt;li&gt;have a readable and convenient way to declare expected line or lines&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The former is achieved by storing the output into variable &lt;code&gt;TEST_OUTPUT&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# Runs the executable under_test with the specified $1 directory as target.&lt;/span&gt;
&lt;span class="c1"&gt;# Output of execution of under_test is set into variable TEST_OUTPUT&lt;/span&gt;
fn_run_test&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;test_dir&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;under_test&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"../../../rsync_tmbackup.sh"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;out&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# ensure no leakage from previous test&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;TEST_OUTPUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# print content of target directory&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;tree&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_DIR&lt;/span&gt;&lt;span class="s2"&gt;/target/&lt;/span&gt;&lt;span class="nv"&gt;$test_dir&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# temporarily do not exit if command returns a non-zero exit code&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# doc: https://www.gnu.org/savannah-checkouts/gnu/bash/manual/bash.html#The-Set-Builtin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Running &lt;/span&gt;&lt;span class="nv"&gt;$test_dir&lt;/span&gt;&lt;span class="s2"&gt;..."&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_DIR&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# make sure executable exists and is accessible&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-x&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$under_test&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;pwd&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$under_test&lt;/span&gt;&lt;span class="s2"&gt; is not accessible or executable"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;+e
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;TEST_OUTPUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;under_test&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"src"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"target/&lt;/span&gt;&lt;span class="nv"&gt;$test_dir&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-e
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"../.."&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_OUTPUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition tip"&gt;
&lt;p class="admonition-title"&gt;Tip&lt;/p&gt;
&lt;p&gt;I use &lt;code&gt;set +e&lt;/code&gt; and &lt;code&gt;set -e&lt;/code&gt; around the call to the script because the whole test suite is coded with 
&lt;a href="http://redsymbol.net/articles/unofficial-bash-strict-mode/"&gt;Bash unofficial strict mode&lt;/a&gt;. Otherwise, the script
exiting with a non-zero code would exit the whole test suite.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The latter is achieved by having lines as function arguments and use &lt;code&gt;\&lt;/code&gt; to put each expected line on a different line.&lt;/p&gt;
&lt;h3 id="assertions-output-contains-lines"&gt;Assertions output contains line(s)&lt;a class="headerlink" href="#assertions-output-contains-lines" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# checks whether a single line is present in TEST_OUTPUT&lt;/span&gt;
fn_test_output_contains_line&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# declare line local to prevent leak of lines read in this function out of it&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# read TEST_OUTPUT line by line and compare each of them to searched line&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# source: https://superuser.com/a/284226&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;line&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$expected&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_OUTPUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# checks whether test output contains all the specified lines (one line per argument), IN NO SPECIFIC ORDER&lt;/span&gt;
fn_test_output_contains_lines&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;line&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;fn_test_output_contains_line&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;line&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[TEST FAILURE] Expecting output to contain \"&lt;/span&gt;&lt;span class="nv"&gt;$line&lt;/span&gt;&lt;span class="s2"&gt;\""&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

fn_run_test&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"no_marker_file"&lt;/span&gt;
fn_test_output_contains_lines&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"rsync_tmbackup: Safety check failed - the destination does not appear to be a backup folder or drive (marker file not found)."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"rsync_tmbackup: mkdir -p -- \"target/no_marker_file\" ; touch \"target/no_marker_file/backup.marker\""&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="assertion-output-ends-with-lines"&gt;Assertion output ends with line(s)&lt;a class="headerlink" href="#assertion-output-ends-with-lines" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# checks that the last lines of TEST_OUTPUT are the same as the lines provided as arguments (IN ORDER)&lt;/span&gt;
fn_test_output_ends_with&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# concatenating arguments with new lines in between&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# source: https://www.baeldung.com/linux/add-newline-variable-bash#4-shell-parameter-expansion&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;arg&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="si"&gt;}${&lt;/span&gt;&lt;span class="nv"&gt;arg&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="s1"&gt;$'\n'&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# remove trailing \n&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;expected&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="nv"&gt;1&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# capture the last n lines of TEST_OUTPUT&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# $# is the number of arguments&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;tested&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$TEST_OUTPUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tail&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"-&lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# diff between two variables&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# source: https://stackoverflow.com/a/13437445&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="w"&gt; &lt;/span&gt;diff&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$tested&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$expected&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"[TEST FAILURE] Expecting output to end with (see diff output above):"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;arg&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$@&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"  &lt;/span&gt;&lt;span class="nv"&gt;$arg&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;

fn_run_test&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"1st_backup"&lt;/span&gt;
fn_test_output_ends_with&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"rsync_tmbackup: target/1st_backup/latest exists and targets existing directory target/1st_backup/2022-04-19-202210."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"TEST1: SYM_LINK=target/1st_backup/latest DEST=target/1st_backup/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;INJECT_NOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; LINK_DEST=target/1st_backup/2022-04-19-202210 LAST_BACKUP_DIR=target/1st_backup/2022-04-19-202210"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"TEST1: SYM_LINK=target/1st_backup/latest DEST=target/1st_backup/&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;INJECT_NOW&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt; LINK_DEST=target/1st_backup/2022-04-19-202210 LAST_BACKUP_DIR=target/1st_backup/2022-04-19-202210"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="s2"&gt;"TEST1: end execution"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="conclusions"&gt;Conclusions&lt;a class="headerlink" href="#conclusions" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Positive conclusions:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it works! And it does the job, failing when log changes&lt;/li&gt;
&lt;li&gt;the test code is very succinct, readable and to the point, writing new tests is easy and fast&lt;/li&gt;
&lt;li&gt;the exercise confirms that Unit Testing is not language-specific, only the tooling is. &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Improvements:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the script could be easier to test, isolating features in function or files&lt;ul&gt;
&lt;li&gt;this would also remove the tests having side effects unrelated to the feature under test:  e.g. creation of the &lt;code&gt;pid&lt;/code&gt; file  &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;the test could have assertions on the content of the source and target directories instead of assertions on logs&lt;ul&gt;
&lt;li&gt;this would be less brittle: test can fail because logs changed while directories are still in the expected state&lt;/li&gt;
&lt;li&gt;behavior on directories IS what is expected from the script, not logs&lt;/li&gt;
&lt;li&gt;this would imply less to no production code changes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;writing tests for other pieces of the script may not be as easy/possible&lt;ul&gt;
&lt;li&gt;code was located at the beginning of the script&lt;/li&gt;
&lt;li&gt;code worked solely on directories and symlink, with little state to set up and to verify&lt;/li&gt;
&lt;li&gt;dependencies on external code were small (just &lt;code&gt;date&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Further writing of Unit Test for &lt;code&gt;Bash&lt;/code&gt; will certainly be an opportunity for more fun and learning. &lt;/p&gt;</content><category term="articles"></category><category term="Bash"></category><category term="Testing"></category></entry><entry><title>Activate venv in Makefile</title><link href="https://www.javatronic.fr/posts/2024/05/04/activate-venv-in-makefile/" rel="alternate"></link><published>2024-05-04T00:00:00+02:00</published><updated>2024-05-04T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-05-04:/posts/2024/05/04/activate-venv-in-makefile/</id><summary type="html">&lt;p&gt;I finally found a solution to have Python command use the venv of the project when calling them from Make.&lt;/p&gt;
&lt;h2 id="use-oneshell-and-a-macro"&gt;Use .ONESHELL and a macro&lt;a class="headerlink" href="#use-oneshell-and-a-macro" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By default, make runs each line of a recipe in a different subshell. &lt;code&gt;.ONESHELL&lt;/code&gt; makes make run a whole recipe in a single shell.&lt;/p&gt;
&lt;p&gt;The …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I finally found a solution to have Python command use the venv of the project when calling them from Make.&lt;/p&gt;
&lt;h2 id="use-oneshell-and-a-macro"&gt;Use .ONESHELL and a macro&lt;a class="headerlink" href="#use-oneshell-and-a-macro" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;By default, make runs each line of a recipe in a different subshell. &lt;code&gt;.ONESHELL&lt;/code&gt; makes make run a whole recipe in a single shell.&lt;/p&gt;
&lt;p&gt;The alternative is to activate the venv with every single python command, eg.: &lt;code&gt;. venv/bin/activate &amp;amp;&amp;amp; pip install -r requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nf"&gt;.ONESHELL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nv"&gt;VENV_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;.venv
&lt;span class="nv"&gt;ACTIVATE_VENV&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;/bin/activate

&lt;span class="nf"&gt;install&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;python3&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;venv&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ACTIVATE_VENV&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;--requirement&lt;span class="w"&gt; &lt;/span&gt;requirements.txt

&lt;span class="nf"&gt;run&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;install&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ACTIVATE_VENV&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;python&lt;span class="w"&gt; &lt;/span&gt;foo.my
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stackoverflow: &lt;a href="https://stackoverflow.com/a/55404948"&gt;effect and usage of .ONESHELL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;stackoverflow: &lt;a href="https://stackoverflow.com/a/73837995"&gt;using a macro to factor activation code&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="tracking-requirementstxt-changes"&gt;Tracking requirements.txt changes&lt;a class="headerlink" href="#tracking-requirementstxt-changes" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The above can be combined with appropriate makefile usage as to prime venv only once, and then track changes to &lt;code&gt;requirements.txt&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c"&gt;# use .ONESHELL to activate venv and use it across a recipe without adding it before each command (source: https://stackoverflow.com/a/55404948)&lt;/span&gt;
&lt;span class="nf"&gt;.ONESHELL&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="nv"&gt;VENV_DIR&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;.venv
&lt;span class="c"&gt;# source: https://stackoverflow.com/a/73837995&lt;/span&gt;
&lt;span class="nv"&gt;ACTIVATE_VENV&lt;/span&gt;&lt;span class="o"&gt;:=&lt;/span&gt;.&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;/bin/activate

&lt;span class="nf"&gt;$(VENV_DIR)/touchfile&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;requirements&lt;/span&gt;.&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;test&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-d&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;python3&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;venv&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ACTIVATE_VENV&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;--upgrade&lt;span class="w"&gt; &lt;/span&gt;--requirement&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;span class="w"&gt;    &lt;/span&gt;touch&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;/touchfile&amp;quot;&lt;/span&gt;

&lt;span class="nf"&gt;venv&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;&lt;span class="nv"&gt;VENV_DIR&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;/&lt;span class="n"&gt;touchfile&lt;/span&gt;

&lt;span class="nf"&gt;venvclean&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-rf&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;VENV_DIR&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;stackoverflow: &lt;a href="https://stackoverflow.com/a/46188210"&gt;using a touch file&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Python"></category><category term="Makefile"></category></entry><entry><title>Display Table of Content on Elegant for Pelican</title><link href="https://www.javatronic.fr/posts/2024/05/04/display-table-of-content-on-elegant-for-pelican/" rel="alternate"></link><published>2024-05-04T00:00:00+02:00</published><updated>2024-05-04T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-05-04:/posts/2024/05/04/display-table-of-content-on-elegant-for-pelican/</id><summary type="html">
&lt;p&gt;I did the following to enable Table of Contents display, on the side of posts, in Elegant theme:&lt;/p&gt;
&lt;h2 id="enable-toc-extension"&gt;Enable &lt;code&gt;toc&lt;/code&gt; extension&lt;a class="headerlink" href="#enable-toc-extension" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Python Markdown's extension &lt;a href="https://python-markdown.github.io/extensions/toc/"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;'extension_configs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'markdown.extensions.toc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="install-extract_toc"&gt;Install &lt;code&gt;extract_toc&lt;/code&gt;&lt;a class="headerlink" href="#install-extract_toc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install the Pelican's plugin &lt;code&gt;extract_toc&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this plugin is part of &lt;code&gt;pelican-plugins&lt;/code&gt; &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;at some point, this …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">
&lt;p&gt;I did the following to enable Table of Contents display, on the side of posts, in Elegant theme:&lt;/p&gt;
&lt;h2 id="enable-toc-extension"&gt;Enable &lt;code&gt;toc&lt;/code&gt; extension&lt;a class="headerlink" href="#enable-toc-extension" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Python Markdown's extension &lt;a href="https://python-markdown.github.io/extensions/toc/"&gt;Table of Contents&lt;/a&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;'extension_configs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'markdown.extensions.toc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="install-extract_toc"&gt;Install &lt;code&gt;extract_toc&lt;/code&gt;&lt;a class="headerlink" href="#install-extract_toc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install the Pelican's plugin &lt;code&gt;extract_toc&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;this plugin is part of &lt;code&gt;pelican-plugins&lt;/code&gt; &lt;a href="https://github.com/getpelican/pelican-plugins"&gt;repository&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;at some point, this plugin should be moved to its own repository&lt;/li&gt;
&lt;li&gt;to save on downloading the whole repo, I'm simply to going to copy it here&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;plugins
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;plugins
git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;https://github.com/getpelican/pelican-plugins.git
cp&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;pelican-plugins/extract_toc&lt;span class="w"&gt; &lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="install-extract_tocs-dependency"&gt;Install &lt;code&gt;extract_toc&lt;/code&gt;'s dependency&lt;a class="headerlink" href="#install-extract_tocs-dependency" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add to &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;beautifulsoup4
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="enable-extract_toc"&gt;Enable &lt;code&gt;extract_toc&lt;/code&gt;&lt;a class="headerlink" href="#enable-extract_toc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add to &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PLUGIN_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"plugins"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;
    &lt;span class="s2"&gt;"extract_toc"&lt;/span&gt;
&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="enable-permalinks"&gt;Enable permalinks&lt;a class="headerlink" href="#enable-permalinks" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Add setting to Python Markdown TOC extension to enable permalinks to posts' headings:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;'extension_configs'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'markdown.extensions.toc'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
  &lt;span class="p"&gt;}&lt;/span&gt;    
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;extract_toc's &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/extract_toc"&gt;README&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Elegant's documentation: &lt;a href="https://elegant.oncrashreboot.com/how-elegant-displays-table-of-contents"&gt;Add a Table of Contents to Your Articles&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Elegant's documentation: &lt;a href="https://elegant.oncrashreboot.com/permalinks-to-headings"&gt;Permalinks to Headings&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Pelican"></category></entry><entry><title>No more out-of-the-box search support for Elegant theme</title><link href="https://www.javatronic.fr/posts/2024/05/03/no-more-out-of-the-box-search-support-for-elegant-theme/" rel="alternate"></link><published>2024-05-03T00:00:00+02:00</published><updated>2024-05-03T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-05-03:/posts/2024/05/03/no-more-out-of-the-box-search-support-for-elegant-theme/</id><summary type="html">
&lt;h1 id="tipue_search-abandoned"&gt;tipue_search abandoned&lt;a class="headerlink" href="#tipue_search-abandoned" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Element theme documentation suggests using the following configuration to enable search, which relies on the &lt;code&gt;tipue_search&lt;/code&gt; plugin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'tipue_search'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;DIRECT_TEMPLATES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'search'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, this plugin and the jquery code it relies on is abandoned, as stated on Pelican Plugin's page of the plugin:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot tipue_search abandoned message" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/tipue_search_abandoned_screenshot.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican_search&lt;/code&gt; plugin should be used instead …&lt;/p&gt;</summary><content type="html">
&lt;h1 id="tipue_search-abandoned"&gt;tipue_search abandoned&lt;a class="headerlink" href="#tipue_search-abandoned" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Element theme documentation suggests using the following configuration to enable search, which relies on the &lt;code&gt;tipue_search&lt;/code&gt; plugin:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'tipue_search'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;DIRECT_TEMPLATES&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;'search'&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, this plugin and the jquery code it relies on is abandoned, as stated on Pelican Plugin's page of the plugin:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot tipue_search abandoned message" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/tipue_search_abandoned_screenshot.png"/&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;pelican_search&lt;/code&gt; plugin should be used instead, but how?&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://elegant.oncrashreboot.com/add-search"&gt;Elegant theme doc: add search&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://github.com/pelican-plugins/tipue-search?tab=readme-ov-file"&gt;tipue_search's plugin Github page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="pelican_search-abandoned"&gt;pelican_search abandoned&lt;a class="headerlink" href="#pelican_search-abandoned" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;pelican_search relies on &lt;code&gt;stork&lt;/code&gt; and this tool should be installed prior to install and run the Pelican plugin: &lt;/p&gt;
&lt;p&gt;Install Stork  on Ubuntu:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/bin
wget&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;stork&lt;span class="w"&gt; &lt;/span&gt;https://files.stork-search.net/releases/v1.6.0/stork-ubuntu-20-04
chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;stork
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, running stork fails on Ubuntu 22.04:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;stork
stork:&lt;span class="w"&gt; &lt;/span&gt;error&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;loading&lt;span class="w"&gt; &lt;/span&gt;shared&lt;span class="w"&gt; &lt;/span&gt;libraries:&lt;span class="w"&gt; &lt;/span&gt;libssl.so.1.1:&lt;span class="w"&gt; &lt;/span&gt;cannot&lt;span class="w"&gt; &lt;/span&gt;open&lt;span class="w"&gt; &lt;/span&gt;shared&lt;span class="w"&gt; &lt;/span&gt;object&lt;span class="w"&gt; &lt;/span&gt;file:&lt;span class="w"&gt; &lt;/span&gt;No&lt;span class="w"&gt; &lt;/span&gt;such&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;directory
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;At this point, I started searching for a solution.
Found one for 2-years old Ubuntu 20 (&lt;a href="https://stackoverflow.com/a/72633324"&gt;https://stackoverflow.com/a/72633324&lt;/a&gt;) that required manually installing a specific
version of OpenSSL and that I would not have followed even if it applied to Ubuntu 22.&lt;/p&gt;
&lt;p&gt;And then I found out the one maintainer of the project had stepped out a year ago:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot stork_search abandoned message" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/stork_search_abandoned_screenshot.png"/&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stork-search.net/docs/install"&gt;Stork install instructions&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jameslittle230/stork/discussions/360"&gt;Maintainer's post on winding down from project&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h1 id="use-google-search-instead"&gt;Use Google search instead&lt;a class="headerlink" href="#use-google-search-instead" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I don't have enough time to investigate alternative solutions to stork and the pelican_search plugin.&lt;/p&gt;
&lt;h2 id="change-the-search-form"&gt;Change the search form&lt;a class="headerlink" href="#change-the-search-form" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;However, I can customize the Elegant Theme search field, that I have forked.&lt;/p&gt;
&lt;p&gt;In file &lt;code&gt;base.html&lt;/code&gt;, I can replace&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-search"&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{ SITEURL }}/{{ SEARCH_URL }}"&lt;/span&gt; &lt;span class="na"&gt;onsubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"return validateForm(this.elements['q'].value);"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"search-query"&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tipue_search_input"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;by the following and create a Google search in a new window with &lt;code&gt;site:www.javatronic.fr&lt;/code&gt; as a filter:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;{% if SEARCH_URL %}
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"navbar-search"&lt;/span&gt; &lt;span class="na"&gt;action&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"{{SEARCH_URL}}"&lt;/span&gt; &lt;span class="na"&gt;onsubmit&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"return validateForm(this.elements['q'][0].value);"&lt;/span&gt; &lt;span class="na"&gt;target&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"_blank"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt; &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"text"&lt;/span&gt; &lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"search-query"&lt;/span&gt; &lt;span class="na"&gt;placeholder&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"Search"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt; &lt;span class="na"&gt;id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"tipue_search_input"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;input&lt;/span&gt; &lt;span class="na"&gt;type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"hidden"&lt;/span&gt; &lt;span class="na"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"q"&lt;/span&gt; &lt;span class="na"&gt;value&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;"site:{{ SITEURL }}"&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;form&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;li&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
{% endif %}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="enable-indexing-by-google"&gt;Enable indexing by Google&lt;a class="headerlink" href="#enable-indexing-by-google" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To appear in search results, the website must first be crawled and indexed by Google's robots.&lt;/p&gt;
&lt;p&gt;This can be achieved by adding a &lt;code&gt;robots.txt&lt;/code&gt; file to the root of the website and creating a site map.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Add &lt;code&gt;robots.txt&lt;/code&gt; to Pelican&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Create file &lt;code&gt;extra/robots.txt&lt;/code&gt;, informing that no robot (not only Google) can crawl any page of the website but those
indicated in the referred sitemap file.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;User-agent:&lt;span class="w"&gt; &lt;/span&gt;*
Disallow:

Sitemap:&lt;span class="w"&gt; &lt;/span&gt;https://www.javatronic.fr/sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Have this file deployed to the generated website by adding the following to &lt;code&gt;pelicanconf.py&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"extra/robots.txt"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"extra/robots.txt"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"robots.txt"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Create a sitemap&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;There is a &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/sitemap"&gt;plugin to generate a sitemap&lt;/a&gt; within the
official pelican plugin repository.&lt;/p&gt;
&lt;p&gt;For the small additions it provides, I decided to use the &lt;a href="https://pypi.org/project/pelican-extended-sitemap/"&gt;pelican-extended-sitemap&lt;/a&gt; plugin.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;pelican-extended-sitemap&lt;/code&gt; to &lt;code&gt;requirements.txt&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;In &lt;code&gt;pelicanconf.py&lt;/code&gt;, enable &lt;code&gt;pelican-extended-sitemap&lt;/code&gt; with
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;PLUGINS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"extended_sitemap"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Since my resume is a page, I want to boost the priority of pages compared to the default configuration and I'll
overwrite &lt;code&gt;EXTENDED_SITEMAP_PLUGIN&lt;/code&gt; in &lt;code&gt;pelicanconf.py&lt;/code&gt;: 
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;EXTENDED_SITEMAP_PLUGIN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;'priorities'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;1.0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.8&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.9&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'others'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mf"&gt;0.4&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;'changefrequencies'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="s1"&gt;'index'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'daily'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'articles'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'weekly'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'pages'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'monthly'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="s1"&gt;'others'&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;'monthly'&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id="ask-google-to-reindex"&gt;Ask Google to reindex&lt;a class="headerlink" href="#ask-google-to-reindex" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Simply waiting a few days for Google to reindex the website didn't work for me.&lt;/p&gt;
&lt;p&gt;I decided to use the submission of a sitemap in Search Console to get re-indexed.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;verify website property&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;To add a website to your Google Account's Search Console, you first need to prove you own it.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Go to Google's search console: https://search.google.com/search-console/welcome?action=inspect&lt;/li&gt;
&lt;li&gt;Select the Inspection method, I selected "URL prefix" as I have subdomains I don't need/want indexed  &lt;br/&gt;
&lt;img alt="screenshot select property validation method" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/select_property_method_screenshot.jpg"/&gt;&lt;/li&gt;
&lt;li&gt;Select property method with HTML file (the default one)&lt;br/&gt;
&lt;img alt="screenshot download HTML validation file and validate" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/download_html_file_and_validate_screenshot.jpg"/&gt;&lt;/li&gt;
&lt;li&gt;Download the HTML file, store it in the &lt;code&gt;content/extra&lt;/code&gt; directory&lt;/li&gt;
&lt;li&gt;Keep note of the original name of the file and rename it to &lt;code&gt;google_property_verification_file&lt;/code&gt; (or any other name without the &lt;code&gt;.html&lt;/code&gt; suffix to avoid Pelican error not finding a title)&lt;/li&gt;
&lt;li&gt;Add the following to &lt;code&gt;pelicanconf.py&lt;/code&gt;, using the original name of your file:
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;"extra/google_property_verification_file"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;"extra/google_property_verification_file"&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;"path"&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;"googled2a1d235c02ddb0d.html"&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;Commit and publish the file and changes to &lt;code&gt;pelicanconf.py&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Click on "Validate"&lt;/li&gt;
&lt;li&gt;After a few seconds, the Search Console for the website is accessible&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;submit the sitemap&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;In the Search Console, go to sitemaps&lt;/li&gt;
&lt;li&gt;Input the URL to the &lt;code&gt;sitemap.xml&lt;/code&gt; file&lt;br/&gt;
&lt;img alt="screenshot add a sitemap in Google Console" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/add_a_sitemap_screenshot.jpg"/&gt;&lt;/li&gt;
&lt;li&gt;Validate and confirm, after a few seconds, whether Google successfully read the sitemap
    &lt;img alt="screenshot sitemap successfully read" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/sitemap_successfully_read_screenshot.jpg"/&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;verify indexing is in progress&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In the search console, go to "Pages" and confirm indexing is pending&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot page indexing is pending" src="https://www.javatronic.fr/images/2024-05-03_enabling_search_in_elegant_theme/indexing_pending_screenshot.jpg"/&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/search/docs/crawling-indexing/robots/create-robots-txt?sjid=3511096558821730991-EU"&gt;Google's documentation: How to write and submit a robots.txt file&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/search/docs/crawling-indexing/ask-google-to-recrawl"&gt;Google's documentation: Ask Google to recrawl your URLs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://developers.google.com/search/docs/crawling-indexing/sitemaps/build-sitemap#addsitemap"&gt;Google's documentation: Submit your sitemap to Google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jackdewinter.github.io/2019/10/30/fine-tuning-pelican-enabling-website-crawling/"&gt;Jack's Digital Workbench: Fine Tuning Pelican: Enabling Website Crawling&lt;/a&gt; (who coincidentally also uses both Pelican and the Elegant theme)&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="articles"></category><category term="Pelican"></category><category term="Javatronic"></category><category term="Python"></category></entry><entry><title>Migrating from Jekyll to Pelican</title><link href="https://www.javatronic.fr/posts/2024/05/02/migrating-from-jekyll-to-pelican/" rel="alternate"></link><published>2024-05-02T00:00:00+02:00</published><updated>2024-05-02T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-05-02:/posts/2024/05/02/migrating-from-jekyll-to-pelican/</id><summary type="html">&lt;h1 id="boostrap"&gt;Boostrap&lt;a class="headerlink" href="#boostrap" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Setup project directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;venv&lt;span class="w"&gt; &lt;/span&gt;.venv
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican[markdown]&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;.venv/bin/activate
pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Options for quickstart configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; Where do you want to create your new web site? [.] 
&amp;gt; What will be the title of this web site? Javatronic
&amp;gt; Who will be …&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1 id="boostrap"&gt;Boostrap&lt;a class="headerlink" href="#boostrap" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Setup project directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;python3&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;venv&lt;span class="w"&gt; &lt;/span&gt;.venv
&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pelican[markdown]&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;.venv/bin/activate
pip&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;requirements.txt
pelican-quickstart
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Options for quickstart configuration:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&amp;gt; Where do you want to create your new web site? [.] 
&amp;gt; What will be the title of this web site? Javatronic
&amp;gt; Who will be the author of this web site? Sébastien Lesaint
&amp;gt; What will be the default language of this web site? [fr] en
&amp;gt; What is your URL prefix? (see above example; no trailing slash) https://www.javatronic.fr
&amp;gt; Do you want to enable article pagination? (Y/n) y
&amp;gt; How many articles per page do you want? [10] 10
&amp;gt; What is your time zone? [Europe/Rome] Europe/Paris
&amp;gt; Do you want to generate a tasks.py/Makefile to automate generation and publishing? (Y/n) y
&amp;gt; Do you want to upload your website using FTP? (y/N) n
&amp;gt; Do you want to upload your website using SSH? (y/N) n
&amp;gt; Do you want to upload your website using Dropbox? (y/N) n
&amp;gt; Do you want to upload your website using S3? (y/N) n
&amp;gt; Do you want to upload your website using Rackspace Cloud Files? (y/N) n
&amp;gt; Do you want to upload your website using GitHub Pages? (y/N) y
&amp;gt; Is this your personal page (username.github.io)? (y/N) y
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;https://docs.getpelican.com/en/latest/quickstart.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="customize-for-markdown"&gt;Customize for markdown&lt;a class="headerlink" href="#customize-for-markdown" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Add the following to &lt;code&gt;pelicanconf.py&lt;/code&gt;, which:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Markdown support is enabled by installing &lt;code&gt;pelican[markdown]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Enable TOC extension to generate Table of Content where &lt;code&gt;[TOC]&lt;/code&gt; is present in markdown&lt;/li&gt;
&lt;li&gt;depth limited to 2&lt;/li&gt;
&lt;li&gt;Enable &lt;a href="https://python-markdown.github.io/extensions/extra/"&gt;Extra&lt;/a&gt; extension for &lt;a href="https://python-markdown.github.io/extensions/fenced_code_blocks/"&gt;Fenced Code Blocks&lt;/a&gt; and because the others can't hurt&lt;/li&gt;
&lt;li&gt;Enable &lt;a href="https://python-markdown.github.io/extensions/nl2br/"&gt;New Line To Break&lt;/a&gt; and &lt;a href="https://python-markdown.github.io/extensions/sane_lists/"&gt;Sane Lists&lt;/a&gt; because they just make sense&lt;/li&gt;
&lt;li&gt;Enable &lt;code&gt;pymdownx.superfences&lt;/code&gt; extension&lt;/li&gt;
&lt;li&gt;I need it to support code blocks within lists&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;MARKDOWN&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;extension_configs&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.toc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;title&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Table of contents:&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
      &lt;span class="s1"&gt;&amp;#39;toc_depth&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;
    &lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.codehilite&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;css_class&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;highlight&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.meta&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.sane_lists&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;markdown.extensions.nl2br&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;pymdownx.superfences&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{},&lt;/span&gt;
  &lt;span class="p"&gt;},&lt;/span&gt;
  &lt;span class="s1"&gt;&amp;#39;output_format&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;html5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/stable/settings.html#basic-settings"&gt;Pelican's documentation for setting &lt;code&gt;MARKDOWN&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://python-markdown.github.io/extensions/"&gt;Python Markdown built-in extensions&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://facelessuser.github.io/pymdown-extensions/extensions/superfences/"&gt;Documentation of superfences&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://facelessuser.github.io/pymdown-extensions/installation/"&gt;Installation of PyMDown Extensions&lt;/a&gt; superfences is a part of&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="migrating-markdown-files-content"&gt;Migrating markdown files content&lt;a class="headerlink" href="#migrating-markdown-files-content" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The following content in markdown must be changed.&lt;/p&gt;
&lt;h2 id="metadata"&gt;metadata&lt;a class="headerlink" href="#metadata" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;syntax is different&lt;/li&gt;
&lt;li&gt;some items do not exist in Pelican: &lt;code&gt;layout&lt;/code&gt;, &lt;code&gt;image&lt;/code&gt;, &lt;code&gt;comments&lt;/code&gt;, &lt;code&gt;share&lt;/code&gt;, &lt;code&gt;redirect_from&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;category&lt;/code&gt; metadata can be dropped as we will use directories instead of metadata&lt;/li&gt;
&lt;li&gt;&lt;code&gt;description&lt;/code&gt; metadata can be renamed to &lt;code&gt;summary&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;content of &lt;code&gt;tags&lt;/code&gt; metadata must be converted to a comma-separated list&lt;/li&gt;
&lt;li&gt;&lt;code&gt;"&lt;/code&gt; (quotes) must be removed from &lt;code&gt;title&lt;/code&gt; metadata&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="table-of-content"&gt;Table of content&lt;a class="headerlink" href="#table-of-content" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;syntax is different: &lt;code&gt;{:toc}&lt;/code&gt; must be replaced by &lt;code&gt;[TOC]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;title &lt;code&gt;* Table of Contents&lt;/code&gt; can be removed as  it is inserted by the markdown plugin&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="code-blocks"&gt;code blocks&lt;a class="headerlink" href="#code-blocks" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;syntax is different: &lt;code&gt;{% highlight foo}&lt;/code&gt; replaced by &lt;code&gt;```foo&lt;/code&gt; and &lt;code&gt;{% endhighlight %}&lt;/code&gt; replaced by &lt;code&gt;```&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="links"&gt;links&lt;a class="headerlink" href="#links" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;syntax for internal links is different: from &lt;code&gt;[foo]({% posturl bar %})&lt;/code&gt; to &lt;code&gt;[foo]({filename}bar)&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;articles/bar&lt;/code&gt; must become &lt;code&gt;/articles/bar.md&lt;/code&gt; if current file is not in the &lt;code&gt;articles&lt;/code&gt; category (aka. root relative)&lt;/li&gt;
&lt;li&gt;otherwise, it can become &lt;code&gt;bar.md&lt;/code&gt; (aka. file relative)&lt;/li&gt;
&lt;li&gt;for simplicity, we will use root relative everywhere&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;syntax for links to resources is different and resources have a different location&lt;ul&gt;
&lt;li&gt;&lt;code&gt;{{ site.url }}/resourcs/foo.png&lt;/code&gt; must become &lt;code&gt;{static}/images/foo.png&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;(resources could also be "attached" but, so far, I haven't seen the use case, so I'll keep to &lt;code&gt;{static}&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/latest/content.html#linking-to-internal-content"&gt;Pelican's doc on linking to internal content&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.getpelican.com/en/latest/content.html#linking-to-static-files"&gt;Pelican's doc on linking resources&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="manual-migration-attempt"&gt;Manual migration attempt&lt;a class="headerlink" href="#manual-migration-attempt" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;find all code block types
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;grep&lt;span class="w"&gt; &lt;/span&gt;--no-filename&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;{% highlight&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;xargs&lt;span class="w"&gt; &lt;/span&gt;-L1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sort&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;uniq
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;replace opening blocks
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/{% highlight sh %}/\`\`\`shell/g&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="w"&gt; &lt;/span&gt;
sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/{% highlight java %}/\`\`\`java/g&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="w"&gt; &lt;/span&gt;
sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/{% highlight xml %}/\`\`\`xml/g&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="w"&gt; &lt;/span&gt;
sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/{% highlight json %}/\`\`\`json/g&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;replace closing blocks
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s/{% endhighlight %}/\`\`\`/g&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;remove heading and trailing &lt;code&gt;---&lt;/code&gt; of Jekyll header
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sed&lt;span class="w"&gt; &lt;/span&gt;-i&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/^\-\-\-/d&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;*.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Altering the metadata, including converting data on multiple lines to a single line, is too hard of a challenge to do
with bash. The tool is not appropriate. Let's switch to Python.&lt;/p&gt;
&lt;h1 id="python-based-migration"&gt;Python-based migration&lt;a class="headerlink" href="#python-based-migration" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;See &lt;a href="https://github.com/lesaint/jekyll_to_pelican_migration/blob/main/migrate_md.py"&gt;migrate_md.py&lt;/a&gt; on Github.&lt;/p&gt;
&lt;p&gt;Copy Markdown files to the Pelican's location, using a specific subdirectory just for the sake of 
segregating old migrated posts from new ones, and run the script on them:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;content/from_jekyll/articles
cp&lt;span class="w"&gt; &lt;/span&gt;_posts/articles/*.md&lt;span class="w"&gt; &lt;/span&gt;content/articles/
mkdir&lt;span class="w"&gt; &lt;/span&gt;-p&lt;span class="w"&gt; &lt;/span&gt;content/from_jekyll/tips
cp&lt;span class="w"&gt; &lt;/span&gt;_posts/tips/*.md&lt;span class="w"&gt; &lt;/span&gt;content/articles/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:lesaint/jekyll_to_pelican_migration.git&lt;span class="w"&gt; &lt;/span&gt;../jekyll_to_pelican_migration
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;content/articles&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../../../jekyll_to_pelican_migration/migrate_md.py&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;content/tips&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../../../jekyll_to_pelican_migration/migrate_md.py&lt;span class="w"&gt; &lt;/span&gt;*.md&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Copy images files of posts to Pelican's location&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;resources/how_to_debug_an_annotation_processor&lt;span class="w"&gt; &lt;/span&gt;content/images/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If rendering of Markdown files is now ok, remove &lt;code&gt;.md.backup&lt;/code&gt; files:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;rm&lt;span class="w"&gt; &lt;/span&gt;content/*/*.md.backup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Pelican"></category><category term="Javatronic"></category></entry><entry><title>Emulate Crontab mailto feature with a script on QNAP NAS</title><link href="https://www.javatronic.fr/posts/2024/03/18/emulate-crontab-mailto-feature-with-a-script-on-qnap-nas/" rel="alternate"></link><published>2024-03-18T00:00:00+01:00</published><updated>2024-03-18T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-03-18:/posts/2024/03/18/emulate-crontab-mailto-feature-with-a-script-on-qnap-nas/</id><summary type="html">
&lt;p&gt;I run jobs on a regular basis on my QNAP NAS with &lt;code&gt;cron&lt;/code&gt; and I want to be notified if any of these jobs fails or sends
warnings.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Crontab&lt;/code&gt; has a simple and super neat feature called &lt;code&gt;MAILTO&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When this variable is set, &lt;code&gt;Crontab&lt;/code&gt; sends any output from the cron …&lt;/p&gt;</summary><content type="html">
&lt;p&gt;I run jobs on a regular basis on my QNAP NAS with &lt;code&gt;cron&lt;/code&gt; and I want to be notified if any of these jobs fails or sends
warnings.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Crontab&lt;/code&gt; has a simple and super neat feature called &lt;code&gt;MAILTO&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;When this variable is set, &lt;code&gt;Crontab&lt;/code&gt; sends any output from the cron job to the recipient.&lt;/p&gt;
&lt;p&gt;The variable is set by default and the recipient is the current user (owner) of the crontab and the mail is a Linux "in-"mail.&lt;/p&gt;
&lt;p&gt;To disable the feature, set the variable to an empty value: &lt;code&gt;MAILTO=""&lt;/code&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://man7.org/linux/man-pages/man5/crontab.5.html"&gt;crontab man7 page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="crontab-mailto-not-working-on-qnap-systems"&gt;Crontab MAILTO not working on QNAP systems&lt;a class="headerlink" href="#crontab-mailto-not-working-on-qnap-systems" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Unfortunately, on QNAP NAS systems (at least on mine with QTS 5.X), &lt;code&gt;Crontab&lt;/code&gt; &lt;code&gt;MAILTO&lt;/code&gt; is disabled, not implemented, or
not working.&lt;/p&gt;
&lt;p&gt;To work around this on my TS-253E, one can write a Bash script that will mimic the behavior: call a command, and if anything is
written to &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt;, send it by email to some recipient. &lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://forum.qnap.com/viewtopic.php?p=718601&amp;amp;sid=1238e70ddd95a7f07639632eed6c758d"&gt;QNAP forum on Crontab not sending email&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="a-script-mimicking-crontabs-mailto"&gt;A script mimicking Crontab's MAILTO&lt;a class="headerlink" href="#a-script-mimicking-crontabs-mailto" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="requirements"&gt;Requirements&lt;a class="headerlink" href="#requirements" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;ssmtp&lt;/code&gt; available on path and configured to send out emails&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For tips on installing and configuring &lt;code&gt;sSMTP&lt;/code&gt;, see &lt;a href="https://www.javatronic.fr/posts/2023/12/12/configure-ssmtp-with-gmail-on-ubuntu/"&gt;Configure sSMTP with Gmail on Ubuntu&lt;/a&gt;
and &lt;a href="https://www.javatronic.fr/posts/2023/12/14/configure-ssmtp-with-gmail-on-qnap/"&gt;Configure sSMTP with Gmail on QNAP&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="features"&gt;Features&lt;a class="headerlink" href="#features" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;sends an email if command has any output (either &lt;code&gt;stdout&lt;/code&gt; or &lt;code&gt;stderr&lt;/code&gt; or both) &lt;strong&gt;and/or&lt;/strong&gt; exit code is non-zero&lt;/li&gt;
&lt;li&gt;otherwise, the script only executes the command and has no side effect&lt;/li&gt;
&lt;li&gt;subject is truncated to 78 chars&lt;/li&gt;
&lt;li&gt;subject contains the current user to identify who's crontab was executed&lt;/li&gt;
&lt;li&gt;subject contains the date and time of the execution of the command&lt;ul&gt;
&lt;li&gt;this serves both a debugging purpose and prevents Gmail from not sending/receiving identical emails&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/1592310"&gt;RFC 2822 recommendation on subject size&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="how-to-use"&gt;How to use&lt;a class="headerlink" href="#how-to-use" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In a &lt;code&gt;crontab&lt;/code&gt; file, simply pass the command to execute as argument (&lt;strong&gt;mind using quotes to avoid command be executed and/or part of it missing&lt;/strong&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;CRONEXPRESSION&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/home/foo/scripts/cronmail.sh&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/home/foo/scripts/bar.sh"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="send-email-only-upon-error-output"&gt;send email only upon error output&lt;a class="headerlink" href="#send-email-only-upon-error-output" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Silence stdout with &lt;code&gt;1&amp;gt;/dev/null&lt;/code&gt;, eg.:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;CRONEXPRESSION&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/home/foo/scripts/cronmail.sh&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"/home/foo/scripts/bar.sh 1&amp;gt;/dev/null"&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="the-script"&gt;The script&lt;a class="headerlink" href="#the-script" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# Bash unofficial strict mode [source](http://redsymbol.net/articles/unofficial-bash-strict-mode/)&lt;/span&gt;
&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-euo&lt;span class="w"&gt; &lt;/span&gt;pipefail
&lt;span class="nv"&gt;IFS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;$'\n\t'&lt;/span&gt;

&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# Functions&lt;/span&gt;
&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
fn_terminate_script&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;STDOUT&lt;/span&gt;&lt;span class="k"&gt;:-&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;rm&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$STDOUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;fi&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

fn_echo_email_header&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;# email subject:&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#  * includes the date and time to work around Gmail not sending/receiving emails that are exactly the same&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#    (maybe this applies only over some period of time)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;#  * will be truncated to 78 chars (RFC 2822 recommendation [source](https://stackoverflow.com/a/1592310))&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;local&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;subject&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"[CRON][&lt;/span&gt;&lt;span class="nv"&gt;$USER&lt;/span&gt;&lt;span class="s2"&gt;][&lt;/span&gt;&lt;span class="nv"&gt;$CMD_DATE&lt;/span&gt;&lt;span class="s2"&gt;] &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;CMD&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"To: &lt;/span&gt;&lt;span class="nv"&gt;$MAILTO&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Subject: &lt;/span&gt;&lt;span class="si"&gt;${&lt;/span&gt;&lt;span class="nv"&gt;subject&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;0&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="nv"&gt;78&lt;/span&gt;&lt;span class="si"&gt;}&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;""&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"============ executed command ============"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$CMD&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"============== return code ==============="&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$CMD_RETURN_CODE&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

fn_echo_email_no_output&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_echo_email_header
&lt;span class="w"&gt;    &lt;/span&gt;fn_echo_email_footer
&lt;span class="o"&gt;}&lt;/span&gt;

fn_echo_email_with_output&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_echo_email_header
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"================ output =================="&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;cat&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$STDOUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_echo_email_footer
&lt;span class="o"&gt;}&lt;/span&gt;

fn_echo_email_footer&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"=========================================="&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

fn_send_email&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;ssmtp
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# Main&lt;/span&gt;
&lt;span class="c1"&gt;# -----------------------------------------------------------------------------&lt;/span&gt;
&lt;span class="c1"&gt;# constants&lt;/span&gt;
&lt;span class="nv"&gt;MAILTO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"foo.bar.acme@gmail.com"&lt;/span&gt;

&lt;span class="c1"&gt;# the command to execute from CRON&lt;/span&gt;
&lt;span class="nv"&gt;CMD&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;span class="nv"&gt;CMD_DATE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date&lt;span class="w"&gt; &lt;/span&gt;+&lt;span class="s2"&gt;"%Y-%m-%d-%H%M%S"&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# create temporary file to collect stdout and stderr to&lt;/span&gt;
&lt;span class="nv"&gt;STDOUT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;mktemp&lt;span class="w"&gt; &lt;/span&gt;/tmp/cronme.out.XXXXXXXXXX&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"failed to create temp file"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;

&lt;span class="c1"&gt;# ensure no file is left behind even if script is interrupted/killed&lt;/span&gt;
&lt;span class="nb"&gt;trap&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'fn_terminate_script'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;SIGINT

&lt;span class="c1"&gt;# evaluate the command, capturing both stdout and stderr to a file&lt;/span&gt;
&lt;span class="c1"&gt;# disable bash's "e" option to ensure this script keeps on running if evaluated command is killed/exits with non-zero code&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;+e
&lt;span class="nb"&gt;eval&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$CMD&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;&amp;gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$STDOUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="nv"&gt;CMD_RETURN_CODE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$?&lt;/span&gt;
&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-e

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$STDOUT&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_echo_email_with_output&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fn_send_email
&lt;span class="k"&gt;elif&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$CMD_RETURN_CODE&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-ne&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;fn_echo_email_no_output&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fn_send_email
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="c1"&gt;# clean up&lt;/span&gt;
fn_terminate_script
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Bash"></category><category term="Linux"></category><category term="QNAP"></category></entry><entry><title>Merge multiple Git repositories while keeping history</title><link href="https://www.javatronic.fr/posts/2024/02/15/merge-multiple-git-repositories-while-keeping-history/" rel="alternate"></link><published>2024-02-15T00:00:00+01:00</published><updated>2024-02-15T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2024-02-15:/posts/2024/02/15/merge-multiple-git-repositories-while-keeping-history/</id><summary type="html">&lt;h1 id="why"&gt;WHY&lt;a class="headerlink" href="#why" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have 5 repositories (they are all private) holding scripts for my home backup strategy.
I clone them on my NAS and maintain them on my laptop.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onsite_backup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;offsite_backup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_backup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;phanas_scripts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onsite_backup_copy&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloning multiple repositories on multiple machine is cumbersome.&lt;/p&gt;
&lt;p&gt;It is also error-prone as consistency between the scripts …&lt;/p&gt;</summary><content type="html">&lt;h1 id="why"&gt;WHY&lt;a class="headerlink" href="#why" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have 5 repositories (they are all private) holding scripts for my home backup strategy.
I clone them on my NAS and maintain them on my laptop.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;onsite_backup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;offsite_backup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;local_backup&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;phanas_scripts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;onsite_backup_copy&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Cloning multiple repositories on multiple machine is cumbersome.&lt;/p&gt;
&lt;p&gt;It is also error-prone as consistency between the scripts is sometimes required.&lt;/p&gt;
&lt;p&gt;In addition, some code is duplicated and has diverged on a couple occasions already. &lt;/p&gt;
&lt;h1 id="what"&gt;WHAT&lt;a class="headerlink" href="#what" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I want to merge all repositories into &lt;code&gt;phanas_scripts&lt;/code&gt;, keeping the history.&lt;/p&gt;
&lt;p&gt;I'll follow this procedure:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;in each repository, move content to a subdirectory with the name of the repo&lt;/li&gt;
&lt;li&gt;merge content of the 3 other repos into &lt;code&gt;phanas_scripts&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;to keep the history, use &lt;code&gt;git merge --allow-unrelated-histories&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://stackoverflow.com/a/76831513"&gt;https://stackoverflow.com/a/76831513&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="how"&gt;HOW&lt;a class="headerlink" href="#how" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/tmp
mkdir&lt;span class="w"&gt; &lt;/span&gt;work_dir
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;work_dir

&lt;span class="c1"&gt;# clone repositories, the target one and those to merge&lt;/span&gt;
g&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:lesaint/phanas_scripts.git
g&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:lesaint/local_backup.git
g&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:lesaint/onsite_backup.git
g&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:lesaint/offsite_backup.git
g&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git@github.com:lesaint/onsite_backup_copy.git

&lt;span class="c1"&gt;# move local_backup repository content to a subdirectory&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;local_backup
mkdir&lt;span class="w"&gt; &lt;/span&gt;local_backup
git&lt;span class="w"&gt; &lt;/span&gt;mv&lt;span class="w"&gt; &lt;/span&gt;local_backup.sh&lt;span class="w"&gt; &lt;/span&gt;README.md&lt;span class="w"&gt; &lt;/span&gt;rtb.sh&lt;span class="w"&gt; &lt;/span&gt;sync_on_nas.sh&lt;span class="w"&gt; &lt;/span&gt;local_backup/
&lt;span class="c1"&gt;# fix rtb.sh symlink, broken by the move&lt;/span&gt;
unlink&lt;span class="w"&gt; &lt;/span&gt;rtb.sh
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;local_backup
ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;../../rtb/rsync_tmbackup.sh&lt;span class="w"&gt; &lt;/span&gt;rtb.sh
git&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;rtb.sh
git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;move local_backup repository content to subdirectory local_backup&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# do the same with offsite_backup repository&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../offsite_backup
mkdir&lt;span class="w"&gt; &lt;/span&gt;offsite_backup
git&lt;span class="w"&gt; &lt;/span&gt;mv&lt;span class="w"&gt; &lt;/span&gt;exclude_rtb_managed_dirs&lt;span class="w"&gt; &lt;/span&gt;offsite_backup.sh&lt;span class="w"&gt; &lt;/span&gt;README.md&lt;span class="w"&gt; &lt;/span&gt;sync_on_phanas.sh&lt;span class="w"&gt; &lt;/span&gt;offsite_backup/
git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;move offsite_backup repository content to offsite_backup subdirectory&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# do the same with onsite_backup repository&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../onsite_backup
mkdir&lt;span class="w"&gt; &lt;/span&gt;onsite_backup
git&lt;span class="w"&gt; &lt;/span&gt;mv&lt;span class="w"&gt; &lt;/span&gt;backup.sh&lt;span class="w"&gt; &lt;/span&gt;exclude_rtb_managed_dirs&lt;span class="w"&gt; &lt;/span&gt;README.md&lt;span class="w"&gt; &lt;/span&gt;onsite_backup/
git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;move onsite_backup repository content to onsite_backup subdirectory&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;# take the opportunity to fix the name of the script&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;onsite_backup
git&lt;span class="w"&gt; &lt;/span&gt;mv&lt;span class="w"&gt; &lt;/span&gt;backup.sh&lt;span class="w"&gt; &lt;/span&gt;onsite_backup.sh
git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;rename backup.sh to onsite_backup.sh for consistency&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# do the same with onsite_backup_copy repository&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../onsite_backup_copy
mkdir&lt;span class="w"&gt; &lt;/span&gt;onsite_backup_copy
git&lt;span class="w"&gt; &lt;/span&gt;mv&lt;span class="w"&gt; &lt;/span&gt;copy.sh&lt;span class="w"&gt; &lt;/span&gt;exclude.rsync&lt;span class="w"&gt; &lt;/span&gt;README.md&lt;span class="w"&gt; &lt;/span&gt;onsite_backup_copy/
git&lt;span class="w"&gt; &lt;/span&gt;commit&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;move onsite_backup_copy repo content to onsite_backup_copy subdirectory&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# go to target repository and add all source directories local clones as remote&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;../phanas_scripts
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;onsite_backup&lt;span class="w"&gt; &lt;/span&gt;../onsite_backup
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;offsite_backup&lt;span class="w"&gt; &lt;/span&gt;../offsite_backup
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;local_backup&lt;span class="w"&gt; &lt;/span&gt;../local_backup
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;onsite_backup_copy&lt;span class="w"&gt; &lt;/span&gt;../onsite_backup_copy

&lt;span class="c1"&gt;# fetch all repository contents&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;fetch&lt;span class="w"&gt; &lt;/span&gt;--all

&lt;span class="c1"&gt;# merge, one after the other, all source repositories&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;merge&lt;span class="w"&gt; &lt;/span&gt;--allow-unrelated-histories&lt;span class="w"&gt; &lt;/span&gt;onsite_backup/master&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;merge &amp;#39;onsite_backup&amp;#39; repository into &amp;#39;phanas_scripts&amp;#39; repository&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;merge&lt;span class="w"&gt; &lt;/span&gt;--allow-unrelated-histories&lt;span class="w"&gt; &lt;/span&gt;offsite_backup/master&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;merge &amp;#39;offsite_backup&amp;#39; repository into &amp;#39;phanas_scripts&amp;#39; repository&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;merge&lt;span class="w"&gt; &lt;/span&gt;--allow-unrelated-histories&lt;span class="w"&gt; &lt;/span&gt;local_backup/master&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;merge &amp;#39;local_backup&amp;#39; repository into &amp;#39;phanas_scripts&amp;#39; repository&amp;quot;&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;merge&lt;span class="w"&gt; &lt;/span&gt;--allow-unrelated-histories&lt;span class="w"&gt; &lt;/span&gt;onsite_backup_copy/master&lt;span class="w"&gt; &lt;/span&gt;-m&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;merge &amp;#39;onsite_backup_copy&amp;#39; repository into &amp;#39;phanas_scripts&amp;#39; repository&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# clean up remotes&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;remove&lt;span class="w"&gt; &lt;/span&gt;local_backup
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;remove&lt;span class="w"&gt; &lt;/span&gt;offsite_backup
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;remove&lt;span class="w"&gt; &lt;/span&gt;onsite_backup&lt;span class="w"&gt; &lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;remove&lt;span class="w"&gt; &lt;/span&gt;onsite_backup_copy

git&lt;span class="w"&gt; &lt;/span&gt;push
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="tips"></category><category term="Git"></category></entry><entry><title>Configure sSMTP with Gmail on QNAP</title><link href="https://www.javatronic.fr/posts/2023/12/14/configure-ssmtp-with-gmail-on-qnap/" rel="alternate"></link><published>2023-12-14T00:00:00+01:00</published><updated>2023-12-14T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2023-12-14:/posts/2023/12/14/configure-ssmtp-with-gmail-on-qnap/</id><summary type="html">&lt;p&gt;&lt;code&gt;sSMTP&lt;/code&gt; is a send-only &lt;code&gt;sendmail&lt;/code&gt; emulator for Linux. It replaces &lt;code&gt;sendmail&lt;/code&gt;, in place, but implements only send features.&lt;/p&gt;
&lt;h1 id="install-and-configure-ssmtp"&gt;Install and configure sSMTP&lt;a class="headerlink" href="#install-and-configure-ssmtp" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;On QTS 5.X, &lt;code&gt;sSMTP&lt;/code&gt; is already installed.&lt;/p&gt;
&lt;p&gt;However, it is not the standard &lt;code&gt;ssmtp&lt;/code&gt; binary: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it doesn't support providing recipient as argument (ie. the standard &lt;code&gt;sendmail foo …&lt;/code&gt;&lt;/li&gt;&lt;/ol&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;sSMTP&lt;/code&gt; is a send-only &lt;code&gt;sendmail&lt;/code&gt; emulator for Linux. It replaces &lt;code&gt;sendmail&lt;/code&gt;, in place, but implements only send features.&lt;/p&gt;
&lt;h1 id="install-and-configure-ssmtp"&gt;Install and configure sSMTP&lt;a class="headerlink" href="#install-and-configure-ssmtp" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;On QTS 5.X, &lt;code&gt;sSMTP&lt;/code&gt; is already installed.&lt;/p&gt;
&lt;p&gt;However, it is not the standard &lt;code&gt;ssmtp&lt;/code&gt; binary: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it doesn't support providing recipient as argument (ie. the standard &lt;code&gt;sendmail foo@bar.net&lt;/code&gt;). Recipients must be provided as header in the message:
    &lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;To: jane.doe@gmail.com
Subject: This is a subject

Did you receive this message?
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;the configuration file is not in standard location (&lt;code&gt;/etc/ssmtp/ssmtp.conf&lt;/code&gt;): &lt;code&gt;/etc/config/ssmtp/ssmtp.conf&lt;/code&gt; &lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="configure-ssmtp-on-ts-243e"&gt;Configure sSMTP on TS-243E&lt;a class="headerlink" href="#configure-ssmtp-on-ts-243e" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Use the UI and QNAP's Notification center interface, add an email.&lt;/p&gt;
&lt;p&gt;&lt;img alt="clicks in QTS UI to create email account" src="https://www.javatronic.fr/images/2023-12-14_configure_ssmtp_with_gmail_on_qnap/screenshot_config_ssmtp_in_qnap.jpg"&gt;&lt;/p&gt;
&lt;div class="admonition hint"&gt;
&lt;p&gt;QNAP's QTS configures authentication with Gmail through Oauth token-based authentication.&lt;/p&gt;
&lt;p&gt;This can't be achieved (to my knowledge) in command line, but this is more secure than an Application Password
stored in plain text (see &lt;a href="https://www.javatronic.fr/posts/2023/12/12/configure-ssmtp-with-gmail-on-ubuntu/"&gt;Configure sSMTP with Gmail on Ubuntu&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linux.die.net/man/8/sendmail.sendmail"&gt;sSMTP man 8 page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://docs.qnap.com/operating-system/qts/5.1.x/en-us/configuring-an-email-notification-server-EB4E6D7F.html"&gt;QTS 5.1.X documentation: Configuring an email notification server&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="QNAP"></category></entry><entry><title>Configure sSMTP with Gmail on Ubuntu</title><link href="https://www.javatronic.fr/posts/2023/12/12/configure-ssmtp-with-gmail-on-ubuntu/" rel="alternate"></link><published>2023-12-12T00:00:00+01:00</published><updated>2023-12-12T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2023-12-12:/posts/2023/12/12/configure-ssmtp-with-gmail-on-ubuntu/</id><summary type="html">&lt;p&gt;&lt;code&gt;sSMTP&lt;/code&gt; is a send-only &lt;code&gt;sendmail&lt;/code&gt; emulator for Linux. It replaces &lt;code&gt;sendmail&lt;/code&gt;, in place, but implements only send features.&lt;/p&gt;
&lt;h1 id="create-an-app-password-in-gmail"&gt;Create an App password in Gmail&lt;a class="headerlink" href="#create-an-app-password-in-gmail" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Only required when Two-Factor-Authentication (2FA) is enabled&lt;/strong&gt;, but:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;everyone should have 2FA enabled&lt;/li&gt;
&lt;li&gt;prevents storing the email's password in plain text configuration files&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Procedure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go to …&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;sSMTP&lt;/code&gt; is a send-only &lt;code&gt;sendmail&lt;/code&gt; emulator for Linux. It replaces &lt;code&gt;sendmail&lt;/code&gt;, in place, but implements only send features.&lt;/p&gt;
&lt;h1 id="create-an-app-password-in-gmail"&gt;Create an App password in Gmail&lt;a class="headerlink" href="#create-an-app-password-in-gmail" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Only required when Two-Factor-Authentication (2FA) is enabled&lt;/strong&gt;, but:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;everyone should have 2FA enabled&lt;/li&gt;
&lt;li&gt;prevents storing the email's password in plain text configuration files&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Procedure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;go to &lt;code&gt;Google Account&lt;/code&gt; &amp;gt; &lt;code&gt;Security&lt;/code&gt; &amp;gt; &lt;code&gt;2-Step verification&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;scroll to the bottom to &lt;code&gt;App passwords&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="install-ssmtp"&gt;Install ssmtp&lt;a class="headerlink" href="#install-ssmtp" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ssmtp
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Configure &lt;code&gt;sSMTP&lt;/code&gt;, edit &lt;code&gt;/etc/ssmtp/ssmtp.conf&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;#
# Config file for sSMTP sendmail
#
# The person who gets all mail for userids &amp;lt; 1000
# Make this empty to disable rewriting.
root=postmaster

# The place where the mail goes. The actual machine name is required no 
# MX records are consulted. Commonly mailhosts are named mail.domain.com
mailhub=mail

# Where will the mail seem to come from?
#rewriteDomain=

# The full hostname
hostname=Acme

# Are users allowed to set their own From: address?
# YES - Allow the user to specify their own From: address
# NO - Use the system generated From: address
#FromLineOverride=YES

# added by me below
AuthUser=acme@gmail.com
AuthPass=secret_application_password
mailhub=smtp.gmail.com:587
UseSTARTTLS=YES
FROM:acme@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="make-a-test"&gt;make a test&lt;a class="headerlink" href="#make-a-test" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Subject: test&amp;#39;s subject&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;echo&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;This is another test&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ssmtp&lt;span class="w"&gt; &lt;/span&gt;donut@gmail.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://nextpertise.net/posts/230313_command_line_email/"&gt;Sending Email through Google from the Command Line&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://noted.lol/setup-gmail-smtp-sending-2023/"&gt;You can Still use Gmail SMTP to Send E-Mails in 2024 and Here's How&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://unix.stackexchange.com/a/244296"&gt;Oneliner to test &lt;code&gt;sSMTP&lt;/code&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Ubuntu"></category></entry><entry><title>Install Git on QNAP's QTS 5.X</title><link href="https://www.javatronic.fr/posts/2023/12/03/install-git-on-qnaps-qts-5x/" rel="alternate"></link><published>2023-12-03T00:00:00+01:00</published><updated>2023-12-03T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2023-12-03:/posts/2023/12/03/install-git-on-qnaps-qts-5x/</id><summary type="html">&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; is not installed by default on QNAP's QTS 5.X systems (nor was it on QTS 4.X).&lt;/p&gt;
&lt;p&gt;In absence of standard package managers (eg. &lt;code&gt;apt&lt;/code&gt;), &lt;code&gt;Git&lt;/code&gt; must be installed via a third-party App Repository in QNAP's App Center.&lt;/p&gt;
&lt;p&gt;After searching the web and finding many references to non-existent …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;Git&lt;/code&gt; is not installed by default on QNAP's QTS 5.X systems (nor was it on QTS 4.X).&lt;/p&gt;
&lt;p&gt;In absence of standard package managers (eg. &lt;code&gt;apt&lt;/code&gt;), &lt;code&gt;Git&lt;/code&gt; must be installed via a third-party App Repository in QNAP's App Center.&lt;/p&gt;
&lt;p&gt;After searching the web and finding many references to non-existent or now-gone App Centers, I settled on using &lt;a href="https://www.myqnap.org"&gt;MyQnap&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it "replaces" QnapCloud.eu after this website disappeared&lt;ul&gt;
&lt;li&gt;some maintainers from QnapClub moved to MyQnap but they don't relate (&lt;a href="https://www.reddit.com/r/qnap/comments/108u0qn/qnapclub_is_back_and_no_longer_called_qnapclub/"&gt;source&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;it's a third-party QNAP App store with many open source utilities packaged as Apps&lt;/li&gt;
&lt;li&gt;Installed the app named &lt;code&gt;QGit&lt;/code&gt; (or &lt;code&gt;Git&lt;/code&gt; once installed)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class="admonition warning"&gt;
&lt;p class="admonition-title"&gt;Warning&lt;/p&gt;
&lt;p&gt;There are very little security waranties with installing any software from MyQnap.&lt;/p&gt;
&lt;p&gt;However, the convience appears to be worth trusting the people behind the package, is it?&lt;/p&gt;
&lt;/div&gt;
&lt;h1 id="install-git-on-my-ts-253e"&gt;Install Git on my TS-253E&lt;a class="headerlink" href="#install-git-on-my-ts-253e" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Add MyQnap App Repository:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot add app repository in QTS" src="https://www.javatronic.fr/images/2023-12-03_install_git_on_qnap_qts_5/screenshot_add_qnap_repository.jpg"&gt;&lt;/p&gt;
&lt;p&gt;Install the &lt;code&gt;Git&lt;/code&gt; app:&lt;/p&gt;
&lt;p&gt;&lt;img alt="screenshot install git app from myqnap" src="https://www.javatronic.fr/images/2023-12-03_install_git_on_qnap_qts_5/screenshot_install_git_app.jpg"&gt;&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.myqnap.org/install-the-repo/"&gt;MyQnap documentation: How to install the repository&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="QNAP"></category><category term="Git"></category></entry><entry><title>Fix screen not working on QNAP</title><link href="https://www.javatronic.fr/posts/2023/10/06/fix-screen-not-working-on-qnap/" rel="alternate"></link><published>2023-10-06T00:00:00+02:00</published><updated>2023-10-06T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2023-10-06:/posts/2023/10/06/fix-screen-not-working-on-qnap/</id><summary type="html">&lt;p&gt;&lt;code&gt;screen&lt;/code&gt; is a utility available on Linux that create virtual terminals.&lt;/p&gt;
&lt;p&gt;In practice, it enables user to run command on a remote device (ie. typically via a SSH session) that will continue
running even if the connection is interrupted.&lt;/p&gt;
&lt;h1 id="screen-is-broken-on-qnap-ts-253e"&gt;Screen is broken on QNAP TS-253E&lt;a class="headerlink" href="#screen-is-broken-on-qnap-ts-253e" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Unfortunately, by default (tested right …&lt;/p&gt;</summary><content type="html">&lt;p&gt;&lt;code&gt;screen&lt;/code&gt; is a utility available on Linux that create virtual terminals.&lt;/p&gt;
&lt;p&gt;In practice, it enables user to run command on a remote device (ie. typically via a SSH session) that will continue
running even if the connection is interrupted.&lt;/p&gt;
&lt;h1 id="screen-is-broken-on-qnap-ts-253e"&gt;Screen is broken on QNAP TS-253E&lt;a class="headerlink" href="#screen-is-broken-on-qnap-ts-253e" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Unfortunately, by default (tested right after installation), &lt;code&gt;screen&lt;/code&gt; doesn't work on QNAP systems (tested on QTS 5.0 and QTS 5.1).&lt;/p&gt;
&lt;p&gt;When running &lt;code&gt;screen&lt;/code&gt;, it fails with an error such as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;# screen
/var/run/utmp: No such file or directory
Cannot find termcap entry for &amp;#39;xterm-256color&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="fix-screen"&gt;Fix screen&lt;a class="headerlink" href="#fix-screen" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Create the missing file and some symlinks.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;touch&lt;span class="w"&gt; &lt;/span&gt;/var/run/utmp
ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;/usr/share/terminfo/x/xterm-xfree86&lt;span class="w"&gt; &lt;/span&gt;/usr/share/terminfo/x/xterm-256color
ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;/usr/share/terminfo/x/xterm-xfree86&lt;span class="w"&gt; &lt;/span&gt;/usr/share/terminfo/x/xterm-color
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="alternative-fix"&gt;Alternative fix&lt;a class="headerlink" href="#alternative-fix" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rather than create symlinks, one can make &lt;code&gt;screen&lt;/code&gt; use existing termcap entry with the env variable &lt;code&gt;TERMINFO&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nv"&gt;TERMINFO&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/usr/share/terminfo/&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;screen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;However, this solution has proven more cumbersome and less reliable.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://linux.die.net/man/1/screen"&gt;screen man page&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.shan.info/item/451-screen-var-run-utmp-no-such-file-or-directory-cannot-find-termcap-entry-for.html"&gt;fix source&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Linux"></category><category term="QNAP"></category></entry><entry><title>Install Weboob 1.0 on Ubuntu 14.04 (Trusty Tahr)</title><link href="https://www.javatronic.fr/posts/2014/12/30/install-weboob-10-on-ubuntu-1404-trusty-tahr/" rel="alternate"></link><published>2014-12-30T00:00:00+01:00</published><updated>2014-12-30T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-12-30:/posts/2014/12/30/install-weboob-10-on-ubuntu-1404-trusty-tahr/</id><summary type="html">&lt;p&gt;As stated on the Weboob &lt;a href="http://weboob.org/install"&gt;install page&lt;/a&gt;, Ubuntu packages for &lt;a href="http://weboob.org/"&gt;Weboob&lt;/a&gt; are lagging behind (a lot). Package for the current LTS version of Ubuntu (14.04 - Trusty Tahr) is version 0.g-1 (can find how old this version is). The current version of Weboob (version 1.0, out October 2014 …&lt;/p&gt;</summary><content type="html">&lt;p&gt;As stated on the Weboob &lt;a href="http://weboob.org/install"&gt;install page&lt;/a&gt;, Ubuntu packages for &lt;a href="http://weboob.org/"&gt;Weboob&lt;/a&gt; are lagging behind (a lot). Package for the current LTS version of Ubuntu (14.04 - Trusty Tahr) is version 0.g-1 (can find how old this version is). The current version of Weboob (version 1.0, out October 2014) is packaged for Ubuntu 15.04 (Vivid Vervet).&lt;/p&gt;
&lt;p&gt;So, here is how I installed from source the latest stable version of Weboob (1.0) on Ubuntu 14.04 (Trusty Tahr).&lt;/p&gt;
&lt;p&gt;As stated on the website "Weboob is a collection of applications able to interact with websites, without requiring the user to open them in a browser. It also provides well-defined APIs to talk to websites lacking one". &lt;/p&gt;
&lt;p&gt;Perso:qnally, I use Weboob to access my bank website and retrieve my history and incoming operations data from the command line to process it.&lt;/p&gt;
&lt;h1 id="checkout-git-source"&gt;checkout Git source&lt;a class="headerlink" href="#checkout-git-source" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;create a Weboob directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;/opt/weboob
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;checkout Weboob stable sources :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;/tmp/weboob
$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/tmp/weboob
$&lt;span class="w"&gt; &lt;/span&gt;git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;git://git.symlink.me/pub/weboob/stable.git&lt;span class="w"&gt; &lt;/span&gt;src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="install-dependencies"&gt;Install dependencies&lt;a class="headerlink" href="#install-dependencies" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="python-basics"&gt;Python basics&lt;a class="headerlink" href="#python-basics" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install Python 2.7&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python2.7
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Install setuptools&lt;/p&gt;
&lt;p&gt;by hand (cf. &lt;a href="https://pypi.python.org/pypi/setuptools#unix-wget"&gt;https://pypi.python.org/pypi/setuptools#unix-wget&lt;/a&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;wget&lt;span class="w"&gt; &lt;/span&gt;https://bootstrap.pypa.io/ez_setup.py&lt;span class="w"&gt; &lt;/span&gt;-O&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;note: I though for a minute that the &lt;code&gt;ez_setup.py&lt;/code&gt; program was stuck but it turned out that the prompt for the sudo password was lost in the middle of noisy logs. So, if it happends to you, just it &lt;code&gt;enter&lt;/code&gt;, you will be prompted for the sudo password again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;or with apt-get (not sure the version of setuptools is recent enough, though, I used the manual instal):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-setuptools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="dependencies-for-weboob"&gt;Dependencies for Weboob&lt;a class="headerlink" href="#dependencies-for-weboob" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Install dependencies for Weboob:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-requests
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="dependencies-for-boobank"&gt;Dependencies for boobank&lt;a class="headerlink" href="#dependencies-for-boobank" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Currently, the only module I use is boobank, which has dependencies of its own:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;python-dateutil&lt;span class="w"&gt; &lt;/span&gt;python-prettytable&lt;span class="w"&gt; &lt;/span&gt;python-mechanize&lt;span class="w"&gt; &lt;/span&gt;python-cssselect
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="local-install"&gt;Local install&lt;a class="headerlink" href="#local-install" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;We will do a local install of Weboob as the system install is discouraged on the &lt;a href="http://weboob.org/install"&gt;Weboob instal page&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Create &lt;code&gt;bin&lt;/code&gt; directory in your home directory (if it does not exist yet). This is where we will be telling the local installation tool to create the Weboob executable:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;~/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and run the local installer:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/tmp/weboob/src
$&lt;span class="w"&gt; &lt;/span&gt;./tools/local_install.sh&lt;span class="w"&gt; &lt;/span&gt;~/bin
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="verify-install"&gt;verify install&lt;a class="headerlink" href="#verify-install" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Add the &lt;code&gt;~/bin&lt;/code&gt; directory to your PATH (if it not already), you can then just type &lt;code&gt;boobank&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In the meantime, you can make sure the install directly by running:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;$&lt;span class="w"&gt; &lt;/span&gt;~/bin/boobank
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="tips"></category><category term="weboob"></category><category term="Ubuntu"></category></entry><entry><title>Change tablespace of all objects of a specific Oracle User</title><link href="https://www.javatronic.fr/posts/2014/11/13/change-tablespace-of-all-objects-of-a-specific-oracle-user/" rel="alternate"></link><published>2014-11-13T00:00:00+01:00</published><updated>2014-11-13T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-11-13:/posts/2014/11/13/change-tablespace-of-all-objects-of-a-specific-oracle-user/</id><summary type="html">&lt;p&gt;Here is a convenient PL/SQL script to run with SqlPlus to change the tablespace of the objects (tables, indexes, lobs) of a specific user in a blink. It can also be use to fix inconsistency in tablespace used by the user objects.&lt;/p&gt;
&lt;p&gt;We will then see how to use …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is a convenient PL/SQL script to run with SqlPlus to change the tablespace of the objects (tables, indexes, lobs) of a specific user in a blink. It can also be use to fix inconsistency in tablespace used by the user objects.&lt;/p&gt;
&lt;p&gt;We will then see how to use a bash script to make its use less error prone and non interractive.&lt;/p&gt;
&lt;h1 id="the-plsql-script"&gt;The PL/SQL script&lt;a class="headerlink" href="#the-plsql-script" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The PL/SQL script below changes the tablespace of the tables, indexes and lob objects of the current user. It supports using a different tablespace for data and indexes.&lt;/p&gt;
&lt;p&gt;Create file, e.g. called &lt;code&gt;change_tablespaces.sql&lt;/code&gt;, with the following content. &lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;declare&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tab_cur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_tables&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tablespace_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;amp;Data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind_cur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_indexes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tablespace_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;amp;Index&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;and&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;index_type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LOB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lob_cur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_lobs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tablespace_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;amp;Index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind2_cur&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_indexes&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;VALID&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tab_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tab_cur&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;tab_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; move tablespace &amp;amp;&amp;amp;Data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind_cur&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter index &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; rebuild tablespace &amp;amp;&amp;amp;Index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lob_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lob_cur&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lob_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; move lob(&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;lob_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;column_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;) store as (tablespace &amp;amp;&amp;amp;Index)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;-- some indexes need to be rebuilt a second time after their tablespace has been changed&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind2_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind2_cur&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter index &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ind2_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;index_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; rebuild&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="c1"&gt;-- exits SqlPlus&lt;/span&gt;
&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Please notice that the script uses SqlPlus variables prefixed with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt;: &lt;code&gt;&amp;amp;&amp;amp;Data&lt;/code&gt; and &lt;code&gt;&amp;amp;&amp;amp;Index&lt;/code&gt;. The former holds the name of the tablespace for Data (ie. tables and lobs) and the later the name of the tablespace for Indexes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Sqlplus variables can also be defined with a single &lt;code&gt;&amp;amp;&lt;/code&gt; but in such case SqlPlus will ask for a value each time the variable is used. Sqlplus prompts for the value of variables defined with &lt;code&gt;&amp;amp;&amp;amp;&lt;/code&gt; only once.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="use-it"&gt;Use it&lt;a class="headerlink" href="#use-it" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Connect to the server hosting the Oracle database or to a machine with remote access configured to the Oracle database for &lt;code&gt;SqlPlus&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;To change the tablespace for a specific user, connect to that user with SqlPlus and run the script.&lt;/p&gt;
&lt;p&gt;You can do that in a single command line (e.g. for user &lt;code&gt;MYUSER&lt;/code&gt;):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sqlplus&lt;span class="w"&gt; &lt;/span&gt;MYUSER/MYUSER&lt;span class="w"&gt; &lt;/span&gt;@change_tablespaces.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Sqlplus will prompt the user to provide a value for each variables (first &lt;code&gt;&amp;amp;&amp;amp;Data&lt;/code&gt;, then &lt;code&gt;&amp;amp;&amp;amp;Index&lt;/code&gt;). It is best to input the name of the tablespace in upper case.&lt;/p&gt;
&lt;p&gt;Here is what it should look like.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;%&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;sqlplus&lt;span class="w"&gt; &lt;/span&gt;MYUSER/MYUSER&lt;span class="w"&gt; &lt;/span&gt;@change_tablespace.sh
SQL*Plus:&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;Production&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;Thu&lt;span class="w"&gt; &lt;/span&gt;Nov&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;13&lt;/span&gt;:02:49&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2014&lt;/span&gt;
Copyright&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1982&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;Oracle.&lt;span class="w"&gt;  &lt;/span&gt;All&lt;span class="w"&gt; &lt;/span&gt;rights&lt;span class="w"&gt; &lt;/span&gt;reserved.
Connected&lt;span class="w"&gt; &lt;/span&gt;to:
Oracle&lt;span class="w"&gt; &lt;/span&gt;Database&lt;span class="w"&gt; &lt;/span&gt;11g&lt;span class="w"&gt; &lt;/span&gt;Enterprise&lt;span class="w"&gt; &lt;/span&gt;Edition&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;64bit&lt;span class="w"&gt; &lt;/span&gt;Production
With&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;Partitioning,&lt;span class="w"&gt; &lt;/span&gt;Automatic&lt;span class="w"&gt; &lt;/span&gt;Storage&lt;span class="w"&gt; &lt;/span&gt;Management,&lt;span class="w"&gt; &lt;/span&gt;OLAP,&lt;span class="w"&gt; &lt;/span&gt;Data&lt;span class="w"&gt; &lt;/span&gt;Mining
and&lt;span class="w"&gt; &lt;/span&gt;Real&lt;span class="w"&gt; &lt;/span&gt;Application&lt;span class="w"&gt; &lt;/span&gt;Testing&lt;span class="w"&gt; &lt;/span&gt;options
Enter&lt;span class="w"&gt; &lt;/span&gt;value&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;data:&lt;span class="w"&gt; &lt;/span&gt;CAA
old&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;:&lt;span class="w"&gt;     &lt;/span&gt;cursor&lt;span class="w"&gt; &lt;/span&gt;tab_cur&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;table_name&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;user_tables&lt;span class="w"&gt; &lt;/span&gt;where&lt;span class="w"&gt; &lt;/span&gt;tablespace_name&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;amp;Data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
new&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;:&lt;span class="w"&gt;     &lt;/span&gt;cursor&lt;span class="w"&gt; &lt;/span&gt;tab_cur&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;table_name&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;user_tables&lt;span class="w"&gt; &lt;/span&gt;where&lt;span class="w"&gt; &lt;/span&gt;tablespace_name&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;CAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
Enter&lt;span class="w"&gt; &lt;/span&gt;value&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;index:&lt;span class="w"&gt; &lt;/span&gt;XAA
old&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;:&lt;span class="w"&gt;     &lt;/span&gt;cursor&lt;span class="w"&gt; &lt;/span&gt;ind_cur&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;index_name&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;user_indexes&lt;span class="w"&gt; &lt;/span&gt;where&lt;span class="w"&gt; &lt;/span&gt;tablespace_name&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;amp;Index&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;index_type&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LOB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
new&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;:&lt;span class="w"&gt;     &lt;/span&gt;cursor&lt;span class="w"&gt; &lt;/span&gt;ind_cur&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;index_name&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;user_indexes&lt;span class="w"&gt; &lt;/span&gt;where&lt;span class="w"&gt; &lt;/span&gt;tablespace_name&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;XAA&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;index_type&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;LOB&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
old&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;:&lt;span class="w"&gt;     &lt;/span&gt;cursor&lt;span class="w"&gt; &lt;/span&gt;lob_cur&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;table_name,&lt;span class="w"&gt; &lt;/span&gt;column_name&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;user_lobs&lt;span class="w"&gt; &lt;/span&gt;where&lt;span class="w"&gt; &lt;/span&gt;tablespace_name&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;amp;&amp;amp;Index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
new&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="m"&gt;6&lt;/span&gt;:&lt;span class="w"&gt;     &lt;/span&gt;cursor&lt;span class="w"&gt; &lt;/span&gt;lob_cur&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;table_name,&lt;span class="w"&gt; &lt;/span&gt;column_name&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;user_lobs&lt;span class="w"&gt; &lt;/span&gt;where&lt;span class="w"&gt; &lt;/span&gt;tablespace_name&lt;span class="w"&gt; &lt;/span&gt;!&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;XAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
old&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:&lt;span class="w"&gt;    &lt;/span&gt;execute&lt;span class="w"&gt; &lt;/span&gt;immediate&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tab_val.table_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; move tablespace &amp;amp;&amp;amp;Data&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
new&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;15&lt;/span&gt;:&lt;span class="w"&gt;    &lt;/span&gt;execute&lt;span class="w"&gt; &lt;/span&gt;immediate&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tab_val.table_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; move tablespace CAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
old&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;:&lt;span class="w"&gt;    &lt;/span&gt;execute&lt;span class="w"&gt; &lt;/span&gt;immediate&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter index &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ind_val.index_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; rebuild tablespace &amp;amp;&amp;amp;Index&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
new&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;22&lt;/span&gt;:&lt;span class="w"&gt;    &lt;/span&gt;execute&lt;span class="w"&gt; &lt;/span&gt;immediate&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter index &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;ind_val.index_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; rebuild tablespace XAA&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
old&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;29&lt;/span&gt;:&lt;span class="w"&gt;    &lt;/span&gt;execute&lt;span class="w"&gt; &lt;/span&gt;immediate&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lob_val.table_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; move lob(&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lob_val.column_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;) store as (tablespace &amp;amp;&amp;amp;Index)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
new&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="m"&gt;29&lt;/span&gt;:&lt;span class="w"&gt;    &lt;/span&gt;execute&lt;span class="w"&gt; &lt;/span&gt;immediate&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lob_val.table_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; move lob(&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;lob_val.column_name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;) store as (tablespace XAA)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
PL/SQL&lt;span class="w"&gt; &lt;/span&gt;procedure&lt;span class="w"&gt; &lt;/span&gt;successfully&lt;span class="w"&gt; &lt;/span&gt;completed.
SQL&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="the-bash-script"&gt;The bash script&lt;a class="headerlink" href="#the-bash-script" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Using the above script with SqlPlus directly has several issues coming from the fact it is interactive:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;it is open to typing errors and there is no way to double check&lt;/li&gt;
&lt;li&gt;it can not be scripted&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So, here is a bash script which will solve these problems by wrapping the &lt;code&gt;sqlplus&lt;/code&gt; command line.&lt;/p&gt;
&lt;p&gt;The following script:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;assumes the &lt;code&gt;change_tablespace.sql&lt;/code&gt; is available and in the same directory as the script&lt;/li&gt;
&lt;li&gt;does not run until all parameters have been specified&lt;/li&gt;
&lt;li&gt;displays how to it should be used if at least one parameter is missing&lt;/li&gt;
&lt;li&gt;displays a message with the information gathered from the command line and ask for confirmation before proceeding&lt;/li&gt;
&lt;li&gt;could obviously be improved but does the job, feel free to customize it to meet your needs&lt;/li&gt;
&lt;li&gt;use several sqlplus options to avoid verbose SqlPlus logs (see comments in the script)&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="ch"&gt;#!/bin/bash&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$#&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-lt&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;then&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;basename&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$0&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt; &amp;lt;user_login&amp;gt; &amp;lt;user_pwd&amp;gt; &amp;lt;data_tablespace_name&amp;gt; &amp;lt;index_tablespace_name&amp;gt;&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="k"&gt;fi&lt;/span&gt;

&lt;span class="k"&gt;function&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;proceedOrExit&lt;span class="o"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;proceed&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;while&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;true&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;case&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$proceed&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="k"&gt;break&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;*&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-n&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Enter &amp;#39;y&amp;#39; to proceed, &amp;#39;n&amp;#39; to exit script : &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="nb"&gt;read&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;proceed&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;&lt;span class="p"&gt;;;&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;esac&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;done&lt;/span&gt;
&lt;span class="o"&gt;}&lt;/span&gt;

&lt;span class="nv"&gt;user&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$1&lt;/span&gt;
&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$2&lt;/span&gt;
&lt;span class="nv"&gt;data&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$3&lt;/span&gt;
&lt;span class="nv"&gt;index&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$4&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;changing tablespace of user &lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;&lt;span class="s2"&gt; (password=&lt;/span&gt;&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="s2"&gt;) &lt;/span&gt;
&lt;span class="s2"&gt;   - tablespace for data is &lt;/span&gt;&lt;span class="nv"&gt;$data&lt;/span&gt;
&lt;span class="s2"&gt;   - tablespace for indexes is &lt;/span&gt;&lt;span class="nv"&gt;$index&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
proceedOrExit

&lt;span class="c1"&gt;# -s argument suppresses sqlplus welcome and quit messages&lt;/span&gt;
sqlplus&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$user&lt;/span&gt;/&lt;span class="nv"&gt;$password&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;lt;&amp;lt; EOF&lt;/span&gt;
&lt;span class="s"&gt;-- this suppresses the value substitution echoed by sqlplus&lt;/span&gt;
&lt;span class="s"&gt;set verify off &lt;/span&gt;

&lt;span class="s"&gt;define data = $data&lt;/span&gt;
&lt;span class="s"&gt;define index = $index&lt;/span&gt;

&lt;span class="s"&gt;@change_tablespace.sql&lt;/span&gt;

&lt;span class="s"&gt;quit&lt;/span&gt;

&lt;span class="s"&gt;EOF&lt;/span&gt;

&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="use-it_1"&gt;use it&lt;a class="headerlink" href="#use-it_1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Assuming you created a script called &lt;code&gt;change_tablespace.sh&lt;/code&gt; (and made it executable  &lt;code&gt;chmod +x change_tablespace.sh&lt;/code&gt;), you can run the script with a command as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./change_tablespace.sh&lt;span class="w"&gt; &lt;/span&gt;MYUSER&lt;span class="w"&gt; &lt;/span&gt;MYUSER&lt;span class="w"&gt; &lt;/span&gt;CAA&lt;span class="w"&gt; &lt;/span&gt;XAA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and you will get an output such as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;changing&lt;span class="w"&gt; &lt;/span&gt;tablespace&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;user&lt;span class="w"&gt; &lt;/span&gt;MYUSER&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;password&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;MYUSER&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;span class="w"&gt;   &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;tablespace&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;data&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;CAA
&lt;span class="w"&gt;   &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;tablespace&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;indexes&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;XAA
Enter&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;y&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;proceed,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;n&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;script&lt;span class="w"&gt; &lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;y

PL/SQL&lt;span class="w"&gt; &lt;/span&gt;procedure&lt;span class="w"&gt; &lt;/span&gt;successfully&lt;span class="w"&gt; &lt;/span&gt;completed.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="resources"&gt;Resources&lt;a class="headerlink" href="#resources" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.orafaq.com/node/515"&gt;In depth look at Sqlplus variables&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tips"></category><category term="Oracle"></category><category term="SqlPlus"></category><category term="Bash"></category></entry><entry><title>Script to delete all objects in a Oracle schema</title><link href="https://www.javatronic.fr/posts/2014/11/07/script-to-delete-all-objects-in-a-oracle-schema/" rel="alternate"></link><published>2014-11-07T00:00:00+01:00</published><updated>2014-11-07T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-11-07:/posts/2014/11/07/script-to-delete-all-objects-in-a-oracle-schema/</id><summary type="html">&lt;p&gt;Use the following script to drop all objects in a specific schema in an Oracle Database without droping the schema itself. It saves you from recreating the schema, its associated user, its rights, etc.&lt;/p&gt;
&lt;h3 id="create-script-file"&gt;create script file&lt;a class="headerlink" href="#create-script-file" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a file called &lt;code&gt;empty_user.sql&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;purge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recyclebin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;declare …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Use the following script to drop all objects in a specific schema in an Oracle Database without droping the schema itself. It saves you from recreating the schema, its associated user, its rights, etc.&lt;/p&gt;
&lt;h3 id="create-script-file"&gt;create script file&lt;a class="headerlink" href="#create-script-file" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a file called &lt;code&gt;empty_user.sql&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;purge&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recyclebin&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;declare&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="c1"&gt;-- FK first, then unique, then PK&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_constraints&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;constraint_name&lt;/span&gt;
&lt;span class="w"&gt;                          &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_constraints&lt;/span&gt;
&lt;span class="w"&gt;                         &lt;/span&gt;&lt;span class="k"&gt;where&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;constraint_type&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;U&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;                        &lt;/span&gt;&lt;span class="k"&gt;order&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;by&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;decode&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;constraint_type&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;R&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;U&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;P&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_mviews&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mview_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_mviews&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_views&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;view_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_views&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_mviews_logs&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_mview_logs&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_tables&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_tables&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_synonyms&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;synonym_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_synonyms&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;cursor&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_sequences&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;is&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;select&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;sequence_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;from&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;user_sequences&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;begin&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_constraints&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;alter table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; drop constraint &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;constraint_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_mviews&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;drop materialized view &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;mview_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_views&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;drop view &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;view_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_mviews_logs&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;drop materialized view log on &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;master&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_tables&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;drop table &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="k"&gt;table_name&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39; purge&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_synonyms&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;drop synonym &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;synonym_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;cursor_sequences&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="k"&gt;execute&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;immediate&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;drop sequence &amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;||&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;current_val&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;sequence_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;loop&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;
&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;line with "/" is required to execute the preceding PL/SQL procedure
line with "quit" is usefull to automatically exit sqlplus when procedure has been executed&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="execute-with-sqlplus"&gt;Execute with sqlplus&lt;a class="headerlink" href="#execute-with-sqlplus" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sqlplus&lt;span class="w"&gt; &lt;/span&gt;user/user_pwd&lt;span class="w"&gt; &lt;/span&gt;@empty_user.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can expect output such as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;my_machine:$&lt;span class="w"&gt; &lt;/span&gt;sqlplus&lt;span class="w"&gt; &lt;/span&gt;user/user_pwd&lt;span class="w"&gt; &lt;/span&gt;@empty_user.sql

SQL*Plus:&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;Production&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;Tue&lt;span class="w"&gt; &lt;/span&gt;Oct&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;12&lt;/span&gt;:27:32&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2014&lt;/span&gt;

Copyright&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1982&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;Oracle.&lt;span class="w"&gt;  &lt;/span&gt;All&lt;span class="w"&gt; &lt;/span&gt;rights&lt;span class="w"&gt; &lt;/span&gt;reserved.


Connected&lt;span class="w"&gt; &lt;/span&gt;to:
Oracle&lt;span class="w"&gt; &lt;/span&gt;Database&lt;span class="w"&gt; &lt;/span&gt;11g&lt;span class="w"&gt; &lt;/span&gt;Enterprise&lt;span class="w"&gt; &lt;/span&gt;Edition&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;64bit&lt;span class="w"&gt; &lt;/span&gt;Production
With&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;Partitioning,&lt;span class="w"&gt; &lt;/span&gt;Automatic&lt;span class="w"&gt; &lt;/span&gt;Storage&lt;span class="w"&gt; &lt;/span&gt;Management,&lt;span class="w"&gt; &lt;/span&gt;OLAP,&lt;span class="w"&gt; &lt;/span&gt;Data&lt;span class="w"&gt; &lt;/span&gt;Mining
and&lt;span class="w"&gt; &lt;/span&gt;Real&lt;span class="w"&gt; &lt;/span&gt;Application&lt;span class="w"&gt; &lt;/span&gt;Testing&lt;span class="w"&gt; &lt;/span&gt;options


Recyclebin&lt;span class="w"&gt; &lt;/span&gt;purged.


PL/SQL&lt;span class="w"&gt; &lt;/span&gt;procedure&lt;span class="w"&gt; &lt;/span&gt;successfully&lt;span class="w"&gt; &lt;/span&gt;completed.

Disconnected&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;Oracle&lt;span class="w"&gt; &lt;/span&gt;Database&lt;span class="w"&gt; &lt;/span&gt;11g&lt;span class="w"&gt; &lt;/span&gt;Enterprise&lt;span class="w"&gt; &lt;/span&gt;Edition&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;64bit&lt;span class="w"&gt; &lt;/span&gt;Production
With&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;Partitioning,&lt;span class="w"&gt; &lt;/span&gt;Automatic&lt;span class="w"&gt; &lt;/span&gt;Storage&lt;span class="w"&gt; &lt;/span&gt;Management,&lt;span class="w"&gt; &lt;/span&gt;OLAP,&lt;span class="w"&gt; &lt;/span&gt;Data&lt;span class="w"&gt; &lt;/span&gt;Mining
and&lt;span class="w"&gt; &lt;/span&gt;Real&lt;span class="w"&gt; &lt;/span&gt;Application&lt;span class="w"&gt; &lt;/span&gt;Testing&lt;span class="w"&gt; &lt;/span&gt;options
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="credits"&gt;Credits&lt;a class="headerlink" href="#credits" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The origin of the above script is one largely used at &lt;a href="https://twitter.com/3k1n0"&gt;Ekino&lt;/a&gt; to which multiple developers (including myself) contributed.&lt;/p&gt;</content><category term="tips"></category><category term="Oracle"></category><category term="Bash"></category></entry><entry><title>Find out which process is using Inotify</title><link href="https://www.javatronic.fr/posts/2014/11/05/find-out-which-process-is-using-inotify/" rel="alternate"></link><published>2014-11-05T00:00:00+01:00</published><updated>2014-11-05T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-11-05:/posts/2014/11/05/find-out-which-process-is-using-inotify/</id><summary type="html">&lt;p&gt;Here is how to list processes which are using Inotify to watch FileSystem changes under Linux and also list how many Inotify nodes each one is using.&lt;/p&gt;
&lt;p&gt;This can come in handy when you want to make sure some process (such as &lt;code&gt;jekyll&lt;/code&gt; with Auto-regeneration enabled) is actually using Inotify …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here is how to list processes which are using Inotify to watch FileSystem changes under Linux and also list how many Inotify nodes each one is using.&lt;/p&gt;
&lt;p&gt;This can come in handy when you want to make sure some process (such as &lt;code&gt;jekyll&lt;/code&gt; with Auto-regeneration enabled) is actually using Inotify or to find out if your are about to run out of Inotify nodes because a process is creating too much of them.&lt;/p&gt;
&lt;h1 id="list-processes"&gt;List processes&lt;a class="headerlink" href="#list-processes" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;For each Inotify node used by a process, a file descriptor is created in the file descriptor directory of the process in &lt;code&gt;/proc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Use the following command to list the processes with at least one Inotify node.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find&lt;span class="w"&gt; &lt;/span&gt;/proc/*/fd/*&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;l&lt;span class="w"&gt; &lt;/span&gt;-lname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;anon_inode:inotify&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s+/proc/\([^/]*\)/fd/.*+\1+&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The result is something like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;PID&lt;span class="w"&gt; &lt;/span&gt;TTY&lt;span class="w"&gt;      &lt;/span&gt;STAT&lt;span class="w"&gt;   &lt;/span&gt;TIME&lt;span class="w"&gt; &lt;/span&gt;COMMAND
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2244&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Sl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:03&lt;span class="w"&gt; &lt;/span&gt;/usr/lib/gnome-settings-daemon/gnome-settings-daemon
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2294&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Sl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;:22&lt;span class="w"&gt; &lt;/span&gt;compiz
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2300&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Sl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:01&lt;span class="w"&gt; &lt;/span&gt;nautilus&lt;span class="w"&gt; &lt;/span&gt;-n
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2325&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;S&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:00&lt;span class="w"&gt; &lt;/span&gt;/usr/lib/gvfs/gvfs-gdu-volume-monitor
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2820&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Rl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:16&lt;span class="w"&gt; &lt;/span&gt;gnome-terminal
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3081&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Sl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:00&lt;span class="w"&gt; &lt;/span&gt;gnome-screensaver
&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;3543&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Sl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:00&lt;span class="w"&gt; &lt;/span&gt;update-notifier
&lt;span class="m"&gt;13246&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;?&lt;span class="w"&gt;        &lt;/span&gt;Sl&lt;span class="w"&gt;     &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:06&lt;span class="w"&gt; &lt;/span&gt;/opt/sublimetext/sublime/sublime_text
&lt;span class="m"&gt;14053&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;pts/3&lt;span class="w"&gt;    &lt;/span&gt;Sl+&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;:18&lt;span class="w"&gt; &lt;/span&gt;ruby2.1&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/jekyll&lt;span class="w"&gt; &lt;/span&gt;serve&lt;span class="w"&gt; &lt;/span&gt;-w&lt;span class="w"&gt; &lt;/span&gt;--draft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can get more details about the process using the regular &lt;code&gt;ps&lt;/code&gt; options such as &lt;code&gt;-f&lt;/code&gt;;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;find&lt;span class="w"&gt; &lt;/span&gt;/proc/*/fd/*&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;l&lt;span class="w"&gt; &lt;/span&gt;-lname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;anon_inode:inotify&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;/dev/null&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;sed&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;s+/proc/\([^/]*\)/fd/.*+\1+&amp;#39;&lt;/span&gt;&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;https://bbs.archlinux.org/viewtopic.php?pid=1340024#p1340024&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="count-nodes-per-process"&gt;Count nodes per process&lt;a class="headerlink" href="#count-nodes-per-process" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;find&lt;span class="w"&gt; &lt;/span&gt;/proc/*/fd/*&lt;span class="w"&gt; &lt;/span&gt;-type&lt;span class="w"&gt; &lt;/span&gt;l&lt;span class="w"&gt; &lt;/span&gt;-lname&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;anon_inode:inotify&amp;#39;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-print
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result will look like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/proc/13246/fd/11
/proc/13246/fd/12
/proc/14053/fd/8
/proc/2232/fd/5
/proc/2244/fd/11
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The first number on each line is the process id, the second number is the number of nodes for this process.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;source: http://unix.stackexchange.com/questions/15509/whos-consuming-my-inotify-resources#comment21001_15549&lt;/p&gt;
&lt;/blockquote&gt;</content><category term="tips"></category><category term="Linux"></category></entry><entry><title>Testing any Apache rewrite rule locally</title><link href="https://www.javatronic.fr/posts/2014/11/04/testing-any-apache-rewrite-rule-locally/" rel="alternate"></link><published>2014-11-04T00:00:00+01:00</published><updated>2014-11-04T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-11-04:/posts/2014/11/04/testing-any-apache-rewrite-rule-locally/</id><summary type="html">&lt;p&gt;Recently, I had to write a bunch of Apache rewrite rules which applied to the whole URL, including the hostname. I also add to use &lt;code&gt;RewriteMap&lt;/code&gt; for efficiency.&lt;/p&gt;
&lt;p&gt;I initially though this would be difficult to test locally but, in fact, with little modifications of a local Apache instance and …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently, I had to write a bunch of Apache rewrite rules which applied to the whole URL, including the hostname. I also add to use &lt;code&gt;RewriteMap&lt;/code&gt; for efficiency.&lt;/p&gt;
&lt;p&gt;I initially though this would be difficult to test locally but, in fact, with little modifications of a local Apache instance and use of the &lt;code&gt;/etc/hosts&lt;/code&gt; file, it's pretty easy.&lt;/p&gt;
&lt;p&gt;This article will detail how I did it on my computer running Ubuntu and hopefully it will help others setup their own computer.&lt;/p&gt;

&lt;h1 id="testing-rewrite-rules"&gt;Testing rewrite rules&lt;a class="headerlink" href="#testing-rewrite-rules" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="online"&gt;online&lt;a class="headerlink" href="#online" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Online tools such as &lt;a href="http://htaccess.madewithlove.be/"&gt;htaccess tester&lt;/a&gt; exists and can come in handy to test simple rules but that are limited techically (they usually advertise their limitations) but also by design: e.g. they can not support &lt;a href="http://httpd.apache.org/docs/current/en/mod/mod_rewrite.html#rewritemap"&gt;RewriteMap&lt;/a&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;when working rules, &lt;a href="http://regex101.com/#pcre"&gt;regex101.com&lt;/a&gt; is pretty usefull to test regular expressions. Be sure to be in "pcre" mode as this is the intepretor used by Apache.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="locally"&gt;locally&lt;a class="headerlink" href="#locally" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Testing locally is the only way to fully test the rewrite rules you write, you can even test various version of Apache (but I won't cover that here).&lt;/p&gt;
&lt;p&gt;Fortunatly, it is not so complicated to set up a local instance to test even host-based rewrite rules.&lt;/p&gt;
&lt;h1 id="installing-and-configuring-apache"&gt;Installing and configuring Apache&lt;a class="headerlink" href="#installing-and-configuring-apache" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="install"&gt;install&lt;a class="headerlink" href="#install" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If you already have Apache installed, skip this.&lt;/p&gt;
&lt;p&gt;Installation under Ubuntu is trivial:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;apache2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By default, the installed Apache instance is bound to port 80 and any host.&lt;/p&gt;
&lt;p&gt;Make sure the instance not bound to a specific ip or host.&lt;/p&gt;
&lt;h2 id="enable-mod_rewrite"&gt;enable mod_rewrite&lt;a class="headerlink" href="#enable-mod_rewrite" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;When installing Apache, &lt;code&gt;mod_rewrite&lt;/code&gt; might not be installed by default.&lt;/p&gt;
&lt;p&gt;Under Ubuntu, just add a link in directory &lt;code&gt;/etc/apache2/mods-enabled&lt;/code&gt; to the &lt;code&gt;rewrite.load&lt;/code&gt; file in &lt;code&gt;/etc/apache2/mods-available&lt;/code&gt;;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/etc/apache2/mods-enabled
ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;../mods-available/rewrite.load
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="modify-the-default-host"&gt;Modify the default host&lt;a class="headerlink" href="#modify-the-default-host" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="use-a-dedicated-conf-file"&gt;use a dedicated conf file&lt;a class="headerlink" href="#use-a-dedicated-conf-file" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Open file &lt;code&gt;000-default.conf&lt;/code&gt; where the default host is configured.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;vi&lt;span class="w"&gt; &lt;/span&gt;/etc/apache2/sites-available/000-default.conf
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The default host is bound to any host on port 80:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;VirtualHost&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;*:80&lt;/span&gt;&lt;span class="nt"&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Add an &lt;code&gt;Include&lt;/code&gt; directive before the closing tag of the &lt;code&gt;VirtualHost&lt;/code&gt; directive to import the configuration file where you will write your Rewrite rules.
This is optional but you will find it convenient to clean your installation later or disable all changes you made by just commenting this directive.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;Include&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sx"&gt;/etc/apache2/sites-available/my_rewrite_rule_tests.conf&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="mod_rewrite-logging"&gt;mod_rewrite logging&lt;a class="headerlink" href="#mod_rewrite-logging" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;h3 id="enable-logging"&gt;enable logging&lt;a class="headerlink" href="#enable-logging" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Inside the &lt;code&gt;VirtualHost&lt;/code&gt; directive, look for the &lt;a href="http://httpd.apache.org/docs/2.4/en/mod/mod_rewrite.html#logging"&gt;&lt;code&gt;LogLevel&lt;/code&gt; directive&lt;/a&gt;, it may be commented out, or add it.&lt;/p&gt;
&lt;p&gt;What matters is having an argument to the directive starting with &lt;code&gt;rewrite&lt;/code&gt;, such as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;LogLevel&lt;span class="w"&gt; &lt;/span&gt;alert&lt;span class="w"&gt; &lt;/span&gt;rewrite:trace8
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The part after the colon in &lt;code&gt;rewrite:trace8&lt;/code&gt; is the logging level.&lt;/p&gt;
&lt;p&gt;As we are testing locally, we can use the maximum logging level (level8) but be aware that it should be used carefull (don't go lower than trace3) as mod_rewrite quickly gets extremely verbose.&lt;/p&gt;
&lt;h3 id="read-mod_rewrite-logs"&gt;read mod_rewrite logs&lt;a class="headerlink" href="#read-mod_rewrite-logs" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;mod_rewrite logs into &lt;code&gt;/var/log/apache2/error.log&lt;/code&gt; with a &lt;code&gt;[rewrite&lt;/code&gt; prefix.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;tail&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;/var/log/apache2/error.log&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;fgrep&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'[rewrite:'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="add-hosts-to-etchosts"&gt;Add hosts to /etc/hosts&lt;a class="headerlink" href="#add-hosts-to-etchosts" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The point here is to make any hostname involved in our rewrite rules point to the local computer (127.0.O.1).&lt;/p&gt;
&lt;p&gt;You can then test rewrite rule based on existing host but also on non existing ones.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;for existing host, make sure you revert modifications in &lt;code&gt;/etc/hosts&lt;/code&gt; after your are done testing. Otherwise, if you added &lt;code&gt;wwww.google.com&lt;/code&gt; and bound it to &lt;code&gt;localhost&lt;/code&gt; in &lt;code&gt;/etc/hosts&lt;/code&gt; you won't be able to reach the real Google website&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Open &lt;code&gt;/etc/hosts&lt;/code&gt; (sudo required):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;vi&lt;span class="w"&gt; &lt;/span&gt;/etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and add a line such as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="m"&gt;127&lt;/span&gt;.0.0.1&lt;span class="w"&gt;    &lt;/span&gt;store.mydomain.com&lt;span class="w"&gt; &lt;/span&gt;boutique.mydomain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="bind-apache-to-hostnames"&gt;bind Apache to hostnames&lt;a class="headerlink" href="#bind-apache-to-hostnames" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Add a &lt;code&gt;ServerName&lt;/code&gt; directive (if none is already set yet) and any number of &lt;code&gt;ServerAlias&lt;/code&gt; directive to bind Apache to hostnames you defined in &lt;code&gt;/etc/hosts&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;My advice is to add these directive to the dedicated configuration file created earlier.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;ServerName&lt;/span&gt;&lt;span class="w"&gt;              &lt;/span&gt;store.mydomain.com
&lt;span class="nb"&gt;ServerAlias&lt;/span&gt;&lt;span class="w"&gt;             &lt;/span&gt;boutique.mydomain.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="add-rewrite-rules"&gt;add rewrite rules&lt;a class="headerlink" href="#add-rewrite-rules" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Make sure the mod_rewrite engine is enabled by adding the &lt;code&gt;RewriteEngine&lt;/code&gt; directive:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;RewriteEngine&lt;/span&gt;&lt;span class="w"&gt;   &lt;/span&gt;&lt;span class="k"&gt;On&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, add your &lt;a href="http://httpd.apache.org/docs/2.4/en/mod/mod_rewrite.html#rewriterule"&gt;RewriteRule&lt;/a&gt;, &lt;a href="http://httpd.apache.org/docs/2.4/en/mod/mod_rewrite.html#rewritecond"&gt;RewriteCond&lt;/a&gt; and &lt;a href="http://httpd.apache.org/docs/current/en/mod/mod_rewrite.html#rewritemap"&gt;RewriteMap&lt;/a&gt; directives.&lt;/p&gt;
&lt;h2 id="test-changes"&gt;test changes&lt;a class="headerlink" href="#test-changes" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can either start/restart or reload Apache after each change.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/apache2&lt;span class="w"&gt; &lt;/span&gt;start
sudo&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/apache2&lt;span class="w"&gt; &lt;/span&gt;restart
&lt;span class="c1"&gt;# only reload the configuration without restarting Apache&lt;/span&gt;
sudo&lt;span class="w"&gt; &lt;/span&gt;/etc/init.d/apache2&lt;span class="w"&gt; &lt;/span&gt;reload
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now, open your favorite browser, type in a URL to test, see the result in the browser: are you being redirected or not? to the correct URL?&lt;/p&gt;
&lt;p&gt;It does really matter if the URL your are being redirect to actually exists, worse case scenario, you'll get a 404 error but you will know if the rewrite rule worked.&lt;/p&gt;
&lt;p&gt;If it is not working, check out the logs.&lt;/p&gt;
&lt;p&gt;At log level &lt;code&gt;trace8&lt;/code&gt; every operations run by mod_rewrite is visible. This even convenient to understand how the mod and directives work.&lt;/p&gt;</content><category term="tips"></category><category term="Apache"></category><category term="Linux"></category><category term="Testing"></category></entry><entry><title>Script to Refresh all materialized views in a schema</title><link href="https://www.javatronic.fr/posts/2014/10/27/script-to-refresh-all-materialized-views-in-a-schema/" rel="alternate"></link><published>2014-10-27T00:00:00+01:00</published><updated>2014-10-27T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-10-27:/posts/2014/10/27/script-to-refresh-all-materialized-views-in-a-schema/</id><summary type="html">&lt;p&gt;Use the following script to refresh all materialized view in a schema of an Oracle database. This script can be run very easily from SqlPlus.&lt;/p&gt;
&lt;p&gt;Connect to the user of the schema where you can to refresh all materalized views and execute the following PL/SQL procedure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;DECLARE&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;v_number_of_failures&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NUMBER …&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Use the following script to refresh all materialized view in a schema of an Oracle database. This script can be run very easily from SqlPlus.&lt;/p&gt;
&lt;p&gt;Connect to the user of the schema where you can to refresh all materalized views and execute the following PL/SQL procedure:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;DECLARE&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;v_number_of_failures&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NUMBER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;BEGIN&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;DBMS_MVIEW&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REFRESH_ALL_MVIEWS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v_number_of_failures&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="execute-with-sqlplus"&gt;Execute with sqlplus&lt;a class="headerlink" href="#execute-with-sqlplus" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Create a file called &lt;code&gt;refresh_all_materialised_views.sql&lt;/code&gt; with the following content:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="k"&gt;DECLARE&lt;/span&gt;
&lt;span class="n"&gt;v_number_of_failures&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;NUMBER&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;BEGIN&lt;/span&gt;
&lt;span class="n"&gt;DBMS_MVIEW&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;REFRESH_ALL_MVIEWS&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;v_number_of_failures&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;C&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;TRUE&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;FALSE&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="k"&gt;END&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="o"&gt;/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Warning, mind the "/" on the last line, it is required to make oracle execute the PL/SQL procedure&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Execute with Sqlplus:&lt;/p&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sqlplus&lt;span class="w"&gt; &lt;/span&gt;user/user_pwd&lt;span class="w"&gt; &lt;/span&gt;@refresh_all_materialised_views.sql
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
You may add an extra line at the end of &lt;code&gt;refresh_all_materialised_views.sql&lt;/code&gt; to automatically exit Sqlplus when the procedure has been executed (successfully or not):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;quit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You should see something like the following output:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;my_machine:$&lt;span class="w"&gt; &lt;/span&gt;sqlplus&lt;span class="w"&gt; &lt;/span&gt;user/user_pwd&lt;span class="w"&gt; &lt;/span&gt;@refresh_all_materialised_views.sql

SQL*Plus:&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;Production&lt;span class="w"&gt; &lt;/span&gt;on&lt;span class="w"&gt; &lt;/span&gt;Tue&lt;span class="w"&gt; &lt;/span&gt;Oct&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;14&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;:37:04&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2014&lt;/span&gt;

Copyright&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;c&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1982&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2011&lt;/span&gt;,&lt;span class="w"&gt; &lt;/span&gt;Oracle.&lt;span class="w"&gt;  &lt;/span&gt;All&lt;span class="w"&gt; &lt;/span&gt;rights&lt;span class="w"&gt; &lt;/span&gt;reserved.


Connected&lt;span class="w"&gt; &lt;/span&gt;to:
Oracle&lt;span class="w"&gt; &lt;/span&gt;Database&lt;span class="w"&gt; &lt;/span&gt;11g&lt;span class="w"&gt; &lt;/span&gt;Enterprise&lt;span class="w"&gt; &lt;/span&gt;Edition&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;64bit&lt;span class="w"&gt; &lt;/span&gt;Production
With&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;Partitioning,&lt;span class="w"&gt; &lt;/span&gt;Automatic&lt;span class="w"&gt; &lt;/span&gt;Storage&lt;span class="w"&gt; &lt;/span&gt;Management,&lt;span class="w"&gt; &lt;/span&gt;OLAP,&lt;span class="w"&gt; &lt;/span&gt;Data&lt;span class="w"&gt; &lt;/span&gt;Mining
and&lt;span class="w"&gt; &lt;/span&gt;Real&lt;span class="w"&gt; &lt;/span&gt;Application&lt;span class="w"&gt; &lt;/span&gt;Testing&lt;span class="w"&gt; &lt;/span&gt;options


PL/SQL&lt;span class="w"&gt; &lt;/span&gt;procedure&lt;span class="w"&gt; &lt;/span&gt;successfully&lt;span class="w"&gt; &lt;/span&gt;completed.

Disconnected&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;Oracle&lt;span class="w"&gt; &lt;/span&gt;Database&lt;span class="w"&gt; &lt;/span&gt;11g&lt;span class="w"&gt; &lt;/span&gt;Enterprise&lt;span class="w"&gt; &lt;/span&gt;Edition&lt;span class="w"&gt; &lt;/span&gt;Release&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;11&lt;/span&gt;.2.0.3.0&lt;span class="w"&gt; &lt;/span&gt;-&lt;span class="w"&gt; &lt;/span&gt;64bit&lt;span class="w"&gt; &lt;/span&gt;Production
With&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;Partitioning,&lt;span class="w"&gt; &lt;/span&gt;Automatic&lt;span class="w"&gt; &lt;/span&gt;Storage&lt;span class="w"&gt; &lt;/span&gt;Management,&lt;span class="w"&gt; &lt;/span&gt;OLAP,&lt;span class="w"&gt; &lt;/span&gt;Data&lt;span class="w"&gt; &lt;/span&gt;Mining
and&lt;span class="w"&gt; &lt;/span&gt;Real&lt;span class="w"&gt; &lt;/span&gt;Application&lt;span class="w"&gt; &lt;/span&gt;Testing&lt;span class="w"&gt; &lt;/span&gt;options

my_machine:$
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="source"&gt;Source&lt;a class="headerlink" href="#source" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.bash-dba.com/2011/10/refreshing-all-materialized-view-in.html"&gt;Script to Refresh ALL materialized views in a schema&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><category term="tips"></category><category term="Oracle"></category><category term="Bash"></category></entry><entry><title>Setting up a Minecraft server on Google Compute Engine</title><link href="https://www.javatronic.fr/posts/2014/10/25/setting-up-a-minecraft-server-on-google-compute-engine/" rel="alternate"></link><published>2014-10-25T00:00:00+02:00</published><updated>2014-10-25T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-10-25:/posts/2014/10/25/setting-up-a-minecraft-server-on-google-compute-engine/</id><summary type="html">&lt;p&gt;This article will get you through the (few) steps to set up a Minecraft server on a Google Compute Engine instance.&lt;/p&gt;

&lt;h1 id="create-google-cloud-account"&gt;Create Google Cloud account&lt;a class="headerlink" href="#create-google-cloud-account" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Go to &lt;a href="https://console.developers.google.com/project"&gt;https://console.developers.google.com/project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is the Google Developer Console and entry point to the Google Cloud services. You need to …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This article will get you through the (few) steps to set up a Minecraft server on a Google Compute Engine instance.&lt;/p&gt;

&lt;h1 id="create-google-cloud-account"&gt;Create Google Cloud account&lt;a class="headerlink" href="#create-google-cloud-account" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Go to &lt;a href="https://console.developers.google.com/project"&gt;https://console.developers.google.com/project&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is the Google Developer Console and entry point to the Google Cloud services. You need to login with a Google account.&lt;/p&gt;
&lt;p&gt;If you already have Gmail and you are connected, the page will display without any authentication.&lt;/p&gt;
&lt;h2 id="create-project"&gt;create project&lt;a class="headerlink" href="#create-project" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;In the Google Developer Console, go to &lt;code&gt;projects&lt;/code&gt; and create a new one.&lt;/p&gt;
&lt;p&gt;The name of the project is for your own convenience. Google will generate a human readable project id which is the value you will need to identify a project when using the &lt;a href="#install-google-cloud-sdk"&gt;Google Cloud SDK&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="provide-billing-info"&gt;provide billing info&lt;a class="headerlink" href="#provide-billing-info" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Billing info are required to use Google Compute Engine because creating an instance or a disk will cost you from the first minute (but, so little...).&lt;/p&gt;
&lt;h1 id="google-cloud-sdk"&gt;Google Cloud SDK&lt;a class="headerlink" href="#google-cloud-sdk" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="install-it"&gt;install it&lt;a class="headerlink" href="#install-it" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My installation setup is described in &lt;a href="https://www.javatronic.fr/posts/2014/10/17/installing-google-cloud-sdk-on-ubuntu-with-oh-my-zsh/"&gt;Installing Google Cloud SDK on Ubuntu with Oh-My-Zsh&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id="authenticate"&gt;authenticate&lt;a class="headerlink" href="#authenticate" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Run:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;auth&lt;span class="w"&gt; &lt;/span&gt;init
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to your browser, authenticate or choose a Google account if necessary and authorize the Google Cloud SDK on your computer to access your Google Account.&lt;/p&gt;
&lt;h2 id="set-project"&gt;set project&lt;a class="headerlink" href="#set-project" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You can either set a project globally with the following command:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;config&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;project&lt;span class="w"&gt; &lt;/span&gt;cagoo-jimba-2345
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;or create a directory for your project so that you can then switch from one project to the other by just changing the current directory:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/some/dir/where/you/can/to/create/googlecloud/project/directories
gcloud&lt;span class="w"&gt; &lt;/span&gt;init&lt;span class="w"&gt; &lt;/span&gt;cagoo-jimba-2345
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="create-an-instance"&gt;create an instance&lt;a class="headerlink" href="#create-an-instance" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="create-a-disk"&gt;create a disk&lt;a class="headerlink" href="#create-a-disk" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The point here is to set up an instance with a Minecraft server but as we will see below, the instance itself can be created and destroyed at will.&lt;/p&gt;
&lt;p&gt;What matters really is the disk where Minecraft server program is set up and where the world's data is stored. As long as we keep the disk, we can create a new instance latter with the same disk and it will feel as it was still the first instance.&lt;/p&gt;
&lt;p&gt;So, we start by creating a disk:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;disks&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;minecraft-server&lt;span class="w"&gt; &lt;/span&gt;--image&lt;span class="w"&gt; &lt;/span&gt;debian-7&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="w"&gt; &lt;/span&gt;europe-west1-a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this will create a standard disk (non-SSD) of 10Gb from a debian 7 image&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="create-an-instance-with-an-existing-disk"&gt;create an instance with an existing disk&lt;a class="headerlink" href="#create-an-instance-with-an-existing-disk" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;instances&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;minecraft-server&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="w"&gt; &lt;/span&gt;europe-west1-a&lt;span class="w"&gt; &lt;/span&gt;--disk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;minecraft-server&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes&lt;span class="w"&gt; &lt;/span&gt;auto-delete&lt;span class="o"&gt;=&lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;--tags&lt;span class="w"&gt; &lt;/span&gt;minecraft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;use existing disk and keep it even when VM is deleted
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;--disk&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;minecraft-server&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;boot&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;yes&lt;span class="w"&gt; &lt;/span&gt;auto-delete&lt;span class="o"&gt;=&lt;/span&gt;no
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;add tag &lt;code&gt;minecraft&lt;/code&gt; to match firewall rule (uppercase letters are not valid)
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;--tags&lt;span class="w"&gt; &lt;/span&gt;minecraft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="allow-minecraft-traffic"&gt;allow Minecraft traffic&lt;a class="headerlink" href="#allow-minecraft-traffic" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;firewall-rules&lt;span class="w"&gt; &lt;/span&gt;create&lt;span class="w"&gt; &lt;/span&gt;allow-minecraft&lt;span class="w"&gt; &lt;/span&gt;--description&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Incoming minecraft connections allowed."&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--allow&lt;span class="w"&gt; &lt;/span&gt;tcp:25565&lt;span class="w"&gt; &lt;/span&gt;--target-tags&lt;span class="w"&gt; &lt;/span&gt;minecraft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;allow tcp traffic on port &lt;code&gt;25565&lt;/code&gt;, which is the default port used by Minecraft server. You can make sure your Minecraft server is listening to this port by checking the first log lines of the server when it starts up.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;define target tag to restrict the firewall rule to only instances with the tag &lt;code&gt;minecraft&lt;/code&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;--target-tags&lt;span class="w"&gt; &lt;/span&gt;minecraft
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="connect-to-the-instance-with-ssh"&gt;connect to the instance with SSH&lt;a class="headerlink" href="#connect-to-the-instance-with-ssh" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;ssh&lt;span class="w"&gt; &lt;/span&gt;minecraft-server&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="w"&gt; &lt;/span&gt;europe-west1-a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If this is the first time you attempt to connect to an instance via SSH with the current Google Cloud SDK installation, you will be asked to create a private-public key paar. Just follow the instructions. Note that it is best to define a passphrase to protect your keys.&lt;/p&gt;
&lt;h1 id="install-the-instance"&gt;install the instance&lt;a class="headerlink" href="#install-the-instance" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="required-basics"&gt;required basics&lt;a class="headerlink" href="#required-basics" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;You will need &lt;code&gt;vim&lt;/code&gt; to edit files and &lt;code&gt;screen&lt;/code&gt; to run the Minecraft server without being connected to the instance.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;update
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;vim&lt;span class="w"&gt; &lt;/span&gt;screen
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="download-and-install-oracle-java"&gt;download and install Oracle Java&lt;a class="headerlink" href="#download-and-install-oracle-java" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# downlad and unpack Java JDK 8 8u5-b13&lt;/span&gt;
wget&lt;span class="w"&gt; &lt;/span&gt;--no-check-certificate&lt;span class="w"&gt; &lt;/span&gt;--no-cookies&lt;span class="w"&gt; &lt;/span&gt;--header&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"Cookie: oraclelicense=accept-securebackup-cookie"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-qO-&lt;span class="w"&gt; &lt;/span&gt;http://download.oracle.com/otn-pub/java/jdk/8u5-b13/jdk-8u5-linux-x64.tar.gz&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;tar&lt;span class="w"&gt; &lt;/span&gt;xvz
&lt;span class="c1"&gt;# create symbolic link to allow update of Java without changing the rest&lt;/span&gt;
ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;jdk1.8.0_05&lt;span class="w"&gt; &lt;/span&gt;jdk
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Found out how to download the JDK from Oracle website thanks to this StackOverflow post &lt;a href="http://stackoverflow.com/questions/10268583/how-to-automate-download-and-installation-of-java-jdk-on-linux"&gt;How to automate download and installation of Java JDK on Linux?&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id="note-on-open-jdk"&gt;note on open-jdk&lt;a class="headerlink" href="#note-on-open-jdk" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Alternatively you could install &lt;code&gt;open-jdk&lt;/code&gt; via &lt;code&gt;apt-get&lt;/code&gt; but I found it requires installing to much stuff on the server (and takes much more time) so I rather went with installing Oracle JDK.&lt;/p&gt;
&lt;p&gt;FYI, the command line is:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;-y&lt;span class="w"&gt; &lt;/span&gt;openjdk-8-jre
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="download-and-install-minecraft"&gt;download and install Minecraft&lt;a class="headerlink" href="#download-and-install-minecraft" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;minecraft
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;minecraft
wget&lt;span class="w"&gt; &lt;/span&gt;https://s3.amazonaws.com/Minecraft.Download/versions/1.8/minecraft_server.1.8.jar

&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'#!/bin/bash&lt;/span&gt;
&lt;span class="s1"&gt;cd /home/lesaint/minecraft &amp;amp;&amp;amp; /home/lesaint/jdk/bin/java -jar /home/lesaint/minecraft/minecraft_server.1.8.jar -Xmx1024M -Xms1024M nogui'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/home/lesaint/minecraft.sh
chmod&lt;span class="w"&gt; &lt;/span&gt;+x&lt;span class="w"&gt; &lt;/span&gt;/home/lesaint/minecraft.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;this script starts the Minecraft server with 1Gb heap. Make sure you choose an instance with enough memory or change the &lt;code&gt;-Xmx&lt;/code&gt; and &lt;code&gt;-Xms&lt;/code&gt; values.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Minimal configuration needed is to create a file which Minecraft will read to know whether you accepted the Minecraft EULA or not.&lt;/p&gt;
&lt;p&gt;When run for the first time, Minecraft server create the file and asks you to modify it and restart the server.&lt;/p&gt;
&lt;p&gt;To save one server run, we just create it ourselves.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;echo&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;"eula=TRUE"&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&amp;gt;&lt;span class="w"&gt; &lt;/span&gt;/home/lesaint/minecraft/eula.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="start-the-server"&gt;start the server&lt;a class="headerlink" href="#start-the-server" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/home/lesaint/minecraft.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You must stay connected to the instance for the Minecraft server to run, we will discuss below how to &lt;a href="#let-it-run-in-the-background"&gt;let it run in the background&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="connect-to-the-server"&gt;connect to the server&lt;a class="headerlink" href="#connect-to-the-server" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The Minecraft server is running and you can now to connect to it with a Minecraft client (ie. the game).&lt;/p&gt;
&lt;h2 id="get-the-servers-ip-address"&gt;get the server's IP address&lt;a class="headerlink" href="#get-the-servers-ip-address" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Use the following command to get the list of instances and, among other informations, you can find the external IP address of the one you just started:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;instances&lt;span class="w"&gt; &lt;/span&gt;list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result will look like the following and we are interested in what is below &lt;code&gt;EXTERNAL_IP&lt;/code&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;[&lt;/span&gt;my-machine&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;$&lt;span class="w"&gt; &lt;/span&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;instances&lt;span class="w"&gt; &lt;/span&gt;list&lt;span class="w"&gt;                                           &lt;/span&gt;
NAME&lt;span class="w"&gt;             &lt;/span&gt;ZONE&lt;span class="w"&gt;           &lt;/span&gt;MACHINE_TYPE&lt;span class="w"&gt;  &lt;/span&gt;INTERNAL_IP&lt;span class="w"&gt;   &lt;/span&gt;EXTERNAL_IP&lt;span class="w"&gt;  &lt;/span&gt;STATUS
minecraft-server&lt;span class="w"&gt; &lt;/span&gt;europe-west1-a&lt;span class="w"&gt; &lt;/span&gt;n1-standard-1&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;.240.197.56&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;104&lt;/span&gt;.155.10.4&lt;span class="w"&gt; &lt;/span&gt;RUNNING
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="connect-to-the-server_1"&gt;connect to the server&lt;a class="headerlink" href="#connect-to-the-server_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Start Minecraft, go to &lt;code&gt;Multiplayer&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Either click &lt;code&gt;Direct connect&lt;/code&gt; or &lt;code&gt;Add server&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Specifity the server name if you clicked on &lt;code&gt;Add server&lt;/code&gt; and specify the &lt;code&gt;EXTERNAL_IP&lt;/code&gt; from above as &lt;code&gt;Server address&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Now, connect and play :)&lt;/p&gt;
&lt;h1 id="let-it-run-in-the-background"&gt;let it run in the background&lt;a class="headerlink" href="#let-it-run-in-the-background" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The problem when starting the Minecraft server from an SSH session is that the server's process will be ended when the SSH session is ended (ie. when you disconnect).&lt;/p&gt;
&lt;h2 id="use-screen"&gt;use &lt;code&gt;screen&lt;/code&gt;&lt;a class="headerlink" href="#use-screen" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To work around this, start the Minecraft server using &lt;a href="http://www.gnu.org/software/screen/manual/screen.html"&gt;screen&lt;/a&gt;. Screen has been installed when doing the &lt;a href="#basic-configuration-of-instance"&gt;basic configuration of instance&lt;/a&gt; earlier.&lt;/p&gt;
&lt;h3 id="start-the-server_1"&gt;start the server&lt;a class="headerlink" href="#start-the-server_1" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Start the Minecraft server in a new &lt;code&gt;screen&lt;/code&gt; terminal window.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;screen&lt;span class="w"&gt; &lt;/span&gt;/home/lesaint/minecraft.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To exit &lt;code&gt;screen&lt;/code&gt; without killing it, use &lt;code&gt;CTRL+a d&lt;/code&gt; (type &lt;code&gt;CTRL+A&lt;/code&gt; on your keyboard and then letter &lt;code&gt;d&lt;/code&gt;). It is called "detaching" from the &lt;code&gt;screen&lt;/code&gt; session.&lt;/p&gt;
&lt;p&gt;You can check the Minecraft server java process is actually running with the following command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ps&lt;span class="w"&gt; &lt;/span&gt;-ef&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;grep&lt;span class="w"&gt; &lt;/span&gt;java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="get-your-hands-back-on-the-server"&gt;get your hands back on the server&lt;a class="headerlink" href="#get-your-hands-back-on-the-server" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To "reattach" to the &lt;code&gt;screen&lt;/code&gt; terminal, you must find its id. List all &lt;code&gt;screen&lt;/code&gt; session on the current host with:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Result will look like the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;lesaint@minecraft-server:~$&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-list
There&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;screen&lt;span class="w"&gt; &lt;/span&gt;on:
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="m"&gt;2046&lt;/span&gt;.pts-1.minecraft-server&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;10&lt;/span&gt;/16/14&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;21&lt;/span&gt;:17:03&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;Detached&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;Socket&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/var/run/screen/S-lesaint.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can reattach to the &lt;code&gt;screen&lt;/code&gt; session with the number at the beginning of the line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;screen&lt;span class="w"&gt; &lt;/span&gt;-r&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2046&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From that point, you can manage the Minecraft server as you would be doing if you had started it from the SSH session directly.&lt;/p&gt;
&lt;h3 id="stop-the-server"&gt;stop the server&lt;a class="headerlink" href="#stop-the-server" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To stop the server, reattach to the &lt;code&gt;screen&lt;/code&gt; session and just type &lt;code&gt;CTRL+C&lt;/code&gt;. It will stop the Minecraft server and if you started the &lt;code&gt;screen&lt;/code&gt; session with the Minecraft service as an argument,it will also end the &lt;code&gt;screen&lt;/code&gt; session. &lt;/p&gt;
&lt;h1 id="destroy-the-instance"&gt;destroy the instance&lt;a class="headerlink" href="#destroy-the-instance" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;When you don't need the instance, destroy it as it will cost you even if it is not doing anything. Since it is so easy and quick to recreate it, do not hesitate.&lt;/p&gt;
&lt;p&gt;What matters is the disk and it will not be deleted if you correctly specified &lt;code&gt;auto-delete=no&lt;/code&gt; when creating the instance (see &lt;a href="#create-an-instance-with-an-existing-disk"&gt;create instance with existing disk&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;In doubt, go to the Google developer console, display the instance properties. A checkbox indicates whether the disk will be deleted when the instance is deleted. You can change the value directly from there.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;gcloud&lt;span class="w"&gt; &lt;/span&gt;compute&lt;span class="w"&gt; &lt;/span&gt;instances&lt;span class="w"&gt; &lt;/span&gt;delete&lt;span class="w"&gt; &lt;/span&gt;minecraft-server&lt;span class="w"&gt; &lt;/span&gt;--zone&lt;span class="w"&gt; &lt;/span&gt;europe-west1-a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Cloud"></category><category term="Minecraft"></category></entry><entry><title>Installing Google Cloud SDK on Ubuntu with Oh-My-Zsh</title><link href="https://www.javatronic.fr/posts/2014/10/17/installing-google-cloud-sdk-on-ubuntu-with-oh-my-zsh/" rel="alternate"></link><published>2014-10-17T00:00:00+02:00</published><updated>2014-10-17T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-10-17:/posts/2014/10/17/installing-google-cloud-sdk-on-ubuntu-with-oh-my-zsh/</id><summary type="html">&lt;p&gt;To install the Google Cloud SDK, you can follow the &lt;a href="https://cloud.google.com/sdk/"&gt;installation guidelines&lt;/a&gt; available online. But if you are running Ubuntu and uses Oh-My-Zsh (or to some extent, Zsh alone), automatic installation won't work and you need to do some manual steps.&lt;/p&gt;
&lt;h2 id="install-via-the-bash-installer"&gt;Install via the bash installer&lt;a class="headerlink" href="#install-via-the-bash-installer" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Run the following command …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To install the Google Cloud SDK, you can follow the &lt;a href="https://cloud.google.com/sdk/"&gt;installation guidelines&lt;/a&gt; available online. But if you are running Ubuntu and uses Oh-My-Zsh (or to some extent, Zsh alone), automatic installation won't work and you need to do some manual steps.&lt;/p&gt;
&lt;h2 id="install-via-the-bash-installer"&gt;Install via the bash installer&lt;a class="headerlink" href="#install-via-the-bash-installer" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Run the following command to download and install the SDK on your disk.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;curl&lt;span class="w"&gt; &lt;/span&gt;https://sdk.cloud.google.com&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="bash"&gt;Bash&lt;a class="headerlink" href="#bash" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If your are running &lt;code&gt;bash&lt;/code&gt;, answer &lt;code&gt;Y&lt;/code&gt; when prompted to add &lt;code&gt;gcloud&lt;/code&gt; to the &lt;code&gt;PATH&lt;/code&gt; and install auto-completion. Don't worry, the installer creates a backup before modifying your &lt;code&gt;.bashrc&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="zsh"&gt;Zsh&lt;a class="headerlink" href="#zsh" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you are running &lt;code&gt;Zsh&lt;/code&gt;, specify the path to your &lt;code&gt;.zshrc&lt;/code&gt; when prompted instead of going for the default &lt;code&gt;.bashrc&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;You will then have to manually modify your &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The installer adds the following lines:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# The next line updates PATH for the Google Cloud SDK.&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/path/to/google-cloud-sdk/path.bash.inc&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# The next line enables bash completion for gcloud.&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/path/to/google-cloud-sdk/completion.bash.inc&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Just replace the &lt;code&gt;bash&lt;/code&gt; part in the file names with &lt;code&gt;zsh&lt;/code&gt; to use the Zsh specific scripts provided with the SDK.&lt;/p&gt;
&lt;h3 id="oh-my-zsh-compatibility"&gt;Oh-my-zsh compatibility&lt;a class="headerlink" href="#oh-my-zsh-compatibility" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I use Oh-My-Zsh as a shell and unfortunately, the procedure above did not work for me.&lt;/p&gt;
&lt;p&gt;When loading a new shell, I got errors such as the following and command line completion did not work.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/path/to/google-cloud-sdk/completion.bash.inc:8:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;command&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;found:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;complete&lt;/span&gt;
/path/to/google-cloud-sdk/completion.bash.inc:19:&lt;span class="w"&gt; &lt;/span&gt;parse&lt;span class="w"&gt; &lt;/span&gt;error&lt;span class="w"&gt; &lt;/span&gt;near&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&lt;span class="o"&gt;]]&lt;/span&gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I did the following to fix the install.&lt;/p&gt;
&lt;h4 id="load-the-sdk-files-before-oh-my-zsh"&gt;load the SDK files before &lt;code&gt;Oh-My-Zsh&lt;/code&gt;&lt;a class="headerlink" href="#load-the-sdk-files-before-oh-my-zsh" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;First, move the lines added by the installer &lt;em&gt;before&lt;/em&gt; the source command loading &lt;code&gt;Oh-My-Zsh&lt;/code&gt; (&lt;code&gt;source $ZSH/oh-my-zsh.sh&lt;/code&gt;).&lt;/p&gt;
&lt;h4 id="load-missing-zsh-module"&gt;load missing &lt;code&gt;Zsh&lt;/code&gt; module&lt;a class="headerlink" href="#load-missing-zsh-module" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Then two lines to tell &lt;code&gt;Zsh&lt;/code&gt; to load and init some specific modules required for completion to work &lt;em&gt;before&lt;/em&gt; the &lt;code&gt;source&lt;/code&gt; command for completion. I a no expert with &lt;code&gt;Zsh&lt;/code&gt; nor &lt;code&gt;Oh-My-Zsh&lt;/code&gt;, but looking at &lt;code&gt;oh-my-zsh.sh&lt;/code&gt; it seems that only &lt;code&gt;compinit&lt;/code&gt; is loaded.&lt;/p&gt;
&lt;p&gt;You should end up with the following, at the beginning of your &lt;code&gt;.zshrc&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# The next line updates PATH for the Google Cloud SDK.&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/lesaint/GOOGLE_CLOUD/google-cloud-sdk/path.zsh.inc&amp;#39;&lt;/span&gt;

&lt;span class="c1"&gt;# The next lines enables bash completion in Zsh for gcloud. &lt;/span&gt;
autoload&lt;span class="w"&gt; &lt;/span&gt;-U&lt;span class="w"&gt; &lt;/span&gt;compinit&lt;span class="w"&gt; &lt;/span&gt;compdef
compinit
&lt;span class="nb"&gt;source&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/home/lesaint/GOOGLE_CLOUD/google-cloud-sdk/completion.zsh.inc&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="tips"></category><category term="Cloud"></category><category term="Ubuntu"></category><category term="Oh-My-Zsh"></category></entry><entry><title>How does annotation processing work in Java</title><link href="https://www.javatronic.fr/posts/2014/10/08/how-does-annotation-processing-work-in-java/" rel="alternate"></link><published>2014-10-08T00:00:00+02:00</published><updated>2014-10-08T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-10-08:/posts/2014/10/08/how-does-annotation-processing-work-in-java/</id><summary type="html">&lt;p&gt;This article is an introduction to Annotation Processing in &lt;code&gt;Java&lt;/code&gt; and provides an overview on Annotation Processing mechanics during compilation.&lt;/p&gt;

&lt;h1 id="what-is-annotation-processing"&gt;What is annotation processing&lt;a class="headerlink" href="#what-is-annotation-processing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Annotation Processing can be described as an opportunity to extend the compilation process with specific behavior based primarily on metadata stored in annotations but also on …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This article is an introduction to Annotation Processing in &lt;code&gt;Java&lt;/code&gt; and provides an overview on Annotation Processing mechanics during compilation.&lt;/p&gt;

&lt;h1 id="what-is-annotation-processing"&gt;What is annotation processing&lt;a class="headerlink" href="#what-is-annotation-processing" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Annotation Processing can be described as an opportunity to extend the compilation process with specific behavior based primarily on metadata stored in annotations but also on source code in general.&lt;/p&gt;
&lt;p&gt;Annotation Processing occurs during source code compilation.&lt;/p&gt;
&lt;p&gt;The compiler will call instances of classes implementing a specific interface available in the classpath.&lt;/p&gt;
&lt;p&gt;These objects have access to an API that allows them to read Object models of source code, to write files, to display log message as part of the compiler logs or to fail the compilation.&lt;/p&gt;
&lt;p&gt;Commonly, Annotation Processing involves one or more of the following:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;implementing additional source code checks&lt;/li&gt;
&lt;li&gt;generating source code (classes, interfaces)&lt;/li&gt;
&lt;li&gt;generating any kind of file (such as config files, documentation, ...)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="can-not-modify-source-code"&gt;can not modify source code&lt;a class="headerlink" href="#can-not-modify-source-code" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This is something that &lt;strong&gt;can not&lt;/strong&gt; be done through Annotation Processing, at least in principle. The API does not allow it.&lt;/p&gt;
&lt;p&gt;But, it is possible and one specific framework is famous for actually doing just that: &lt;a href="http://projectlombok.org"&gt;Lombok&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As described in this &lt;a href="http://stackoverflow.com/questions/6107197/how-does-lombok-work/6108573#6108573"&gt;stackoverflow response&lt;/a&gt;, &lt;code&gt;Lombok&lt;/code&gt; manages to modify source code using a hack: casting objects of the API passed to the Annotation Processor into the compiler internal objects representing the source code model and which can be modified to modify the generated bytecode.&lt;/p&gt;
&lt;h1 id="what-happens-when-compiling"&gt;What happens when compiling&lt;a class="headerlink" href="#what-happens-when-compiling" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;When run, the compiler looks for Annotation Processors (see &lt;a href="#the-discovery-process"&gt;discovery mechanism&lt;/a&gt; below), checks what annotations each of them supports and then starts processing those annotations in a sequence of rounds.&lt;/p&gt;
&lt;h2 id="annotation-processing-rounds"&gt;annotation processing rounds&lt;a class="headerlink" href="#annotation-processing-rounds" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Each processing round is made of:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a list of input files&lt;/li&gt;
&lt;li&gt;a list of annotations: all input files in the previous list have at least one &lt;a href="http://docs.oracle.com/javase/7/docs/api/javax/lang/model/element/Element.html"&gt;Element&lt;/a&gt; with an annotation from this list&lt;/li&gt;
&lt;li&gt;a list of annotation processor(s): which all have registered to at least one of the annotations in the list above (or any annotation using the &lt;code&gt;*&lt;/code&gt; wildcard)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The compiler will create any number of round until is reaches the final round made of no input files.&lt;/p&gt;
&lt;p&gt;My understanding is that the compiler is contractualy free to build rounds as any combination of the three lists above but with the respect of these rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;an input file is processed only once, it will be part of one and only one round&lt;/li&gt;
&lt;li&gt;once a Annotation Processor has been involved in a round, it will be called during every subsequent rounds&lt;/li&gt;
&lt;li&gt;there is always a final round with no input file.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="input-files"&gt;input files&lt;a class="headerlink" href="#input-files" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Input files could be defined as source files with at least one &lt;a href="http://docs.oracle.com/javase/7/docs/api/javax/lang/model/element/Element.html"&gt;Element&lt;/a&gt; (a package, a class/interface/enum, a method, a variable, a parameter, ...) and which hasn't yet been part of a round.&lt;/p&gt;
&lt;h2 id="the-first-round"&gt;the first round&lt;a class="headerlink" href="#the-first-round" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;As long as it finds at least one source file with at least one annotation and as long as it is aware of at least one Annotation Processor, the compiler will create a first round of annotation processing.&lt;/p&gt;
&lt;p&gt;Experimentaly (*), I found that all source files seems to be processed during the first round. I may not have tested with enough source files to see the 
source files spawned over more than one round.&lt;/p&gt;
&lt;h2 id="intermediary-rounds"&gt;intermediary rounds&lt;a class="headerlink" href="#intermediary-rounds" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Subsequent rounds (not counting the last one which is always there) will be created only if at least one new source file with an annotation has generated by the previous round.&lt;/p&gt;
&lt;h3 id="the-last-round"&gt;the last round&lt;a class="headerlink" href="#the-last-round" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When there is no type in source code to process and if the previous round has generated no type at all, one last round will be created, with empty lists of input files and annotations.&lt;/p&gt;
&lt;p&gt;This round could be seen as an opportunity for Annotation Processors to do some clean up or final source code generation.&lt;/p&gt;
&lt;p&gt;By the way, any code generated during the last round will never be processed by the compiler, it is not called the last round for nothing.&lt;/p&gt;
&lt;h3 id="round-logs"&gt;round logs&lt;a class="headerlink" href="#round-logs" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To find out about what is going on during the Annotation Processing, how many round there are and what they are made of, logs can be enabled in &lt;code&gt;Javac&lt;/code&gt; with command line arguments.&lt;/p&gt;
&lt;p&gt;See this previous &lt;a href="https://www.javatronic.fr/posts/2014/08/31/how-to-make-sure-javac-is-using-an-annotation-processor-and-troubleshoot-when-it-is-not/#customize-the-command-line"&gt;article&lt;/a&gt; for details.&lt;/p&gt;
&lt;h2 id="the-discovery-process"&gt;the discovery process&lt;a class="headerlink" href="#the-discovery-process" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To let the compiler know of &lt;code&gt;Processor&lt;/code&gt; implementation to use, the Annotation Processing specification defines a Discovery Process.&lt;/p&gt;
&lt;p&gt;One can create a file &lt;code&gt;META-INF/service/javax.annotation.processing.Processor&lt;/code&gt; which contains one line for each &lt;code&gt;Processor&lt;/code&gt; implementation with the qualified name of the class implementing the &lt;code&gt;Processor&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;The Compiler will automatically scan for this file in the class path when beeing run and use it to instanciate Annotation Processors.&lt;/p&gt;
&lt;p&gt;This previous &lt;a href="https://www.javatronic.fr/posts/2014/08/31/how-to-make-sure-javac-is-using-an-annotation-processor-and-troubleshoot-when-it-is-not/#customize-the-command-line"&gt;article&lt;/a&gt; describes how to make sure your Annotation Processor is beeing used by &lt;code&gt;Javac&lt;/code&gt;.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(*) projects used to make thoses experiments are available online and in a project dedicated to &lt;a href="https://github.com/lesaint/experimenting-annotation-processing"&gt;experimenting with Annotation Processing in Java&lt;/a&gt;. They use &lt;code&gt;Javac&lt;/code&gt; as a compiler.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id="resources"&gt;Resources&lt;a class="headerlink" href="#resources" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;the Javadoc of the &lt;a href="http://docs.oracle.com/javase/7/docs/api/javax/annotation/processing/Processor.html"&gt;Processor interface&lt;/a&gt; is the reference description of the Annotation Processing&lt;/li&gt;
&lt;li&gt;The part about &lt;a href="http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html#processing"&gt;Annotation Processing&lt;/a&gt; in the &lt;code&gt;Javac&lt;/code&gt; documentation&lt;/li&gt;
&lt;li&gt;project &lt;a href="http://projectlombok.org"&gt;Lombok&lt;/a&gt; uses annotations to generate content in source code such as getters/setters, toString(), constructors, ...&lt;/li&gt;
&lt;/ul&gt;</content><category term="articles"></category><category term="Annotation Processing"></category><category term="Javac"></category><category term="Java"></category></entry><entry><title>How to debug an annotation processor</title><link href="https://www.javatronic.fr/posts/2014/09/22/how-to-debug-an-annotation-processor/" rel="alternate"></link><published>2014-09-22T00:00:00+02:00</published><updated>2014-09-22T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-09-22:/posts/2014/09/22/how-to-debug-an-annotation-processor/</id><summary type="html">&lt;p&gt;Though it may not sound obvious, it is possible to debug an Annotation Processor, put a break point and look precisely at what is going on.&lt;/p&gt;
&lt;p&gt;This article will dive into the details on how I currently debug the Annotation Processor of &lt;a href="https://github.com/lesaint/damapping"&gt;DAMapping&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Javac&lt;/code&gt; compiler internally uses a JVM …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Though it may not sound obvious, it is possible to debug an Annotation Processor, put a break point and look precisely at what is going on.&lt;/p&gt;
&lt;p&gt;This article will dive into the details on how I currently debug the Annotation Processor of &lt;a href="https://github.com/lesaint/damapping"&gt;DAMapping&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;Javac&lt;/code&gt; compiler internally uses a JVM to do its work. So, the basic idea is to find a way to configure this JVM to accept a debugger connection and to be able to attach to the compiler process &lt;strong&gt;before&lt;/strong&gt; the Annotation Processor is run.&lt;/p&gt;
&lt;p&gt;Since the &lt;code&gt;DAMapping&lt;/code&gt; project is build with &lt;code&gt;Maven&lt;/code&gt;, my debug technic of choice is to use the &lt;code&gt;mvnDebug&lt;/code&gt; command.&lt;/p&gt;
&lt;h1 id="mvndebug"&gt;mvnDebug&lt;a class="headerlink" href="#mvndebug" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;&lt;code&gt;mvnDebug&lt;/code&gt; is a command that lies in the same directory as the &lt;code&gt;mvn&lt;/code&gt; command. So, as long as the &lt;code&gt;bin&lt;/code&gt; directory of your &lt;code&gt;Maven&lt;/code&gt; installation is in the path, you should be able to use it seamlessly.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;mvnDebug&lt;/code&gt; is the same exact command as &lt;code&gt;mvn&lt;/code&gt; except that it will stop instantly after beeing run and wait for a debugger to attach to its Java process before proceeding.&lt;/p&gt;
&lt;p&gt;As the &lt;code&gt;Javac&lt;/code&gt; command run by the &lt;code&gt;maven-compile&lt;/code&gt; plugin lies in the same process as the &lt;code&gt;mvn&lt;/code&gt; command, attaching to the &lt;code&gt;mvn&lt;/code&gt; process allows to attach to the &lt;code&gt;javac&lt;/code&gt; process.&lt;/p&gt;
&lt;h1 id="set-up-a-debug-connection-in-idea"&gt;Set up a debug connection in IDEA&lt;a class="headerlink" href="#set-up-a-debug-connection-in-idea" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Since I use IntelliJ IDEA, here is how to set yp a debug connection to attach to the &lt;code&gt;mvnDebug&lt;/code&gt; process in IDEA:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;go ro &lt;code&gt;Run&lt;/code&gt; &amp;gt; &lt;code&gt;Edit configuration...&lt;/code&gt; (or use the first item in the run/debug combo)&lt;/li&gt;
&lt;li&gt;click on the green &lt;code&gt;+&lt;/code&gt; sign and select &lt;code&gt;Remote&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;name to the new configuration, for example to "mvnDebug"&lt;/li&gt;
&lt;li&gt;change port to &lt;code&gt;8000&lt;/code&gt; and leave any other field to its suggested value&lt;ul&gt;
&lt;li&gt;host should be &lt;code&gt;localhost&lt;/code&gt;, Transport &lt;code&gt;Socket&lt;/code&gt; and Debugger mode &lt;code&gt;Attach&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img alt="screenshot creating a new remove configuration mvnDebug" src="https://www.javatronic.fr/images/how_to_debug_an_annotation_processor/new_remote_configuration_mvnDebug.png"/&gt;&lt;/p&gt;
&lt;h1 id="debugging"&gt;Debugging&lt;a class="headerlink" href="#debugging" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Go to a terminal and run a command such as the following:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mvnDebug&lt;span class="w"&gt; &lt;/span&gt;clean&lt;span class="w"&gt; &lt;/span&gt;install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;it is best to always use the &lt;code&gt;clean&lt;/code&gt; phase to make sure all files are compiled when debugging. Also, the command &lt;strong&gt;must&lt;/strong&gt; include the compile phase otherwise the Annotation Processor will never be run&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Go to IntelliJ IDEA, run the configuration you created.&lt;/p&gt;
&lt;p&gt;It will create a debugger session that will attach to the process on port &lt;code&gt;8000&lt;/code&gt; and the Maven process will resume (you can switch back to the terminal to see the logs moving).&lt;/p&gt;
&lt;h1 id="debuging-javac-directly"&gt;Debuging Javac directly&lt;a class="headerlink" href="#debuging-javac-directly" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This &lt;a href="http://www.pingtimeout.fr/2012/10/debugging-annotation-processor-in-every.html"&gt;post&lt;/a&gt; explains how to debug an Annotation Procossor when running &lt;code&gt;Javac&lt;/code&gt; directly.&lt;/p&gt;
&lt;p&gt;The basic idea is the same as above: allowing to connect with a debugger to the underlying JVM used by the &lt;code&gt;javac&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;This is achieved by the using the &lt;code&gt;-J&lt;/code&gt; option of &lt;code&gt;javac&lt;/code&gt; which role is to pass option to the underlying JVM.&lt;/p&gt;</content><category term="articles"></category><category term="Annotation Processing"></category><category term="Maven"></category><category term="Javac"></category></entry><entry><title>How to make sure javac is using an annotation processor and troubleshoot when it is not</title><link href="https://www.javatronic.fr/posts/2014/08/31/how-to-make-sure-javac-is-using-an-annotation-processor-and-troubleshoot-when-it-is-not/" rel="alternate"></link><published>2014-08-31T00:00:00+02:00</published><updated>2014-08-31T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-08-31:/posts/2014/08/31/how-to-make-sure-javac-is-using-an-annotation-processor-and-troubleshoot-when-it-is-not/</id><summary type="html">&lt;p&gt;When developing an annotation processor, one can either declare it to &lt;code&gt;javac&lt;/code&gt; using the &lt;code&gt;-processorpath&lt;/code&gt; command line option or with the service provider-configuration file &lt;code&gt;META-INF/services/javax.annotation.processing.Processor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In both cases, when our annotation processor seems not to be invoked by &lt;code&gt;javac&lt;/code&gt;, it is not easy to troubleshoot …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When developing an annotation processor, one can either declare it to &lt;code&gt;javac&lt;/code&gt; using the &lt;code&gt;-processorpath&lt;/code&gt; command line option or with the service provider-configuration file &lt;code&gt;META-INF/services/javax.annotation.processing.Processor&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In both cases, when our annotation processor seems not to be invoked by &lt;code&gt;javac&lt;/code&gt;, it is not easy to troubleshoot why &lt;code&gt;javac&lt;/code&gt; is not using it, especially as we are not getting any error.&lt;/p&gt;
&lt;p&gt;We will see in this article how to enable and interpret &lt;code&gt;javac&lt;/code&gt; logs to make sure the annotation processor is run and if not, how to interpret them to get a few leads on where the problem is coming from.&lt;/p&gt;

&lt;h1 id="enable-and-interprete-javac-logs"&gt;enable and interprete &lt;code&gt;javac&lt;/code&gt; logs&lt;a class="headerlink" href="#enable-and-interprete-javac-logs" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Since I am using &lt;code&gt;Maven&lt;/code&gt; to build my project, I am not writing &lt;code&gt;javac&lt;/code&gt; command lines by hand, &lt;code&gt;Maven&lt;/code&gt; does it for me.&lt;/p&gt;
&lt;p&gt;Obviouly, one could configure the &lt;code&gt;maven-compile&lt;/code&gt; plugin in the pom.xml file to enable the logs we need in &lt;code&gt;javac&lt;/code&gt; but &lt;code&gt;Maven&lt;/code&gt; has a tendancy in swallowing &lt;code&gt;javac&lt;/code&gt; logs. In addition, running &lt;code&gt;Maven&lt;/code&gt; will flood the terminal with logs we don't care about. So we would rather use the &lt;code&gt;javac&lt;/code&gt; command directly. &lt;/p&gt;
&lt;h2 id="retrieve-the-javac-command-line-from-maven"&gt;retrieve the &lt;code&gt;javac&lt;/code&gt; command line from &lt;code&gt;Maven&lt;/code&gt;&lt;a class="headerlink" href="#retrieve-the-javac-command-line-from-maven" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Run &lt;code&gt;Maven&lt;/code&gt; with -X option on the module which uses the annotation processor and copy the log line after log &lt;code&gt;[DEBUG] Command line options:&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For example, run &lt;code&gt;Maven&lt;/code&gt; with the following command line:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;mvn&lt;span class="w"&gt; &lt;/span&gt;clean&lt;span class="w"&gt; &lt;/span&gt;compile&lt;span class="w"&gt; &lt;/span&gt;-X&lt;span class="w"&gt; &lt;/span&gt;-pl&lt;span class="w"&gt; &lt;/span&gt;:moduleName
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-pl :moduleName&lt;/code&gt; is a way of specifying a specific module for &lt;code&gt;Maven&lt;/code&gt; to build. It allows to run the &lt;code&gt;mvn&lt;/code&gt; command from the root directory of the project. Obviously, in a single module project, this is useless. In a multi-module project however, its convenient. It saves you from changing the current directory to the module's directory and run the same &lt;code&gt;mvn&lt;/code&gt; command without that option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id="customize-the-command-line"&gt;customize the command line&lt;a class="headerlink" href="#customize-the-command-line" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;prefix what you just copied with the &lt;code&gt;javac&lt;/code&gt; command&lt;/li&gt;
&lt;li&gt;remove &lt;code&gt;-nowarn&lt;/code&gt; option, we need to see any information available, this option removes warnings&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;add options &lt;code&gt;-verbose -XprintRounds -XprintProcessorInfo -Xlint -J-verbose&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-verbose&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;(doc description) Verbose output. This includes information about each class loaded and each source file compiled.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Xlint&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;(doc description) Enable all recommended warnings. In this release, enabling all available warnings is recommended.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-XprintProcessorInfo&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;(doc description) Print information about which annotations a processor is asked to process.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-XprintRounds&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;(doc description) Print information about initial and subsequent annotation processing rounds&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;-J-verbose&lt;ul&gt;
&lt;li&gt;(doc description) Sets the -verbose option of JVM run internally by javac&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;warning about &lt;code&gt;-Xprint&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;DO NOT USE this option when you want to investigage annotation processors&lt;/li&gt;
&lt;li&gt;this option will use a Java runtime internal annotation processor to display source of compiled files and &lt;code&gt;javac&lt;/code&gt; won't log the actual annotation processor(s) that will be run during the round. It seems that this internal annotation processor wraps the actually used annotation processor(s) and we don't see which in logs&lt;/li&gt;
&lt;li&gt;(doc description) Print out textual representation of specified types for debugging purposes; perform neither annotation processing nor compilation. The format of the output may change.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(see http://docs.oracle.com/javase/7/docs/technotes/tools/windows/javac.html for details)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(optional) send all outputs to a file, add &lt;code&gt;&amp;gt; /tmp/compile_clean.log 2&amp;gt;&amp;amp;1&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="make-sure-the-annotation-processor-is-run-by-javac"&gt;make sure the annotation processor is run by &lt;code&gt;javac&lt;/code&gt;&lt;a class="headerlink" href="#make-sure-the-annotation-processor-is-run-by-javac" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;To make sure there is no problem loading your Annotation Processor class, look for the next 4 log lines.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;look for a log line stating that the .class file of your AnnotationProcessor class is being read.     &lt;ul&gt;
&lt;li&gt;if the class is in a Jar:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;loading&lt;span class="w"&gt; &lt;/span&gt;ZipFileIndexFileObject&lt;span class="o"&gt;[&lt;/span&gt;/opt/maven/repository/fr/javatronic/damapping/annotation-processor/0.2.3-bundle-clean-SNAPSHOT/annotation-processor-0.2.3-bundle-clean-SNAPSHOT.jar&lt;span class="o"&gt;(&lt;/span&gt;fr/javatronic/damapping/processor/DAAnnotationProcessor.class&lt;span class="o"&gt;)]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    * if the class is on the file system&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;loading&lt;span class="w"&gt; &lt;/span&gt;RegularFileObject&lt;span class="o"&gt;[&lt;/span&gt;/home/user/DEV/damapping/damapping-samples/spring-project/target/classes/fr/javatronic/damapping/processor/DAAnnotationProcessor.class&lt;span class="o"&gt;]]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ol start="2"&gt;
&lt;li&gt;look for at least one annotation processor round log&lt;ul&gt;
&lt;li&gt;look for the &lt;code&gt;Round&lt;/code&gt; string&lt;/li&gt;
&lt;li&gt;a round log line looks like the following:&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;        &lt;/span&gt;Round&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;:
&lt;span class="w"&gt;                &lt;/span&gt;input&lt;span class="w"&gt; &lt;/span&gt;files:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.impl.CourseSlotRepositoryImpl,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.impl.CourseRepositoryImpl,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.CourseSlotRepository,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.model.Teacher,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.service.impl.PeopleIndexServiceImpl,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.Day,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.TimedClass,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.mapper.IntegerToString,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.WeekPlanning,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.EveningClasses,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.MainClass,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.service.impl.WeekPlanningServiceImpl,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.spring.ApplicationConfig,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.mapper.TeacherToPeople,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.impl.TeacherRositoryImpl,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.model.Course,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.AfternoonClasses,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.Classes,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.service.WeekPlanningService,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.mapper.StudentToPeople,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.PeopleIndex,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.model.CourseSlot,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.impl.StudentRepositoryImpl,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.StudentRepository,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.service.PeopleIndexService,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.MorningClasses,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.view.model.People,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.CourseRepository,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.model.Student,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.demo.domain.repository.TeacherRository&lt;span class="o"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;annotations:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;java.lang.Override,&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.annotation.Mapper,&lt;span class="w"&gt; &lt;/span&gt;javax.annotation.Nullable,&lt;span class="w"&gt; &lt;/span&gt;org.springframework.context.annotation.Configuration&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;                &lt;/span&gt;last&lt;span class="w"&gt; &lt;/span&gt;round:&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
    * make sure your annotation(s) are present in the list in the line before the last line
3. look for the log line indicating that your AnnotationProcessor has been identified to process one or more annotation&lt;/p&gt;
&lt;p&gt;&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;Processor&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;qualified&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;AnnotationProcessor&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;matches&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;name&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;the&lt;span class="w"&gt; &lt;/span&gt;annotation&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;your&lt;span class="w"&gt; &lt;/span&gt;AnnotationProcessor&lt;span class="w"&gt; &lt;/span&gt;will&lt;span class="w"&gt; &lt;/span&gt;be&lt;span class="w"&gt; &lt;/span&gt;invoked&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;and&lt;span class="w"&gt; &lt;/span&gt;returns&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;true/false&lt;span class="o"&gt;]&lt;/span&gt;.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
4. look for a log line stating that your AnnotationProcessor class has been loaded, such as&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Loaded&lt;span class="w"&gt; &lt;/span&gt;fr.javatronic.damapping.processor.DAAnnotationProcessor&lt;span class="w"&gt; &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;file:/opt/maven/repository/fr/javatronic/damapping/annotation-processor/0.2.3-bundle-clean-SNAPSHOT/annotation-processor-0.2.3-bundle-clean-SNAPSHOT.jar&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If you cannot find the first log line, your AnnotationProcessor is not in the classpath of the &lt;code&gt;javac&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;If you cannot find the second log line, &lt;code&gt;javac&lt;/code&gt; did not pick any annotation processor in the classpath at all (so, not yours nor any other) or annotation processing is disabled. Make sure you don't have the &lt;code&gt;-proc:none&lt;/code&gt; on your command line.&lt;/p&gt;
&lt;p&gt;If you cannot find your annotation(s) in the second log line, you are just not compiling any class with your annotation(s). Your Annotation Processor will never be run by &lt;code&gt;javac&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you cannot find the third log line, your AnnotationProcessor might be incorrectly configured. Make sure the &lt;code&gt;getSupportedOptions()&lt;/code&gt; method of your Annotation Processor returns correctly the canonical name of the annotation(s) you want to process.&lt;/p&gt;
&lt;p&gt;If you cannot find the fourth log line, your Annotation Processor class or any class it depends on can not be loaded by &lt;code&gt;javac&lt;/code&gt;. There may be various reasons for that but I don't know how to get more details about that from &lt;code&gt;javac&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Obviously, if you can see all 4 log lines and don't get any error at all, your annotation processor is correctly beeing run by &lt;code&gt;javac&lt;/code&gt; and your problem is most likely the code of your Annotation Processor.&lt;/p&gt;
&lt;p&gt;You then need to debug your Annotation Processor and this is not trivial. I will likely post an article on how to debug an Annotation Processor soon.&lt;/p&gt;
&lt;p&gt;Hope this helps.&lt;/p&gt;</content><category term="articles"></category><category term="Annotation Processing"></category><category term="Javac"></category></entry><entry><title>Java Bean Mapping is wrong, let's fix it!</title><link href="https://www.javatronic.fr/posts/2014/05/21/java-bean-mapping-is-wrong-lets-fix-it/" rel="alternate"></link><published>2014-05-21T00:00:00+02:00</published><updated>2014-05-21T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-05-21:/posts/2014/05/21/java-bean-mapping-is-wrong-lets-fix-it/</id><summary type="html">&lt;p&gt;When it comes to Bean Mapping, it is surprising to see how many tools/frameworks are available. Some as old and famous as &lt;a href="http://dozer.sourceforge.net/"&gt;Dozer&lt;/a&gt;, other more recent and innovative as &lt;a href="https://github.com/xebia-france/selma"&gt;Selma&lt;/a&gt; (see this &lt;a href="http://www.javacodegeeks.com/2013/10/java-object-to-object-mapper.html"&gt;highly referenced post&lt;/a&gt; if you need a list).&lt;/p&gt;
&lt;p&gt;But no matter how different the technical underlying paradigms …&lt;/p&gt;</summary><content type="html">&lt;p&gt;When it comes to Bean Mapping, it is surprising to see how many tools/frameworks are available. Some as old and famous as &lt;a href="http://dozer.sourceforge.net/"&gt;Dozer&lt;/a&gt;, other more recent and innovative as &lt;a href="https://github.com/xebia-france/selma"&gt;Selma&lt;/a&gt; (see this &lt;a href="http://www.javacodegeeks.com/2013/10/java-object-to-object-mapper.html"&gt;highly referenced post&lt;/a&gt; if you need a list).&lt;/p&gt;
&lt;p&gt;But no matter how different the technical underlying paradigms of these tools are, they have one thing in common: they take Bean Mapping code out of the application, either as XML or annotation configuration + reflection, or as generated bytecode or, more recently, as generated classes.&lt;/p&gt;
&lt;p&gt;In my opinion and experience, this is a wrong approach to Bean Mapping and the cause of many problems in the life of an application.&lt;/p&gt;
&lt;p&gt;Bean mapping can look like simple/boring/obvious/tedious-to-write code but it still holds a lot of business logic and as such must be plain part of the application code. We shouldn't take that code away or hide it.&lt;/p&gt;

&lt;h1 id="a-little-bit-on-my-experience-on-the-subject"&gt;A little bit on my experience on the subject&lt;a class="headerlink" href="#a-little-bit-on-my-experience-on-the-subject" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I have worked for 3 years on a big online application for a major French telco as a senior developer and then as a technical lead.&lt;/p&gt;
&lt;p&gt;This application integrates with nearly 100 web services (or other remote services), with a bunch of business components, a database, throws DTOs to the client user interface exposed as 150+ methods, ..., and internally, the application is made of several software layers. Overall, Bean Mapping occurs in many places and is a strong aspect of the application.&lt;/p&gt;
&lt;p&gt;Developers on this application tested several Bean Mapping solutions, from Dozer to fully hand coded mapping as the developer feels to write it, to extensive use of Guava's &lt;a href="http://docs.guava-libraries.googlecode.com/git/javadoc/com/google/common/base/Function.html"&gt;Function&lt;/a&gt;, to other exotic approaches. I saw them behave as time goes and as the application lives, and I learned a lot.&lt;/p&gt;
&lt;p&gt;After three years, I must say that I didn't see any solution that ruled them all. I still have nightmare of the time I lost with some of them.&lt;/p&gt;
&lt;p&gt;So, I started thinking about what Bean Mapping is really about, the problems I had and concluded that Bean Mapping should be very different.&lt;/p&gt;
&lt;h1 id="existing-tools-were-created-to-write-mapping-code"&gt;Existing tools were created to write mapping code&lt;a class="headerlink" href="#existing-tools-were-created-to-write-mapping-code" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Bean mapping frameworks quick descriptions are all pretty much the same:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;include our jar/declare maven dependency/some other kind of quick setup step&lt;/li&gt;
&lt;li&gt;add this config file/this annotation/whatever to your application (optional)&lt;/li&gt;
&lt;li&gt;with these 2/3/4 lines of code, Tadah ! class A is transformed into class B&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Ok, good. This is simple enough and it solves the initial problem of the developer : writing the mapping code from one bean to another.&lt;/p&gt;
&lt;p&gt;Bonus, it seems to also work for tree of beans and offers customization possibilities.&lt;/p&gt;
&lt;p&gt;Then, why should I be unhappy with this solution ?&lt;/p&gt;
&lt;p&gt;Because writing the Bean Mapping code is far from the only concern of the developer, even more of the software architect : maintainability, stability, readability, support for debugging, learning curve for new developers, etc...&lt;/p&gt;
&lt;h1 id="the-practical-problems-of-hidden-mapping-code"&gt;The practical problems of hidden mapping code&lt;a class="headerlink" href="#the-practical-problems-of-hidden-mapping-code" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;As I said earlier, these frameworks remove the mapping code from the application and this introduces many practical problems as the application lives, grows (hopefully) and as developers come and go.&lt;/p&gt;
&lt;h3 id="bean-mapping-code-is-not-source-code-in-your-application"&gt;Bean Mapping code is not source code in your application&lt;a class="headerlink" href="#bean-mapping-code-is-not-source-code-in-your-application" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Therefore it is not in SCM, you can not tell when nor where a change occurred and who did it. You can't tell either when some mapping code was added or if it actually was added.&lt;/p&gt;
&lt;h3 id="bean-mapping-code-is-not-stable"&gt;Bean Mapping code is not stable&lt;a class="headerlink" href="#bean-mapping-code-is-not-stable" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;The generated code/bytecode can change when upgrading the mapping framework and reflection-based mapping is even worse on that point.&lt;/p&gt;
&lt;p&gt;Sure, you are supposed to have unit tests to ensure stability but, supposing unit tests break, you will waste time to fix pieces of code which had no reason to change in the first place since they were working.&lt;/p&gt;
&lt;h3 id="you-cant-leverage-the-power-of-the-ide"&gt;you can't leverage the power of the IDE&lt;a class="headerlink" href="#you-cant-leverage-the-power-of-the-ide" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To find out where and how class &lt;code&gt;X&lt;/code&gt; is instanced or property &lt;code&gt;foo&lt;/code&gt; is set/read, you are on your own.&lt;/p&gt;
&lt;p&gt;But when it is time to find out where a problem is coming from, believe me, you will curse the guy who decided to use a Bean Mapping tool instead of just writing dumb &lt;code&gt;b.setFoo(a.getFoo())&lt;/code&gt; lines.&lt;/p&gt;
&lt;h3 id="debugging-is-usually-not-easy"&gt;debugging is usually not easy&lt;a class="headerlink" href="#debugging-is-usually-not-easy" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Hidden mapping code is acting as a black box: when mapping a single bean to another, it is ok, when mapping tree of beans however, it is &lt;em&gt;not&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Also, forget about putting a breakpoint in generated byte code or reflection-based frameworks code...&lt;/p&gt;
&lt;h3 id="no-direct-access-to-the-mapping-code-for-new-developers"&gt;no direct access to the mapping code for new developers&lt;a class="headerlink" href="#no-direct-access-to-the-mapping-code-for-new-developers" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When a new developer joins the project, supposing she has to fix a bug or develop an evolution, she will need to learn some tool to know about know about some dumb 1-to-1 mapping, where it happens and how.&lt;/p&gt;
&lt;h3 id="need-to-customize-say-goodbye-to-compiler-feedback"&gt;need to customize ? say goodbye to compiler feedback&lt;a class="headerlink" href="#need-to-customize-say-goodbye-to-compiler-feedback" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When the time comes to customize the mapping, you generally lose compile-time feedback and type safety because you end up using strings to designate properties and/or you are required to add some XML configuration.&lt;/p&gt;
&lt;p&gt;You can then forget about refactoring your bean classes and having the mapping code updated consistently by your IDE. Also forget about the compiler telling you that, for example, by changing the type of this property, your Bean Mapping code now fails to execute.&lt;/p&gt;
&lt;p&gt;Some tool such as &lt;a href="http://modelmapper.org/"&gt;ModelMapper&lt;/a&gt; provide a solution to this problem, but at the cost of very complex and verbose technical solutions. It is way simpler to just write the Bean Mapping code from the beginning. In addition, everyone will understand it just by looking at it.&lt;/p&gt;
&lt;h3 id="immutability-is-not-a-prime-citizen"&gt;immutability is not a prime citizen&lt;a class="headerlink" href="#immutability-is-not-a-prime-citizen" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Designing immutable beans wherever possible can be tough but it solves many issues in the long run.&lt;/p&gt;
&lt;p&gt;Unfortunately, immutable beans are not well supported by Bean Mapping frameworks, notably because:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;it involves bean not having setters (basic requirement of property based framework)&lt;ul&gt;
&lt;li&gt;immutable beans only have constructors to initialize their state or, better, builders&lt;/li&gt;
&lt;li&gt;both constructors and builders can hardly be automatically mapped&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;also mapping tree of immutable beans requires to map beans in a bottom-up fashion instead of the usual top-bottom way&lt;ul&gt;
&lt;li&gt;children of immutable beans must be created before their parent&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="you-cant-investigate-how-mapping-actually-occurs"&gt;you can't investigate how mapping actually occurs&lt;a class="headerlink" href="#you-cant-investigate-how-mapping-actually-occurs" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This applies especially to reflection-based or bytecode generation-based mapping. Good luck when you want to make sure the problem is not at the mapping level.&lt;/p&gt;
&lt;h3 id="you-cant-tell-dead-code-apart"&gt;you can't tell dead code apart&lt;a class="headerlink" href="#you-cant-tell-dead-code-apart" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With most tools, it can be hard to tell that mapping configuration and/or customization is actually dead code:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;is that line of configuration still required for mapping to occur ?&lt;/li&gt;
&lt;li&gt;is that custom whatever object still used ?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Unless you have extensive test coverage and remove the suspicious part, sometimes, you just can not tell.&lt;/p&gt;
&lt;h3 id="not-much-or-none-control-over-mapping-of-bean-trees"&gt;not much (or none) control over mapping of bean trees&lt;a class="headerlink" href="#not-much-or-none-control-over-mapping-of-bean-trees" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;When it comes to mapping trees of beans, you either do not have control over it or need to customize the framework and you end up with code that is not that simple any more:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;want to write one mapper for each node of a tree of beans, so you can really &lt;em&gt;unit&lt;/em&gt; test ? good luck&lt;/li&gt;
&lt;li&gt;want to keep type dependency between mappers so you can easily tell how your code behaves ? for some frameworks, that's just impossible&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="performance"&gt;performance ...&lt;a class="headerlink" href="#performance" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Performance is a big issue with reflection based mapping tools, they are very slow and CPU/memory intensive compared to plain Java code. In addition, this kind of code can never benefit from compiler and/or JVM optimizations.&lt;/p&gt;
&lt;p&gt;Frameworks based on other technical paradigms always compare each other on that subject but no matter what I don't think they can beat plain Java code (unless you just write shitty Java code but that's not a Bean Mapping issue).&lt;/p&gt;
&lt;h2 id="the-down-side-of-bean-mapping-code-in-source"&gt;The down side of Bean Mapping code in source&lt;a class="headerlink" href="#the-down-side-of-bean-mapping-code-in-source" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Naturally, each point made above is addressed as the developer has direct access to the code. Most of them can be dealt with as any regular Java coding problem, any solution can be used.&lt;/p&gt;
&lt;p&gt;But I am also aware of the main reasons to hide Bean Mapping code in the first place:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Bean Mapping code does not add much value, no need to have it in the application&lt;ul&gt;
&lt;li&gt;as I explain below, I think this statement is wrong&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Bean Mapping code written in source does not adapt easily to change&lt;ul&gt;
&lt;li&gt;I think that using the IDE refactoring capabilities is a better way to adapt to change than having code generated with each build or at runtime&lt;/li&gt;
&lt;li&gt;if it isn't, it only means that we need new tools&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="bean-mapping-code-is-business-code"&gt;Bean mapping code is business code&lt;a class="headerlink" href="#bean-mapping-code-is-business-code" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;After thorough thinking, I found that the most important problem with Bean Mapping code being out of the application is that it removes business code from the application.&lt;/p&gt;
&lt;p&gt;Yes, Bean Mapping code &lt;em&gt;is&lt;/em&gt; business code.&lt;/p&gt;
&lt;p&gt;Even exact 1-to-1 mapping is business logic. This code could have been different. Some properties could have been nullified or hardcoded to a specific value on purpose. The fact it is not the case should be written in code. It &lt;strong&gt;will&lt;/strong&gt; save any question in the future.&lt;/p&gt;
&lt;p&gt;Also, the very facts that so many bugs occur at the Bean Mapping level and that such big parts of documentation are about mapping are the proof that Bean Mapping is business logic.&lt;/p&gt;
&lt;p&gt;Bean mapping code is not some technical problem that a framework can hide/remove from the application.&lt;/p&gt;
&lt;p&gt;But I agree, writing Bean Mapping &lt;em&gt;is&lt;/em&gt; a technical problem.&lt;/p&gt;
&lt;h1 id="bean-mapping-is-dead-long-live-bean-mapping"&gt;Bean Mapping is dead, long live Bean Mapping&lt;a class="headerlink" href="#bean-mapping-is-dead-long-live-bean-mapping" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Starting from the hypothesis that Bean Mapping code should be part of the application code as any other piece of business code, two questions arise:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Shouldn't that code be organized a bit ? If everyone starts writing Bean Mapping code without any guideline of some kind, code will just end up being a mess and it will be worse than before&lt;/li&gt;
&lt;li&gt;Some mapping code is just tedious to write, it feels like a waste of time, shouldn't there be some tool to help the developer ?&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And one strong constraint: the developer must always keep control over the code and the tool must stay out of the way&lt;/p&gt;
&lt;p&gt;The answer to both questions is "obviously, yes!" and the constraint drove my research for a solution.&lt;/p&gt;
&lt;p&gt;I think that what we need is not one tool, but two, very much complementary:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;a framework to structure Bean Mapping code and handle the wiring with the rest of the application and with other pieces of Bean Mapping code&lt;ul&gt;
&lt;li&gt;lets call it a Bean Mapping Wiring Framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;a tool/plugin at the IDE level to generates mapping code from one class to another&lt;ul&gt;
&lt;li&gt;lets call it a Bean Mapping Code Generator&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Those two tools would solve very different problems and could be used together or not. In addition, they would never be mandatory once you start using them, they would step out of the way anytime. This way the developer keep controls over the code.&lt;/p&gt;
&lt;p&gt;Still, the ultimate goal is that these tools would be so convenient that they will end up in the coding guidelines of the team.&lt;/p&gt;
&lt;h2 id="bean-mapping-wiring-framework"&gt;Bean Mapping Wiring Framework&lt;a class="headerlink" href="#bean-mapping-wiring-framework" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The Bean Mapping Wiring Framework is about letting the developer write the Bean Mapping code in a class and giving her the power to use that class's code as easily as possible:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using interfaces for loose coupling&lt;ul&gt;
&lt;li&gt;developer writes the implementation, the interface which will be used in other classes to call this implementation will be generated by the framework&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;complying with Separation Of Concern&lt;ul&gt;
&lt;li&gt;using a class for each mapping from one class to another&lt;/li&gt;
&lt;li&gt;side effect, unit testing is much easier&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;integrating with Dependency Injection frameworks&lt;ul&gt;
&lt;li&gt;for example, Spring integration would be about generating annotations on classes or XML configuration files or configuration classes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;providing coding patterns to help mapping complex structures of beans or solve common Bean Mapping problems&lt;ul&gt;
&lt;li&gt;using Guava's Function to easily convert collections of beans or integrating with Java 8 lambdas&lt;/li&gt;
&lt;li&gt;using mapper factories when creating a bean from more than one source bean&lt;/li&gt;
&lt;li&gt;etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To my knowledge, there is no such framework at the moment except &lt;a href="https://github.com/lesaint/damapping"&gt;DAMapping&lt;/a&gt; which development started several month ago.&lt;/p&gt;
&lt;h2 id="bean-mapping-code-generator"&gt;Bean Mapping Code Generator&lt;a class="headerlink" href="#bean-mapping-code-generator" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The primary goal of this tool is to provide convenient generation of Bean Mapping code &lt;em&gt;inside&lt;/em&gt; the application's source code from one class to another. The IDE is the best place for this as we could rely on interactive UI to generate the source code living option to the developers.&lt;/p&gt;
&lt;p&gt;Second goal of this tool is the integration with the Bean Mapping Wiring Framework. This integration would give the option to the developer to not only generate Bean Mapping code but also generate Bean Mapping classes. This would be a convenient way of creating the code for tree of beans without being intrusive about it.&lt;/p&gt;
&lt;p&gt;Since the logic of generating mapping code already exists, developing this tool would really be a matter of IDE integration and UI design.&lt;/p&gt;
&lt;p&gt;Generating the initial Bean Mapping code is relatively easy but this tool will obviously need to complete partial mapping code to be successful. And that's a little harder to do.&lt;/p&gt;
&lt;h1 id="conclusion"&gt;Conclusion&lt;a class="headerlink" href="#conclusion" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;People keep on creating new Bean Mapping tools, changing the technical approach. But they tend to keep the same underlying paradigm which in my opinion is the root cause of their unhappiness with the solution they had before: hidden Bean Mapping code.&lt;/p&gt;
&lt;p&gt;This article is the first of a series on this new approach to Bean Mapping. Other articles will follow which will dive deeper into the theory and implementation of those new tools. Next article will be on the Bean Mapping Wiring Framework implementation since I already have initial working results with &lt;a href="https://github.com/lesaint/damapping"&gt;DAMapping&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I know many people (very) unhappy with Dozer and such frameworks. I'm interesting in their opinion, maybe their contribution, or existing works I am not aware of.&lt;/p&gt;
&lt;p&gt;Do not hesitate to comment below or contact me on &lt;a href="https://twitter.com/LesaintSeb"&gt;Twitter&lt;/a&gt;.&lt;/p&gt;</content><category term="articles"></category><category term="Java"></category><category term="Bean Mapping"></category></entry><entry><title>Devoxx France 2014, second and last day feedback</title><link href="https://www.javatronic.fr/posts/2014/04/18/devoxx-france-2014-second-and-last-day-feedback/" rel="alternate"></link><published>2014-04-18T00:00:00+02:00</published><updated>2014-04-18T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-04-18:/posts/2014/04/18/devoxx-france-2014-second-and-last-day-feedback/</id><summary type="html">&lt;p&gt;This was my second and last day at Devoxx France 2014.&lt;/p&gt;
&lt;p&gt;But it was the "real" first day of Devoxx which started by a word of the Devoxx team, funny but also instructive as they dropped the news of Devoxx 2015
leaving the Mariott for a much bigger place : le …&lt;/p&gt;</summary><content type="html">&lt;p&gt;This was my second and last day at Devoxx France 2014.&lt;/p&gt;
&lt;p&gt;But it was the "real" first day of Devoxx which started by a word of the Devoxx team, funny but also instructive as they dropped the news of Devoxx 2015
leaving the Mariott for a much bigger place : le Palais des congrés de la Porte Maillot.&lt;/p&gt;
&lt;p&gt;I also enjoyed the keynotes, especially the surprise word of Tariq Krim which gives hope of France recognising the asset which are the french developers.&lt;/p&gt;
&lt;h2 id="gradle-ne-fait-pas-que-remplacer-maven-by-cedric-champeau-cedricchampeau"&gt;Gradle ne fait pas que remplacer Maven by Cedric Champeau (@CedricChampeau)&lt;a class="headerlink" href="#gradle-ne-fait-pas-que-remplacer-maven-by-cedric-champeau-cedricchampeau" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Cedric's presentation on Gradle was quite polluted with too much trolling and comparison with Maven.
Fortunately, it went better after half the presentation when he started actually showing what Gradle is capable of and how it does it.&lt;/p&gt;
&lt;p&gt;Cedric admitted he had to skip some parts of his presentation of some features. In my opinion, the reason comes from too much time lost on giving reason of his bad opinion of Maven.&lt;/p&gt;
&lt;p&gt;Still, overall, I think I got a good idea of the product and want to try it out.&lt;/p&gt;
&lt;h2 id="les-concepts-de-la-programmation-fonctionnelle-illustres-avec-java-8-by-yannick-chartois-ychartois"&gt;Les concepts de la programmation fonctionnelle illustrés avec Java 8 by Yannick Chartois (@ychartois)&lt;a class="headerlink" href="#les-concepts-de-la-programmation-fonctionnelle-illustres-avec-java-8-by-yannick-chartois-ychartois" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I did not learn much from this quickly since I already know functional programming paradigms and now have a pretty good knowledge of Java 8 from José Paumard presentation the day before and other source of information about lambda before Devoxx.&lt;/p&gt;
&lt;p&gt;Still, the presentation was well prepared and it wasn't a strong waste of time to do a global overview of functional programming in Java 8.&lt;/p&gt;
&lt;h2 id="les-applications-reactives-un-nouveau-paradigme-pour-relever-les-defis-de-leconomie-numerique-by-fabrice-croiseaux-et-antoine-detante"&gt;Les applications réactives : un nouveau paradigme pour relever les défis de l'économie numérique by Fabrice Croiseaux et Antoine Detante&lt;a class="headerlink" href="#les-applications-reactives-un-nouveau-paradigme-pour-relever-les-defis-de-leconomie-numerique-by-fabrice-croiseaux-et-antoine-detante" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Interesting presentation about both the concepts behind the buzzword "Reactive Programming" and the patterns to implement them.&lt;/p&gt;
&lt;p&gt;The presentation included code samples in several languages, from Scala to Javascript, which very practically pointed that reactive is about patterns which can be implemented today.&lt;/p&gt;
&lt;p&gt;This was a very good introduction to the Reactive concepts and their business advantages.&lt;/p&gt;
&lt;p&gt;Lire le Reactive Manifesto&lt;/p&gt;
&lt;h2 id="cassandra-une-nouvelle-ere-by-jonathan-ellis"&gt;Cassandra, une nouvelle ère by Jonathan Ellis&lt;a class="headerlink" href="#cassandra-une-nouvelle-ere-by-jonathan-ellis" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I didn't know cassandra. I don't know how to use it any more than before this presentation, but now I'm really convinced of the powers and strength of this product.&lt;/p&gt;
&lt;p&gt;Jonathan did an excellent presentation, clear and with a pretty good french (even though he is american).
He quoted three major companies about the reasons they choose cassandra, each for different and complementary reasons.&lt;/p&gt;
&lt;p&gt;Jonathan completed this with graphics and explanations about the technical paradigms and algorithm used to achieved near perfect availability, extremely low latency and other killing features.&lt;/p&gt;
&lt;p&gt;I will keep Cassandra in mind.
After the presentation about Redis the day before, I am now aware of two database products I didn't know before and when to use each one.
I am very happy with that.&lt;/p&gt;
&lt;h2 id="vive-les-websockets-libres-by-jean-francois-arcand-jfarcand"&gt;Vive les WebSockets libres! by Jean-François Arcand (@jfarcand)&lt;a class="headerlink" href="#vive-les-websockets-libres-by-jean-francois-arcand-jfarcand" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Jean-François comes from Quebec. As one would expect from a quebecois to make a presentation entertaining for a french audience from France,
he has a strong accent and jumps on any opportunity to make fun on our use of english words (such as "browser" when in Quebec, they say "fureteurs").&lt;/p&gt;
&lt;p&gt;He is also (and mainly) the creator (?) of the Atmosphere framework.&lt;/p&gt;
&lt;p&gt;That said, he is in a very good position to make an interesting, well documented and critical presentation on WebSocket (and sell Atmosphere, in the process).&lt;/p&gt;
&lt;p&gt;Now I know many of the many pitfalls of implementing websocket when the JSR isn't even finished, when browser and proxies are very inconsistent in how they treat them and when on the Internet barely half of the users use a websocket-enabled browser.&lt;/p&gt;
&lt;h2 id="building-a-real-time-risk-analysis-system-in-java-by-alexandre-navarro-alex_j_navarro-and-benoit-lacelle-benoit_lacelle"&gt;Building a real time risk analysis system in Java by Alexandre Navarro (@alex_j_navarro) and Benoît Lacelle (@benoit_lacelle)&lt;a class="headerlink" href="#building-a-real-time-risk-analysis-system-in-java-by-alexandre-navarro-alex_j_navarro-and-benoit-lacelle-benoit_lacelle" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Docker conference room was full 10 minutes before the conference started. I've been to the university on the subject so no regret. Kick-ass conference seems to be the same I have seen online.
So I went to this conference out of lot of curiosity and to get me out of my comfort zone.&lt;/p&gt;
&lt;p&gt;At the beginning, I was very much uncomfortable with the subject because the conference looked a lot like a commercial show for about a closed source product.&lt;/p&gt;
&lt;p&gt;But after a while, the speech went deeper into the many challenges of computing indicators from real time multi-dimensional data updating at a very high frequency.&lt;/p&gt;
&lt;p&gt;I must say that it was a good opportunity to learn about the scale of some existing solutions in the banking world
(Apparently, a 80Gb heap JVM is considered a small JVM at la Société Générale...), but I didn't learn much for my day-to-day work.&lt;/p&gt;
&lt;h2 id="bitcoin-et-monnaies-cryptographiques-by-gregory-paul-paulgreg"&gt;Bitcoin et monnaies cryptographiques by Gregory Paul (@paulgreg)&lt;a class="headerlink" href="#bitcoin-et-monnaies-cryptographiques-by-gregory-paul-paulgreg" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;This conference is the one I will certainly remember as the one from which I learned the most and as the most complete on its subject.&lt;/p&gt;
&lt;p&gt;Gregory's conference was well organised and covered every aspect I could have had a question about on the subject of bitcoins.&lt;/p&gt;
&lt;p&gt;It covered the cryptographic principles behind the money, how transactions work and how they are secured, history of bitcoin, how to get mine and what it costs today,
the other crypto moneys and why they were created, the current eco system around bitcoin, how the money could be destroyed, etc...&lt;/p&gt;</content><category term="articles"></category><category term="Devoxx"></category><category term="Java"></category><category term="Gradle"></category></entry><entry><title>Devoxx France 2014, first day feedback</title><link href="https://www.javatronic.fr/posts/2014/04/17/devoxx-france-2014-first-day-feedback/" rel="alternate"></link><published>2014-04-17T00:00:00+02:00</published><updated>2014-04-17T00:00:00+02:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-04-17:/posts/2014/04/17/devoxx-france-2014-first-day-feedback/</id><summary type="html">&lt;p&gt;On Wednesday 16 of April, I went to the first day of Devoxx France 2014 in Paris. This university day was indeed crowded and choosing between session
was tough.&lt;/p&gt;
&lt;h2 id="hands-on-lab-docker-by-julien-vey-et-pierre-padrixe"&gt;Hands-on-lab: Docker by Julien Vey et Pierre Padrixe&lt;a class="headerlink" href="#hands-on-lab-docker-by-julien-vey-et-pierre-padrixe" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nice session. True hands-on session with a nice tutorial progressively diving into Docker …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On Wednesday 16 of April, I went to the first day of Devoxx France 2014 in Paris. This university day was indeed crowded and choosing between session
was tough.&lt;/p&gt;
&lt;h2 id="hands-on-lab-docker-by-julien-vey-et-pierre-padrixe"&gt;Hands-on-lab: Docker by Julien Vey et Pierre Padrixe&lt;a class="headerlink" href="#hands-on-lab-docker-by-julien-vey-et-pierre-padrixe" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nice session. True hands-on session with a nice tutorial progressively diving into Docker towards a real world use case : a Docker container with a Git
repository which will trigger a build on a Docker container containing a Jenkins server via a git-hook.&lt;/p&gt;
&lt;p&gt;I don't think many attendees went to the end of the tutorial, especially those like me who had never worked with docker before, but the whole tutorial
is on &lt;a href="https://github.com/julienvey/docker-hands-on"&gt;Github&lt;/a&gt; with the target solution and can be finished later.&lt;/p&gt;
&lt;p&gt;Thanks the Julien Vey for their support. Good thinking setting up a VM to share on USB key during the session to get everyone started quickly.&lt;/p&gt;
&lt;h2 id="university-java-8-streams-collector-by-jose-paumard-josepaumard"&gt;University: Java 8, Streams &amp;amp; Collector by José Paumard (@JosePaumard)&lt;a class="headerlink" href="#university-java-8-streams-collector-by-jose-paumard-josepaumard" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;José's university was very well prepared and very interesting, going nicely and progressively into the new feature of Java8, featured with detailed
and intuitive explanations and illustrated by funny and far from pointless practical exercises with live coding on stage.&lt;/p&gt;
&lt;p&gt;The presentation will obviously on Parleys but José (and Remy Forax) were kind enough to answer several questions off-stage that I will report here.&lt;/p&gt;
&lt;h3 id="streams-can-not-be-reused"&gt;Streams can not be reused&lt;a class="headerlink" href="#streams-can-not-be-reused" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;José quickly said something about &lt;code&gt;Stream&lt;/code&gt; not being reusable during a live coding session.&lt;/p&gt;
&lt;p&gt;Coming from the world of Guava where &lt;code&gt;Iterable&amp;lt;T&amp;gt;&lt;/code&gt; can be stored in variable and reused, this statement felt very surprising to me.&lt;/p&gt;
&lt;p&gt;But indeed, Remy Forax pointed out that Streams implementation is very different from the Iterables, notably because they are implemented at the
JVM level and are capable of optimisations (among which parallelism and use of lambda) much more powerful than Guava has ever been capable of.
The way they are implemented just isn't compatible with reuse. More specifically, when a stream has been consumed, any attempt to reuse it will
throw an &lt;code&gt;IllegalStateException&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id="replacing-the-collectentrysetstream"&gt;replacing the Collect([...]).entrySet().stream()&lt;a class="headerlink" href="#replacing-the-collectentrysetstream" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id="question-1"&gt;Question 1&lt;a class="headerlink" href="#question-1" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Dans le cas d'une source de donnée par nature séqentielle est-il possible de collecte (ie. aggréger des données) sans rompre le stream ?
Si cette une source de donnée de taille indéfini et potentiellement très importante, cela évite de créer une Map en mémoire inutilement.&lt;/p&gt;
&lt;h4 id="question-1a"&gt;Question 1.a&lt;a class="headerlink" href="#question-1a" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h4&gt;
&lt;p&gt;Un stream sur un fichier est-il bien séquentielle ? dans tous les cas ? Un accès parallèle à plusieurs partie d'un même fichier,
si on ne s'intéresse pas à l'ordre des données peut être une grosse optimisation.&lt;/p&gt;
&lt;h2 id="tools-in-action-redis-une-base-not-only-nosql-by-nicolas-martignole-nmartignole"&gt;Tools in Action: Redis, une base Not Only NOSQL by Nicolas Martignole (@nmartignole)&lt;a class="headerlink" href="#tools-in-action-redis-une-base-not-only-nosql-by-nicolas-martignole-nmartignole" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Nicolas did an excellent work at describing and pointing out the strong advantages and the simplicity of Redis.&lt;/p&gt;
&lt;p&gt;Illustrated by several use cases, the main of which was the own Devoxx CFP's website, this presentation gave me a pretty good idea of how to
use Redis and I really bought the easy of access and performance awareness of the product&lt;/p&gt;
&lt;p&gt;I will definitely try it.&lt;/p&gt;
&lt;h2 id="tools-in-action-jboss-forge-in-action-by-antonio-goncalvez"&gt;Tools in Action: JBoss Forge in Action by Antonio Goncalvez&lt;a class="headerlink" href="#tools-in-action-jboss-forge-in-action-by-antonio-goncalvez" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;My overall feeling about this presentation was that it was a little messy. Antonio had several technical problems.&lt;/p&gt;
&lt;p&gt;Still, it was successful at giving a good idea of what JBoss Forge is (and isn't) and a high ground idea of how it is architectured.&lt;/p&gt;
&lt;h2 id="tools-in-action-bluetooth-low-energy-by-romain-menetrier-romemore"&gt;Tools in Action: Bluetooth Low Energy by Romain Menetrier (@romemore)&lt;a class="headerlink" href="#tools-in-action-bluetooth-low-energy-by-romain-menetrier-romemore" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;I went to this session out of curiosity.
I don't intend to work on bluetooth any time soon but I expected this session to give me an idea of what bluetooth is nowadays and how it can be
implemented.&lt;/p&gt;
&lt;p&gt;And I was satisfied on those points with the presentation of Romain Menetrier. It was worth the time.&lt;/p&gt;</content><category term="articles"></category><category term="Devoxx"></category><category term="Java"></category></entry><entry><title>Implementing method-level security with Spring Security and Spring MVC</title><link href="https://www.javatronic.fr/posts/2014/03/15/implementing-method-level-security-with-spring-security-and-spring-mvc/" rel="alternate"></link><published>2014-03-15T00:00:00+01:00</published><updated>2014-03-15T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-03-15:/posts/2014/03/15/implementing-method-level-security-with-spring-security-and-spring-mvc/</id><summary type="html">&lt;p&gt;Using Spring Security with Spring MVC to provide method level security on Controller classes can be trooblesome : using CGLIB-based proxies might be mandatory and you might need to tweak your code to fit Spring.&lt;/p&gt;
&lt;p&gt;When setting up exactly just that on a project, I ran into a series of problem …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using Spring Security with Spring MVC to provide method level security on Controller classes can be trooblesome : using CGLIB-based proxies might be mandatory and you might need to tweak your code to fit Spring.&lt;/p&gt;
&lt;p&gt;When setting up exactly just that on a project, I ran into a series of problem and got a finer understanding on how Spring Security implements Method Security.&lt;/p&gt;

&lt;h1 id="how-to-enable-method-security"&gt;How to enable Method Security&lt;a class="headerlink" href="#how-to-enable-method-security" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;As stated by the &lt;a href="http://docs.spring.io/spring-security/site/docs/3.1.x/reference/el-access.html#d0e5600"&gt;documentation&lt;/a&gt;, enabling Method level security with Spring Security is as simple as added a &lt;code&gt;global-method-security&lt;/code&gt; tag in your configuration.&lt;/p&gt;
&lt;p&gt;It's super easy and it works. You can even choose which annotation set you want to use with the appropriate attributes: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;secured-annotations="enabled"&lt;/code&gt; for &lt;code&gt;@Secured&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jsr250-annotations="enabled"&lt;/code&gt; for &lt;code&gt;@RolesAllowed&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pre-post-annotations="enabled"&lt;/code&gt; for &lt;code&gt;@PreAuthorize&lt;/code&gt;, &lt;code&gt;@PostAuthorize&lt;/code&gt;, ...&lt;/li&gt;
&lt;li&gt;&lt;code&gt;metadata-source-ref="extraMethodSecurityMetadataSource"&lt;/code&gt; to use your own annotations&lt;ul&gt;
&lt;li&gt;more on that in another article&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="pitfalls-when-using-method-security-on-spring-mvc-controllers"&gt;Pitfalls when using Method Security on Spring MVC controllers&lt;a class="headerlink" href="#pitfalls-when-using-method-security-on-spring-mvc-controllers" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;But in fact, it's not that easy, especially with Spring MVC controllers.&lt;/p&gt;
&lt;h2 id="the-position-of-global-method-security-matters"&gt;The position of &lt;code&gt;global-method-security&lt;/code&gt; matters&lt;a class="headerlink" href="#the-position-of-global-method-security-matters" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The first problem I encountered when adding &lt;code&gt;@Secured&lt;/code&gt; annotations on my Controller classes was that it simply didn't work. Spring would not enforce the required role(s), not even applying any control. My Controller classes didn't seem to be secured at all.&lt;/p&gt;
&lt;p&gt;In fact, they weren't.&lt;/p&gt;
&lt;p&gt;After some googling, I found out that the position of the &lt;code&gt;global-method-security&lt;/code&gt; tag in the configuration files is &lt;strong&gt;very&lt;/strong&gt; important. Only the beans in the current context seems to be "secured" (in fact proxied, more on that below).&lt;/p&gt;
&lt;p&gt;As most people using Spring MVC, I had two Spring Application Contexts (AP) : one for the application and one for the DispatchServlet which inherits from the application context.&lt;/p&gt;
&lt;p&gt;In this conditions, having the &lt;code&gt;global-method-security&lt;/code&gt; tag in the application AP would ignore the Controller class declared/scanned in the DispatchServlet AP.&lt;/p&gt;
&lt;p&gt;The solution is as simple as it seems : put the &lt;code&gt;global-method-security&lt;/code&gt; tag in the DispatchServlet AP.&lt;/p&gt;
&lt;p&gt;But if like me you have a Spring AP config file dedicated to Spring Security configuration, it will be part of the application's AP. And you will be sad to have to put just that one tag in another config file.&lt;/p&gt;
&lt;p&gt;I found out I couldn't make the Spring Security config part of the DispatchServlet's AP.
The DispatchServlet AP's would fail to start because no FilterChain bean existed when instanciating the &lt;code&gt;org.springframework.web.filter.DelegatingFilterProxy&lt;/code&gt; declared in the web.xml.&lt;/p&gt;
&lt;p&gt;So I put the &lt;code&gt;global-method-security&lt;/code&gt; tag in the DispatcherServlet AP and was off to meet to the next problems :)&lt;/p&gt;
&lt;h2 id="having-classes-annoted-with-controller"&gt;Having classes annoted with @Controller&lt;a class="headerlink" href="#having-classes-annoted-with-controller" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;To implement Method Security, Spring Security uses Spring AOP to create proxies of the annoted controllers. Proxies implements the security checks and it they are ok, call the user's class.
By default, Spring will use JDK dynamic proxies to create a proxy object with the same methods as your class but which will not be an instance of your class.&lt;/p&gt;
&lt;p&gt;This will more often that not cause errors at some point. The one I encountered is the following one where Spring MVC can not invoke the handler method :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;object&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;an&lt;span class="w"&gt; &lt;/span&gt;instance&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;declaring&lt;span class="w"&gt; &lt;/span&gt;class
sun.reflect.NativeMethodAccessorImpl.invoke0&lt;span class="o"&gt;(&lt;/span&gt;Native&lt;span class="w"&gt; &lt;/span&gt;Method&lt;span class="o"&gt;)&lt;/span&gt;
sun.reflect.NativeMethodAccessorImpl.invoke&lt;span class="o"&gt;(&lt;/span&gt;NativeMethodAccessorImpl.java:57&lt;span class="o"&gt;)&lt;/span&gt;
sun.reflect.DelegatingMethodAccessorImpl.invoke&lt;span class="o"&gt;(&lt;/span&gt;DelegatingMethodAccessorImpl.java:43&lt;span class="o"&gt;)&lt;/span&gt;
java.lang.reflect.Method.invoke&lt;span class="o"&gt;(&lt;/span&gt;Method.java:606&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.method.support.InvocableHandlerMethod.invoke&lt;span class="o"&gt;(&lt;/span&gt;InvocableHandlerMethod.java:219&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest&lt;span class="o"&gt;(&lt;/span&gt;InvocableHandlerMethod.java:132&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle&lt;span class="o"&gt;(&lt;/span&gt;ServletInvocableHandlerMethod.java:104&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandleMethod&lt;span class="o"&gt;(&lt;/span&gt;RequestMappingHandlerAdapter.java:745&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal&lt;span class="o"&gt;(&lt;/span&gt;RequestMappingHandlerAdapter.java:686&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle&lt;span class="o"&gt;(&lt;/span&gt;AbstractHandlerMethodAdapter.java:80&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.DispatcherServlet.doDispatch&lt;span class="o"&gt;(&lt;/span&gt;DispatcherServlet.java:925&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.DispatcherServlet.doService&lt;span class="o"&gt;(&lt;/span&gt;DispatcherServlet.java:856&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.FrameworkServlet.processRequest&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:936&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.FrameworkServlet.doGet&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:827&lt;span class="o"&gt;)&lt;/span&gt;
javax.servlet.http.HttpServlet.service&lt;span class="o"&gt;(&lt;/span&gt;HttpServlet.java:621&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.servlet.FrameworkServlet.service&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:812&lt;span class="o"&gt;)&lt;/span&gt;
javax.servlet.http.HttpServlet.service&lt;span class="o"&gt;(&lt;/span&gt;HttpServlet.java:728&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal&lt;span class="o"&gt;(&lt;/span&gt;CharacterEncodingFilter.java:88&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.filter.OncePerRequestFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;OncePerRequestFilter.java:107&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:330&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke&lt;span class="o"&gt;(&lt;/span&gt;FilterSecurityInterceptor.java:118&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterSecurityInterceptor.java:84&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:342&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.access.ExceptionTranslationFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;ExceptionTranslationFilter.java:113&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:342&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;SecurityContextHolderAwareRequestFilter.java:54&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:342&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;AbstractAuthenticationProcessingFilter.java:183&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:342&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.authentication.logout.LogoutFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;LogoutFilter.java:105&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:342&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;SecurityContextPersistenceFilter.java:87&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy&lt;span class="nv"&gt;$VirtualFilterChain&lt;/span&gt;.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:342&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy.doFilterInternal&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:192&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.security.web.FilterChainProxy.doFilter&lt;span class="o"&gt;(&lt;/span&gt;FilterChainProxy.java:160&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate&lt;span class="o"&gt;(&lt;/span&gt;DelegatingFilterProxy.java:343&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.filter.DelegatingFilterProxy.doFilter&lt;span class="o"&gt;(&lt;/span&gt;DelegatingFilterProxy.java:260&lt;span class="o"&gt;)&lt;/span&gt;
org.springframework.web.filter.OncePerRequestFilter.doFilter&lt;span class="o"&gt;(&lt;/span&gt;OncePerRequestFilter.java:107&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What happens under the hood it that Spring MVC tries and fails to invoke the method annoted with &lt;code&gt;@RequestMapping&lt;/code&gt; via refection. The &lt;code&gt;Method&lt;/code&gt; instance it created when parsing controllers is based on the type of the concrete class of our controller.
As the JDK proxy object is &lt;strong&gt;not&lt;/strong&gt; an instance of the Controller class, we get a &lt;code&gt;IllegalArgumentException&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A fast and efficient workaround this is to make Spring AOP create another type of proxy by adding &lt;code&gt;proxy-target-class="true"&lt;/code&gt; to the &lt;code&gt;global-method-security&lt;/code&gt; tag.
This will tell Spring to use CGLIB-based subclass proxies instead of JDK dynamic proxies. Such proxies are actual instances of the proxied classes. That fixes our problem.&lt;/p&gt;
&lt;h2 id="having-controller-classes-without-default-constructor"&gt;Having controller classes without default constructor&lt;a class="headerlink" href="#having-controller-classes-without-default-constructor" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Happiness won't last though, if you have controllers which does not declare a default constructor. &lt;/p&gt;
&lt;p&gt;If like me you favour constructor injection over property injection then your controller classes do not define a default constructor (well, they could, but not mine).
So you're in for more trouble because CGLIB-based proxies require a default constructor to be created (see &lt;a href="http://docs.spring.io/spring/docs/3.1.x/spring-framework-reference/html/aop.html#aop-proxying"&gt;http://docs.spring.io/spring/docs/3.1.x/spring-framework-reference/html/aop.html#aop-proxying&lt;/a&gt; for details).&lt;/p&gt;
&lt;p&gt;The DispatchServlet AP fails to start with an error such as the following :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;org.springframework.beans.factory.BeanCreationException:&lt;span class="w"&gt; &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;creating&lt;span class="w"&gt; &lt;/span&gt;bean&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'managerController'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;defined&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;********************************/ManagerController.class&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Initialization&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;bean&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nested&lt;span class="w"&gt; &lt;/span&gt;exception&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.AopConfigException:&lt;span class="w"&gt; &lt;/span&gt;Could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;generate&lt;span class="w"&gt; &lt;/span&gt;CGLIB&lt;span class="w"&gt; &lt;/span&gt;subclass&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;**********************.ManagerController&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Common&lt;span class="w"&gt; &lt;/span&gt;causes&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;problem&lt;span class="w"&gt; &lt;/span&gt;include&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;final&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;non-visible&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nested&lt;span class="w"&gt; &lt;/span&gt;exception&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;Superclass&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="w"&gt; &lt;/span&gt;constructors&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;arguments&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;given
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:529&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:458&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractBeanFactory&lt;span class="nv"&gt;$1&lt;/span&gt;.getObject&lt;span class="o"&gt;(&lt;/span&gt;AbstractBeanFactory.java:295&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton&lt;span class="o"&gt;(&lt;/span&gt;DefaultSingletonBeanRegistry.java:223&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractBeanFactory.java:292&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractBeanFactory.java:194&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons&lt;span class="o"&gt;(&lt;/span&gt;DefaultListableBeanFactory.java:628&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization&lt;span class="o"&gt;(&lt;/span&gt;AbstractApplicationContext.java:932&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.context.support.AbstractApplicationContext.refresh&lt;span class="o"&gt;(&lt;/span&gt;AbstractApplicationContext.java:479&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:651&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:599&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:665&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:518&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;**********************.initWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;**********:**&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.initServletBean&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:459&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.HttpServletBean.init&lt;span class="o"&gt;(&lt;/span&gt;HttpServletBean.java:136&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;javax.servlet.GenericServlet.init&lt;span class="o"&gt;(&lt;/span&gt;GenericServlet.java:160&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardWrapper.initServlet&lt;span class="o"&gt;(&lt;/span&gt;StandardWrapper.java:1280&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardWrapper.loadServlet&lt;span class="o"&gt;(&lt;/span&gt;StandardWrapper.java:1193&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardWrapper.load&lt;span class="o"&gt;(&lt;/span&gt;StandardWrapper.java:1088&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardContext.loadOnStartup&lt;span class="o"&gt;(&lt;/span&gt;StandardContext.java:5033&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardContext.startInternal&lt;span class="o"&gt;(&lt;/span&gt;StandardContext.java:5317&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.util.LifecycleBase.start&lt;span class="o"&gt;(&lt;/span&gt;LifecycleBase.java:150&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.ContainerBase&lt;span class="nv"&gt;$StartChild&lt;/span&gt;.call&lt;span class="o"&gt;(&lt;/span&gt;ContainerBase.java:1559&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.ContainerBase&lt;span class="nv"&gt;$StartChild&lt;/span&gt;.call&lt;span class="o"&gt;(&lt;/span&gt;ContainerBase.java:1549&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.util.concurrent.FutureTask.run&lt;span class="o"&gt;(&lt;/span&gt;FutureTask.java:262&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.util.concurrent.ThreadPoolExecutor.runWorker&lt;span class="o"&gt;(&lt;/span&gt;ThreadPoolExecutor.java:1145&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.util.concurrent.ThreadPoolExecutor&lt;span class="nv"&gt;$Worker&lt;/span&gt;.run&lt;span class="o"&gt;(&lt;/span&gt;ThreadPoolExecutor.java:615&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.lang.Thread.run&lt;span class="o"&gt;(&lt;/span&gt;Thread.java:744&lt;span class="o"&gt;)&lt;/span&gt;
Caused&lt;span class="w"&gt; &lt;/span&gt;by:&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.AopConfigException:&lt;span class="w"&gt; &lt;/span&gt;Could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;generate&lt;span class="w"&gt; &lt;/span&gt;CGLIB&lt;span class="w"&gt; &lt;/span&gt;subclass&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;****************.ManagerController&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Common&lt;span class="w"&gt; &lt;/span&gt;causes&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;problem&lt;span class="w"&gt; &lt;/span&gt;include&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;final&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;non-visible&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nested&lt;span class="w"&gt; &lt;/span&gt;exception&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;Superclass&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="w"&gt; &lt;/span&gt;constructors&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;arguments&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;given
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.CglibAopProxy.getProxy&lt;span class="o"&gt;(&lt;/span&gt;CglibAopProxy.java:217&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.ProxyFactory.getProxy&lt;span class="o"&gt;(&lt;/span&gt;ProxyFactory.java:111&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutoProxyCreator.java:477&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutoProxyCreator.java:362&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutoProxyCreator.java:322&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:409&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:1488&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:521&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;...&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;common&lt;span class="w"&gt; &lt;/span&gt;frames&lt;span class="w"&gt; &lt;/span&gt;omitted
Caused&lt;span class="w"&gt; &lt;/span&gt;by:&lt;span class="w"&gt; &lt;/span&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;Superclass&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="w"&gt; &lt;/span&gt;constructors&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;arguments&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;given
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.emitConstructors&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:721&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.generateClass&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:499&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.transform.TransformingClassGenerator.generateClass&lt;span class="o"&gt;(&lt;/span&gt;TransformingClassGenerator.java:33&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.core.DefaultGeneratorStrategy.generate&lt;span class="o"&gt;(&lt;/span&gt;DefaultGeneratorStrategy.java:25&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.core.AbstractClassGenerator.create&lt;span class="o"&gt;(&lt;/span&gt;AbstractClassGenerator.java:216&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.createHelper&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:377&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.create&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:285&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.CglibAopProxy.getProxy&lt;span class="o"&gt;(&lt;/span&gt;CglibAopProxy.java:205&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;...&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;common&lt;span class="w"&gt; &lt;/span&gt;frames&lt;span class="w"&gt; &lt;/span&gt;omitted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To fix this error, just add a default constructor to your bean :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Controller&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManagerController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SomeService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// default constructor for CGLIB proxying&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// default constructor is called first and then public constructor is called with autowired dependencies&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="c1"&gt;// required to use the @Secured annotation on methods of this class&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ManagerController&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Autowired&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ManagerController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SomeService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;someService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/all"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Secured&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ROLE_VIEW_MANAGERS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"viewname"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="using-a-private-default-constructor"&gt;Using a private default constructor&lt;a class="headerlink" href="#using-a-private-default-constructor" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;With Spring 3.2.4, the default constructor used by CGLIB-based proxies does not need to be public, so we can use a private constructor. This will avoid poluting the exposed methods of your class, but it is not very elegant nor practical. 
In fact, it is very annoying to have to add private default constructor to every Controller class that will use the &lt;code&gt;@Secured&lt;/code&gt; annotation and a non-default constructor.&lt;/p&gt;
&lt;p&gt;With Spring 3.2.8, this is not possible anyway. The default constructor has to be public otherwise proxy creation fails with the following error:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;org.springframework.beans.factory.BeanCreationException:&lt;span class="w"&gt; &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;creating&lt;span class="w"&gt; &lt;/span&gt;bean&lt;span class="w"&gt; &lt;/span&gt;with&lt;span class="w"&gt; &lt;/span&gt;name&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s1"&gt;'managerController'&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;defined&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;in&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;file&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;****************************************/ManagerController.class&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Initialization&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;bean&lt;span class="w"&gt; &lt;/span&gt;failed&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nested&lt;span class="w"&gt; &lt;/span&gt;exception&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.AopConfigException:&lt;span class="w"&gt; &lt;/span&gt;Could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;generate&lt;span class="w"&gt; &lt;/span&gt;CGLIB&lt;span class="w"&gt; &lt;/span&gt;subclass&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;**********************.ManagerController&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Common&lt;span class="w"&gt; &lt;/span&gt;causes&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;problem&lt;span class="w"&gt; &lt;/span&gt;include&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;final&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;non-visible&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nested&lt;span class="w"&gt; &lt;/span&gt;exception&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;Superclass&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="w"&gt; &lt;/span&gt;constructors&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;arguments&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;given
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:529&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:458&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractBeanFactory&lt;span class="nv"&gt;$1&lt;/span&gt;.getObject&lt;span class="o"&gt;(&lt;/span&gt;AbstractBeanFactory.java:296&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton&lt;span class="o"&gt;(&lt;/span&gt;DefaultSingletonBeanRegistry.java:223&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractBeanFactory.java:293&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractBeanFactory.getBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractBeanFactory.java:194&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons&lt;span class="o"&gt;(&lt;/span&gt;DefaultListableBeanFactory.java:628&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization&lt;span class="o"&gt;(&lt;/span&gt;AbstractApplicationContext.java:932&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.context.support.AbstractApplicationContext.refresh&lt;span class="o"&gt;(&lt;/span&gt;AbstractApplicationContext.java:479&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.configureAndRefreshWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:651&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:602&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.createWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:665&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.initWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:521&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;**********************.initWebApplicationContext&lt;span class="o"&gt;(&lt;/span&gt;**************:**&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.FrameworkServlet.initServletBean&lt;span class="o"&gt;(&lt;/span&gt;FrameworkServlet.java:462&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.web.servlet.HttpServletBean.init&lt;span class="o"&gt;(&lt;/span&gt;HttpServletBean.java:136&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;javax.servlet.GenericServlet.init&lt;span class="o"&gt;(&lt;/span&gt;GenericServlet.java:160&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardWrapper.initServlet&lt;span class="o"&gt;(&lt;/span&gt;StandardWrapper.java:1280&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardWrapper.loadServlet&lt;span class="o"&gt;(&lt;/span&gt;StandardWrapper.java:1193&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardWrapper.load&lt;span class="o"&gt;(&lt;/span&gt;StandardWrapper.java:1088&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardContext.loadOnStartup&lt;span class="o"&gt;(&lt;/span&gt;StandardContext.java:5033&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.StandardContext.startInternal&lt;span class="o"&gt;(&lt;/span&gt;StandardContext.java:5317&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.util.LifecycleBase.start&lt;span class="o"&gt;(&lt;/span&gt;LifecycleBase.java:150&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.ContainerBase&lt;span class="nv"&gt;$StartChild&lt;/span&gt;.call&lt;span class="o"&gt;(&lt;/span&gt;ContainerBase.java:1559&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.apache.catalina.core.ContainerBase&lt;span class="nv"&gt;$StartChild&lt;/span&gt;.call&lt;span class="o"&gt;(&lt;/span&gt;ContainerBase.java:1549&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.util.concurrent.FutureTask.run&lt;span class="o"&gt;(&lt;/span&gt;FutureTask.java:262&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.util.concurrent.ThreadPoolExecutor.runWorker&lt;span class="o"&gt;(&lt;/span&gt;ThreadPoolExecutor.java:1145&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.util.concurrent.ThreadPoolExecutor&lt;span class="nv"&gt;$Worker&lt;/span&gt;.run&lt;span class="o"&gt;(&lt;/span&gt;ThreadPoolExecutor.java:615&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;java.lang.Thread.run&lt;span class="o"&gt;(&lt;/span&gt;Thread.java:744&lt;span class="o"&gt;)&lt;/span&gt;
Caused&lt;span class="w"&gt; &lt;/span&gt;by:&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.AopConfigException:&lt;span class="w"&gt; &lt;/span&gt;Could&lt;span class="w"&gt; &lt;/span&gt;not&lt;span class="w"&gt; &lt;/span&gt;generate&lt;span class="w"&gt; &lt;/span&gt;CGLIB&lt;span class="w"&gt; &lt;/span&gt;subclass&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;******************.ManagerController&lt;span class="o"&gt;]&lt;/span&gt;:&lt;span class="w"&gt; &lt;/span&gt;Common&lt;span class="w"&gt; &lt;/span&gt;causes&lt;span class="w"&gt; &lt;/span&gt;of&lt;span class="w"&gt; &lt;/span&gt;this&lt;span class="w"&gt; &lt;/span&gt;problem&lt;span class="w"&gt; &lt;/span&gt;include&lt;span class="w"&gt; &lt;/span&gt;using&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;final&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="w"&gt; &lt;/span&gt;or&lt;span class="w"&gt; &lt;/span&gt;a&lt;span class="w"&gt; &lt;/span&gt;non-visible&lt;span class="w"&gt; &lt;/span&gt;class&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;nested&lt;span class="w"&gt; &lt;/span&gt;exception&lt;span class="w"&gt; &lt;/span&gt;is&lt;span class="w"&gt; &lt;/span&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;Superclass&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="w"&gt; &lt;/span&gt;constructors&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;arguments&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;given
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.CglibAopProxy.getProxy&lt;span class="o"&gt;(&lt;/span&gt;CglibAopProxy.java:218&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.ProxyFactory.getProxy&lt;span class="o"&gt;(&lt;/span&gt;ProxyFactory.java:111&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.createProxy&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutoProxyCreator.java:477&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutoProxyCreator.java:362&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutoProxyCreator.java:322&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:409&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:1518&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean&lt;span class="o"&gt;(&lt;/span&gt;AbstractAutowireCapableBeanFactory.java:521&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;...&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;28&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;common&lt;span class="w"&gt; &lt;/span&gt;frames&lt;span class="w"&gt; &lt;/span&gt;omitted
Caused&lt;span class="w"&gt; &lt;/span&gt;by:&lt;span class="w"&gt; &lt;/span&gt;java.lang.IllegalArgumentException:&lt;span class="w"&gt; &lt;/span&gt;Superclass&lt;span class="w"&gt; &lt;/span&gt;has&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;null&lt;span class="w"&gt; &lt;/span&gt;constructors&lt;span class="w"&gt; &lt;/span&gt;but&lt;span class="w"&gt; &lt;/span&gt;no&lt;span class="w"&gt; &lt;/span&gt;arguments&lt;span class="w"&gt; &lt;/span&gt;were&lt;span class="w"&gt; &lt;/span&gt;given
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.emitConstructors&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:721&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.generateClass&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:499&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.transform.TransformingClassGenerator.generateClass&lt;span class="o"&gt;(&lt;/span&gt;TransformingClassGenerator.java:33&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.core.DefaultGeneratorStrategy.generate&lt;span class="o"&gt;(&lt;/span&gt;DefaultGeneratorStrategy.java:25&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.core.AbstractClassGenerator.create&lt;span class="o"&gt;(&lt;/span&gt;AbstractClassGenerator.java:216&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.createHelper&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:377&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.cglib.proxy.Enhancer.create&lt;span class="o"&gt;(&lt;/span&gt;Enhancer.java:285&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;at&lt;span class="w"&gt; &lt;/span&gt;org.springframework.aop.framework.CglibAopProxy.getProxy&lt;span class="o"&gt;(&lt;/span&gt;CglibAopProxy.java:206&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;...&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;35&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;common&lt;span class="w"&gt; &lt;/span&gt;frames&lt;span class="w"&gt; &lt;/span&gt;omitted
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="using-controller-interfaces"&gt;Using Controller interfaces&lt;a class="headerlink" href="#using-controller-interfaces" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Theoretically, a way around the ugly default constructor is to add Spring MVC and Security annotations on an interface instead of a concrete class.&lt;/p&gt;
&lt;p&gt;This way, we do not need to use CGLIB-based proxies and can stick to JDK proxies.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Controller&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;ManagerController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@RequestMapping&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"/all"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Secured&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"ROLE_VIEW_MANAGERS"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Component&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;ManagerControllerImpl&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ManagerController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SomeService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Autowired&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ManagerController&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SomeService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someService&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;someService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;someService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;list&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;"viewname"&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Please note that the &lt;code&gt;@Controller&lt;/code&gt; annotation has been moved to the interface as well as &lt;code&gt;@RequestMapping&lt;/code&gt; and &lt;code&gt;@Control&lt;/code&gt; annotations.
Unfortunatly, &lt;strong&gt;this doesn't work with Spring MVC&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In this case as well in the one where we started struggling with Spring-AOP in the first place, we get the &lt;code&gt;object is not an instance of declaring class&lt;/code&gt; exception from the &lt;code&gt;Having classes annoted with @Controller&lt;/code&gt; part.&lt;/p&gt;
&lt;p&gt;I'm wonder if this is a bug or at least if it could be improved...&lt;/p&gt;
&lt;h1 id="conclusion"&gt;Conclusion&lt;a class="headerlink" href="#conclusion" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;For the time beeing I will stick to the CGLIB-enabled proxies with the default controller solution.&lt;/p&gt;
&lt;p&gt;But I will try and see later if AspectJ couldn't be used to weave beans at compile time and remove the use of proxy completly.&lt;/p&gt;
&lt;h1 id="some-references"&gt;Some references&lt;a class="headerlink" href="#some-references" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;While working and googling on this issue, I found this interrested comment on Stackoverflow which discusses the reasons to use Spring-AOP with controller when many ways to implements cross cutting concerns exist:
&lt;a href="http://stackoverflow.com/a/12045331"&gt;http://stackoverflow.com/a/12045331&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I wrote an article on using one of theses other way in &lt;a href=""&gt;TODO article on generatic pagination solution with Spring MVC&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Also, on the subject of comparing JDK proxies and CGLIB-based proxies, this article points that @Transaction annotation does not work with JDK proxies:
&lt;a href="http://kim.saabye-pedersen.org/2013/05/spring-annotation-on-interface-or-class.html"&gt;Spring annotation on interface or class implementing the interface??&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;References in Spring documentation &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;to the Spring-AOP vs Controller in the information note &lt;code&gt;Using @RequestMapping On Interface Methods&lt;/code&gt; &lt;a href="http://docs.spring.io/spring/docs/3.1.x/spring-framework-reference/html/mvc.html#mvc-ann-requestmapping"&gt;here&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;to enable Method Security &lt;a href="http://docs.spring.io/spring-security/site/docs/3.1.x/reference/el-access.html#d0e5600"&gt;http://docs.spring.io/spring-security/site/docs/3.1.x/reference/el-access.html#d0e5600&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Various articles on the use of &lt;code&gt;proxy-target-class="true"&lt;/code&gt; on the &lt;code&gt;global-method-security&lt;/code&gt; tag:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/10726478/spring-securitymvc-annotations-illegal-argument-exception"&gt;http://stackoverflow.com/questions/10726478/spring-securitymvc-annotations-illegal-argument-exception&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://stackoverflow.com/questions/18663475/spring-security-global-method-security-does-not-work"&gt;http://stackoverflow.com/questions/18663475/spring-security-global-method-security-does-not-work&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;This discusses how to work around proxies completly by using AspectJ weaving at compile time&lt;/li&gt;
&lt;li&gt;This is mandatory when using controller not managed as Spring beans and could be a workaround the ugly default constructor discussed above&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Article on the importance of the position of the &lt;code&gt;global-method-security&lt;/code&gt; tag in your Spring Config :
&lt;a href="http://stackoverflow.com/questions/517527/spring-not-enforcing-method-security-annotations"&gt;http://stackoverflow.com/questions/517527/spring-not-enforcing-method-security-annotations&lt;/a&gt;&lt;/p&gt;</content><category term="articles"></category><category term="Spring"></category><category term="AOP"></category></entry><entry><title>Using enum instead of String to resolve views in Spring MVC</title><link href="https://www.javatronic.fr/posts/2014/03/02/using-enum-instead-of-string-to-resolve-views-in-spring-mvc/" rel="alternate"></link><published>2014-03-02T00:00:00+01:00</published><updated>2014-03-02T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-03-02:/posts/2014/03/02/using-enum-instead-of-string-to-resolve-views-in-spring-mvc/</id><summary type="html">&lt;p&gt;The project I'm currently working on uses Spring MVC. This framework is nice, mature and efficient.&lt;/p&gt;
&lt;p&gt;But we are using &lt;code&gt;String&lt;/code&gt; as return type of our &lt;code&gt;@RequestMapping&lt;/code&gt; methods (as most people probably do) and I don't like that very much.&lt;/p&gt;
&lt;p&gt;I want to use and enum instead. I want &lt;code&gt;@RequestMapping …&lt;/code&gt;&lt;/p&gt;</summary><content type="html">&lt;p&gt;The project I'm currently working on uses Spring MVC. This framework is nice, mature and efficient.&lt;/p&gt;
&lt;p&gt;But we are using &lt;code&gt;String&lt;/code&gt; as return type of our &lt;code&gt;@RequestMapping&lt;/code&gt; methods (as most people probably do) and I don't like that very much.&lt;/p&gt;
&lt;p&gt;I want to use and enum instead. I want &lt;code&gt;@RequestMapping&lt;/code&gt; methods to return a enum constant which will be automatically resolved to a view the same way a &lt;code&gt;String&lt;/code&gt; is resolved to a view.&lt;/p&gt;

&lt;h1 id="using-an-enum-is-good"&gt;Using an enum is good&lt;a class="headerlink" href="#using-an-enum-is-good" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Using &lt;code&gt;String&lt;/code&gt; as return value of controller methods to represent view name is bad:
* bad for maintenance
* bad for refactoring
* obviously not type-safe
* adds magic numbers to your code&lt;/p&gt;
&lt;p&gt;Using an enum has many positive side effects :
* view names are all in the same place
* if it easy to tell which view is used or not with any IDE
* refactoring is much easier &lt;/p&gt;
&lt;h1 id="how-to-add-support-for-an-enum-return-type-in-spring-mvc"&gt;How to add support for an enum return type in Spring MVC&lt;a class="headerlink" href="#how-to-add-support-for-an-enum-return-type-in-spring-mvc" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="create-a-enum-with-a-string-property"&gt;create a enum with a String property&lt;a class="headerlink" href="#create-a-enum-with-a-string-property" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The string property will hold the String value &lt;code&gt;@RequestMapping&lt;/code&gt; methods used to return.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;enum&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyView&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;HOME&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"home"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;LOGIN&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"login"&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;CUSTOMER_LIST&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"customer/list"&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;logicalViewName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;ExtranetView&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;logicalViewName&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;logicalViewName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Preconditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;checkNotNull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;logicalViewName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getLogicalViewName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;logicalViewName&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="create-a-handlermethodreturnvaluehandler"&gt;create a &lt;code&gt;HandlerMethodReturnValueHandler&lt;/code&gt;&lt;a class="headerlink" href="#create-a-handlermethodreturnvaluehandler" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;If we make our &lt;code&gt;@RequestMapping&lt;/code&gt; methods return a value of &lt;code&gt;MyView&lt;/code&gt; and run our website, Spring will simply add the value to the model and won't resolve a view and fail.&lt;/p&gt;
&lt;p&gt;To fix, that, we need to provide with an extra &lt;code&gt;HandlerMethodReturnValueHandler&lt;/code&gt; which will "convert" our enum to its String property.
To be more accurate, we need to set the &lt;code&gt;viewName&lt;/code&gt; in the &lt;code&gt;ModelAndViewContainer&lt;/code&gt; of the current request.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyViewEnumModelAndViewResolver&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;HandlerMethodReturnValueHandler&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;supportsReturnType&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;MethodParameter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;returnType&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyView&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;class&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;isAssignableFrom&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;returnType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getParameterType&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;handleReturnValue&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MethodParameter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;returnType&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ModelAndViewContainer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mavContainer&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;NativeWebRequest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;webRequest&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;returnValue&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;==&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;returnValue&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;instanceof&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyView&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;viewName&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="n"&gt;MyView&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;returnValue&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="na"&gt;getLogicalViewName&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="n"&gt;mavContainer&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setViewName&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;viewName&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;else&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="c1"&gt;// should not happen&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;throw&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;UnsupportedOperationException&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;"Unexpected return type: "&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="n"&gt;returnType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getParameterType&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getName&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;" in method: "&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;returnType&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMethod&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(inspiration: Spring's &lt;code&gt;org.springframework.web.servlet.mvc.method.annotation.ViewNameMethodReturnValueHandler&lt;/code&gt; class)&lt;/p&gt;
&lt;h2 id="add-our-handlermethodreturnvaluehandler-to-the-spring-mvcs-servlet-context"&gt;add our &lt;code&gt;HandlerMethodReturnValueHandler&lt;/code&gt; to the Spring MVC's servlet context&lt;a class="headerlink" href="#add-our-handlermethodreturnvaluehandler-to-the-spring-mvcs-servlet-context" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;After some investigation on the web, I found that the easiest way of adding an extra &lt;code&gt;HandlerMethodReturnValueHandler&lt;/code&gt; to the Spring MVC servlet context is to use programmatic configuration.&lt;/p&gt;
&lt;p&gt;I found a like to this bug report &lt;a href="https://jira.springsource.org/browse/SPR-8648"&gt;https://jira.springsource.org/browse/SPR-8648&lt;/a&gt; which has a useful comment pointing to the source code of Spring's Greenhouse Reference Application.&lt;/p&gt;
&lt;p&gt;Since I already had some XML-based configuration in place, I created a Configuration class which referes to my XML config and therefor is pretty simple :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nd"&gt;@Configuration&lt;/span&gt;
&lt;span class="nd"&gt;@EnableWebMvc&lt;/span&gt;
&lt;span class="nd"&gt;@ImportResource&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="s"&gt;"classpath:/META-INF/spring/my-dispatcher-servlet.xml"&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="p"&gt;})&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyMvcConfig&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;extends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;WebMvcConfigurerAdapter&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;addReturnValueHandlers&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;HandlerMethodReturnValueHandler&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;returnValueHandlers&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;returnValueHandlers&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;add&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyViewEnumModelAndViewResolver&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;What's important here :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@Configuration&lt;/code&gt; annotation is obviously mandatory&lt;/li&gt;
&lt;li&gt;&lt;code&gt;@EnableWebMVC&lt;/code&gt; annotation is also required so that the &lt;code&gt;WebMvcConfigurerAdapter&lt;/code&gt; interface we extends is taken into account&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;WebMvcConfigurerAdapter&lt;/code&gt; provides empty implementations of the &lt;code&gt;WebMvcConfigurer&lt;/code&gt; interface methods&lt;/li&gt;
&lt;li&gt;we can then override only those we need, in our case : &lt;code&gt;addReturnValueHandlers&lt;/code&gt; &lt;/li&gt;
&lt;li&gt;the &lt;code&gt;@ImportResource&lt;/code&gt; is here to load our legacy XML configuration&lt;/li&gt;
&lt;li&gt;existing XML configuration should be usable as is with one very important retriction :&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;&amp;lt;annotation-driven/&amp;gt;&lt;/code&gt; tag of the MVC XML namespace should be remove as the &lt;code&gt;@EnableWebMVC&lt;/code&gt; annotation is its exact programmatic equivalent.
  Not doing so will most likely make Spring fail to load your context, but the error you would get will moke likely not obviously point to the &lt;code&gt;&amp;lt;annotation-driven/&amp;gt;&lt;/code&gt; tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="conclusion"&gt;Conclusion&lt;a class="headerlink" href="#conclusion" title="Permanent link"&gt;¶&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This solution is working like a charm and I like it very much. Spring easy extensibility was a real pleasure to discover.&lt;/p&gt;
&lt;p&gt;I wonder if this solution could be made generic and bundle into Spring MVC...&lt;/p&gt;</content><category term="articles"></category><category term="Spring"></category></entry><entry><title>A SMTP server in Java for unit test</title><link href="https://www.javatronic.fr/posts/2014/02/15/a-smtp-server-in-java-for-unit-test/" rel="alternate"></link><published>2014-02-15T00:00:00+01:00</published><updated>2014-02-15T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-02-15:/posts/2014/02/15/a-smtp-server-in-java-for-unit-test/</id><summary type="html">&lt;p&gt;If you ever had to write code that uses JavaMail to send emails, then you necessarily looked for a way of testing that code at some point.
If you didn't, its bad. Otherwise, you have been looking for a pure-Java implementation of a SMTP server.&lt;/p&gt;
&lt;p&gt;I did and ended using …&lt;/p&gt;</summary><content type="html">&lt;p&gt;If you ever had to write code that uses JavaMail to send emails, then you necessarily looked for a way of testing that code at some point.
If you didn't, its bad. Otherwise, you have been looking for a pure-Java implementation of a SMTP server.&lt;/p&gt;
&lt;p&gt;I did and ended using &lt;code&gt;Wiser&lt;/code&gt; and integrate it with &lt;code&gt;JUnit&lt;/code&gt; by creating a custome &lt;code&gt;Rule&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The subject is old and googling will return several framework names accross multiple blog posts, forum questions, ... I recently add to do that research and here are my conclusions.&lt;/p&gt;
&lt;h1 id="several-products-available"&gt;Several products available&lt;a class="headerlink" href="#several-products-available" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;A little research on the web and you find name such as &lt;a href="http://quintanasoft.com/dumbster/"&gt;dumbster&lt;/a&gt;, &lt;a href="http://www.icegreen.com/greenmail/"&gt;GreenMail&lt;/a&gt; or &lt;a href="http://code.google.com/p/subethasmtp/wiki/Wiser"&gt;wiser&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Comparing the frameworks has already been done, so I will just link to this &lt;a href="http://eokyere.blogspot.fr/2006/10/get-wiser-with-subethasmtp.html"&gt;article&lt;/a&gt; and add my personnal points :
* Wiser is latest and most recently player in the area
* Wiser is meant for unit testing and is therefor fast and easy to use
* Greenmail has thread-safety issues in its 1.3 version and has a buggy way of handling senders/cc/bcc in its latest version (1.3.1b)
* Greenmail doesn't seem to be maintained since 2009
* Wiser doesn't seem to be maintained since 2012&lt;/p&gt;
&lt;h1 id="how-to-use-wiser"&gt;How to use Wiser&lt;a class="headerlink" href="#how-to-use-wiser" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Add subethasmtp maven dependency to your project :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nt"&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.subethamail&lt;span class="nt"&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;subethasmtp&lt;span class="nt"&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;version&amp;gt;&lt;/span&gt;3.1.7&lt;span class="nt"&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nt"&gt;&amp;lt;scope&amp;gt;&lt;/span&gt;test&lt;span class="nt"&gt;&amp;lt;/scope&amp;gt;&lt;/span&gt;
&lt;span class="nt"&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To Start the Wiser SMTP Server, just create a new instance, setup port and hostname, and start it :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Wiser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Wiser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;25&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setHostname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;localhost&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can then use JavaMail to send mail to the port and hostname you specified and then test received messages as follow :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;hasSize&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="n"&gt;MimeMessage&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;iterator&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;next&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;getMimeMessage&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="n"&gt;assertThat&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getSubject&lt;/span&gt;&lt;span class="p"&gt;()).&lt;/span&gt;&lt;span class="na"&gt;isEqualTo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;Here is a sample subject !&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="p"&gt;...&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="integrating-wiser-with-junit"&gt;Integrating Wiser with JUnit&lt;a class="headerlink" href="#integrating-wiser-with-junit" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;I found very convenient when integrating Wiser into JUnit tests to use a Rule.
And also, when writing unit test, one has to been carreful about the port then want to use. It must either be unique to the maven module (assuming tests are not run in parallel) or unique to the test.
Either way, assuming it is known to the unit test, I came up with the following implementation :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.test.rule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;com.google.common.base.Preconditions&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.rules.ExternalResource&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.rules.TestRule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.subethamail.smtp.TooMuchDataException&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.subethamail.smtp.server.SMTPServer&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.subethamail.wiser.Wiser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.subethamail.wiser.WiserMessage&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;javax.annotation.Nonnull&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;javax.mail.MessagingException&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.io.IOException&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.io.InputStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.io.PrintStream&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;java.util.List&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;


&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * SmtpServerRule - a TestRule wrapping a Wiser instance (a SMTP server in Java) started and stoped right before and after each test.&lt;/span&gt;
&lt;span class="cm"&gt; * &amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="cm"&gt; * SmtpServerRule exposes the same methods as the {@link Wiser} instance by delegating the implementation to the instance. These methods, however, can not be&lt;/span&gt;
&lt;span class="cm"&gt; * used outside a JUnit statement (otherwise a {@link IllegalStateException} is raised).&lt;/span&gt;
&lt;span class="cm"&gt; * &amp;lt;br/&amp;gt;&lt;/span&gt;
&lt;span class="cm"&gt; * The {@link Wiser} instance can be directly retrieved but also only from inside a JUnit statement.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * @author Sébastien Lesaint&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;SmtpServerRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;extends&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;ExternalResource&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TestRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;final&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Wiser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;SmtpServerRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Preconditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;checkNotNull&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;protected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;before&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Throwable&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Wiser&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setPort&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getPort&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;setHostname&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getHostname&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;start&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;protected&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;after&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;stop&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * @return the inner {@link Wiser} instance&lt;/span&gt;
&lt;span class="cm"&gt;   * @throws IllegalStateException is method is not called from a JUnit statement&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Wiser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getWiser&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;getWiser()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * @return a {@link List} of {@link WiserMessage}&lt;/span&gt;
&lt;span class="cm"&gt;   * @throws IllegalStateException is method is not called from a JUnit statement&lt;/span&gt;
&lt;span class="cm"&gt;   * @see {@link Wiser#getMessages()}&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;List&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;WiserMessage&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;getWiser()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getMessages&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * @throws IllegalStateException is method is not called from a JUnit statement&lt;/span&gt;
&lt;span class="cm"&gt;   * @see {@link Wiser#getServer()}&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;SMTPServer&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getServer&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;getServer()&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;getServer&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * @throws IllegalStateException is method is not called from a JUnit statement&lt;/span&gt;
&lt;span class="cm"&gt;   * @see {@link Wiser#accept(String, String)}&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;boolean&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recipient&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;accept(String, String)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;accept&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recipient&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * @throws IllegalStateException is method is not called from a JUnit statement&lt;/span&gt;
&lt;span class="cm"&gt;   * @see {@link Wiser#deliver(String, String, java.io.InputStream)}&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;deliver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recipient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;InputStream&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TooMuchDataException&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;IOException&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;deliver(String, String, InputStream)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;deliver&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;from&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;recipient&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;data&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * @throws IllegalStateException is method is not called from a JUnit statement&lt;/span&gt;
&lt;span class="cm"&gt;   * @see {@link Wiser#dumpMessages(java.io.PrintStream)}&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;dumpMessages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;PrintStream&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MessagingException&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;dumpMessages(PrintStream)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;wiser&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;dumpMessages&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;out&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;Preconditions&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;checkState&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;wiser&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;!=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;null&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s"&gt;&amp;quot;%s must not be called outside of a JUnit statement&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;method&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And the &lt;code&gt;SmtpServerSupport&lt;/code&gt; interface which will usually be implemented by the JUnit test :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.test.rule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;javax.annotation.Nonnull&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt; * SmtpServerSupport - Interface usually implemented by the JUnit test class.&lt;/span&gt;
&lt;span class="cm"&gt; *&lt;/span&gt;
&lt;span class="cm"&gt; * @author Sébastien Lesaint&lt;/span&gt;
&lt;span class="cm"&gt; */&lt;/span&gt;
&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;interface&lt;/span&gt; &lt;span class="nc"&gt;SmtpServerSupport&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * the SMTP port.&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kt"&gt;int&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getPort&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/**&lt;/span&gt;
&lt;span class="cm"&gt;   * The hostname (for example &amp;#39;localhost&amp;#39;)&lt;/span&gt;
&lt;span class="cm"&gt;   *&lt;/span&gt;
&lt;span class="cm"&gt;   * @return a {@link String}&lt;/span&gt;
&lt;span class="cm"&gt;   */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Nonnull&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="n"&gt;String&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;getHostname&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="which-port-to-use"&gt;which port to use ?&lt;a class="headerlink" href="#which-port-to-use" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;h1 id="to-go-a-little-bit-further"&gt;To go a little bit further&lt;a class="headerlink" href="#to-go-a-little-bit-further" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="class-rule"&gt;class Rule&lt;a class="headerlink" href="#class-rule" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;The current implementation of the Rule starts and stops the SMTP server around each test. It might be more efficient to implement a class Rule which starts/stops the server only one per class.
To do so, the only point to investigate is how to reset the status of the SMTP before each test, ie. clearing received messages. I haven't looked into that yet.&lt;/p&gt;
&lt;h2 id="random-port"&gt;random port&lt;a class="headerlink" href="#random-port" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Another could feature would be to create the rule in a mode where the port would be chosen at random, the SMTP server started and if the start fails another port choosen and tried in loop for several times.
Combined with the class Rule feature, this feature would be extremely convenient to create tests which can be run in parallel inside the same maven module.
To do so, the only point to investigate is wheter &lt;code&gt;wiser.start()&lt;/code&gt; fails immediatly if the port is not available.&lt;/p&gt;</content><category term="articles"></category><category term="Java"></category><category term="JUnit"></category><category term="Smtp"></category><category term="Testing"></category></entry><entry><title>Using a TestRule to initialize Mockito Mocks in a JUnit test</title><link href="https://www.javatronic.fr/posts/2014/02/13/using-a-testrule-to-initialize-mockito-mocks-in-a-junit-test/" rel="alternate"></link><published>2014-02-13T00:00:00+01:00</published><updated>2014-02-13T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-02-13:/posts/2014/02/13/using-a-testrule-to-initialize-mockito-mocks-in-a-junit-test/</id><summary type="html">&lt;p&gt;Using Mockito annotations in JUnit tests is very convenient.&lt;/p&gt;
&lt;p&gt;To make it even easier, initialisation can be made automatic by using a Runner (with annotation &lt;code&gt;@RunWith(MockitoJUnitRunner.class&lt;/code&gt;) that will call &lt;code&gt;MockitoAnnotations.initMocks(Object)&lt;/code&gt; for us.&lt;/p&gt;
&lt;p&gt;The problem is : the runner is executed after the class is initialized by constructor …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Using Mockito annotations in JUnit tests is very convenient.&lt;/p&gt;
&lt;p&gt;To make it even easier, initialisation can be made automatic by using a Runner (with annotation &lt;code&gt;@RunWith(MockitoJUnitRunner.class&lt;/code&gt;) that will call &lt;code&gt;MockitoAnnotations.initMocks(Object)&lt;/code&gt; for us.&lt;/p&gt;
&lt;p&gt;The problem is : the runner is executed after the class is initialized by constructor (obviously), making it impossible, for example, to have references to mocks or injected objects in rules.&lt;/p&gt;
&lt;h1 id="using-a-testrule-to-initialize-the-class"&gt;Using a TestRule to initialize the class&lt;a class="headerlink" href="#using-a-testrule-to-initialize-the-class" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;The solution around this is pretty simple, but it is not provided by Mockito as far as I could see : use a TestRule to initialize the class instead of a Runner.&lt;/p&gt;
&lt;p&gt;Here is the code of the TestRule (very simple, indeed) :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.testfr.phan.webapp.controller.test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.rules.TestRule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.runner.Description&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.runners.model.Statement&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.mockito.MockitoAnnotations&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MockitoAnnotationsRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;implements&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;TestRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;MockitoAnnotationsRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Object&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;MockitoAnnotations&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;initMocks&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Override&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Statement&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;apply&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;Statement&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Description&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;description&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="k"&gt;return&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;base&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This class takes the Unit test as a contructor argument and simply calls &lt;code&gt;MockitoAnnotations.initMocks()&lt;/code&gt; on it.&lt;/p&gt;
&lt;h1 id="usage"&gt;Usage&lt;a class="headerlink" href="#usage" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;This TestRule is intended to be used as a public, non static property in a JUnit test, annoted with &lt;code&gt;@Rule&lt;/code&gt;.
The only constraint is that the property must be placed in the code before any other rule or object instanced during the creation of the test Object which uses a property annoted with either &lt;code&gt;@Mock&lt;/code&gt; or &lt;code&gt;@InjectMocks&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sample usage in unit test for a Spring MVC controller :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="kn"&gt;package&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.webapp.controller&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.webapp.controller.test.MyMockMvc&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.webapp.controller.test.MockitoAnnotationsRule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;fr.phan.webapp.controller.view.ExtranetView&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.Rule&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.junit.Test&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.mockito.InjectMocks&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.mockito.Mock&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kn"&gt;import static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.get&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.test.web.servlet.request.MockMvcRequestBuilders.post&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kn"&gt;import static&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nn"&gt;org.springframework.test.web.servlet.result.MockMvcResultMatchers.status&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;class&lt;/span&gt; &lt;span class="nc"&gt;MyControllerTest&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Mock&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;PeanutService&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;peanutService&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@InjectMocks&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;private&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyController&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Rule&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MockitoAnnotationsRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mockitoAnnotationsRule&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MockitoAnnotationsRule&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Rule&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="cm"&gt;/** MyMockMvc decorates a MockMvc instance and factorizes initialization code generic to the whole webapp */&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyMockMvc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;mockMvc&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="k"&gt;new&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;MyMockMvc&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;controller&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="nd"&gt;@Test&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="kd"&gt;public&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nf"&gt;get_should_return_ok&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kd"&gt;throws&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="n"&gt;Exception&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="n"&gt;mockMvc&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;perform&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;/toto&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
&lt;span class="w"&gt;      &lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="na"&gt;andExpect&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;status&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="na"&gt;isOk&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;
&lt;span class="w"&gt;  &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id="comments"&gt;Comments&lt;a class="headerlink" href="#comments" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="comparison-of-using-a-testrule-against-using-a-runner"&gt;Comparison of using a TestRule against using a Runner :&lt;a class="headerlink" href="#comparison-of-using-a-testrule-against-using-a-runner" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Pros&lt;ul&gt;
&lt;li&gt;benefits of the TestRule paradigm over the Runner paradigm&lt;ul&gt;
&lt;li&gt;one can use any number of TestRule but only one Runner in a Test&lt;/li&gt;
&lt;li&gt;one can decide to execute a Rule before another one by just ordering the properties&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;code is easily shared and one can use mock and injected objects in other TestRule or objects created during the test Object's initialisation&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Cons&lt;ul&gt;
&lt;li&gt;quite more verbose than adding &lt;code&gt;@RunWith(MockitoJUnitRunner.class)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="is-it-really-a-testrule"&gt;Is it really a TestRule ?&lt;a class="headerlink" href="#is-it-really-a-testrule" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Some might say that &lt;code&gt;MockitoAnnotationsRule&lt;/code&gt; beeing a &lt;code&gt;TestRule&lt;/code&gt; is not relevant since it provides no useful implementation for the &lt;code&gt;apply&lt;/code&gt; defined by the &lt;code&gt;TestRule&lt;/code&gt; interface.&lt;/p&gt;
&lt;p&gt;Very good point. I could even add that it probably adds (some minor) overhead to the statement execution since our &lt;code&gt;apply&lt;/code&gt; method is called but does nothing.&lt;/p&gt;
&lt;p&gt;But on the other hand, adding the &lt;code&gt;@Rule&lt;/code&gt; annotation on our &lt;code&gt;MockitoAnnotationsRule&lt;/code&gt; property adds a great deal of readibility and defines clearly its purpose.&lt;/p&gt;
&lt;p&gt;That's why I will stay with implementing &lt;code&gt;TestRule&lt;/code&gt;.&lt;/p&gt;</content><category term="articles"></category><category term="Java"></category><category term="JUnit"></category><category term="Mockito"></category><category term="Spring"></category></entry><entry><title>Cloning a local Git repository from a remote machine</title><link href="https://www.javatronic.fr/posts/2014/01/20/cloning-a-local-git-repository-from-a-remote-machine/" rel="alternate"></link><published>2014-01-20T00:00:00+01:00</published><updated>2014-01-20T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-01-20:/posts/2014/01/20/cloning-a-local-git-repository-from-a-remote-machine/</id><summary type="html">&lt;p&gt;If you happen to have a Git repository cloned a machine (let's say machine@work) and you want to retrieve it on another machine (let's say machine@home),
you have a better (as in faster and more efficient) option than &lt;code&gt;scp&lt;/code&gt; or &lt;code&gt;rsync&lt;/code&gt; : &lt;code&gt;git clone&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="git-clone-of-a-local-repository-over-ssh"&gt;Git clone of a local …&lt;/h1&gt;</summary><content type="html">&lt;p&gt;If you happen to have a Git repository cloned a machine (let's say machine@work) and you want to retrieve it on another machine (let's say machine@home),
you have a better (as in faster and more efficient) option than &lt;code&gt;scp&lt;/code&gt; or &lt;code&gt;rsync&lt;/code&gt; : &lt;code&gt;git clone&lt;/code&gt;.&lt;/p&gt;
&lt;h1 id="git-clone-of-a-local-repository-over-ssh"&gt;Git clone of a local repository over SSH&lt;a class="headerlink" href="#git-clone-of-a-local-repository-over-ssh" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Obviously, you could clone from the same remote repository (let's say Remote) as machine@work, but you may have local branches on machine@work that you specifically want to work on.
Pushing local branch from machine@work to Remote is an option, but it could pollute other developers clones and/or you may not have access to Remote from machine@home.&lt;/p&gt;
&lt;p&gt;Let's say the clone on machine @work is in directory &lt;code&gt;~/DEV/myclone&lt;/code&gt;, here are the commands to use :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/STUFF_FROM_WORK/
git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;lesaint@lesaint.work.com:~/DEV/myclone/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it !&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt;Note&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;you might be prompted to enter a password to connect over ssh (unless you have a ssh-agent with a loaded key for machine@work)&lt;/li&gt;
&lt;li&gt;you can specify the path where to clone the repository by adding a third argument like any other clone command&lt;ul&gt;
&lt;li&gt;&lt;code&gt;git clone lesaint@lesaint.work.com:~/DEV/myclone/ local_clone_name&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;I used the "scp style" syntaxe of the &lt;code&gt;git clone&lt;/code&gt; argument&lt;ul&gt;
&lt;li&gt;the ssh style syntax would be &lt;code&gt;ssh://lesaint@lesaint.work.com/~/DEV/myclone/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h1 id="changing-remote-from-machine-to-the-true-remote"&gt;Changing remote from machine to the true remote&lt;a class="headerlink" href="#changing-remote-from-machine-to-the-true-remote" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;After cloning from machine @work, you might notice that the remote of the clone of machine @home is machine @work.&lt;/p&gt;
&lt;p&gt;To fix that in the event you would happen to access to remote from home and that you would like to push to remote directly :&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;~/STUFF_FROM_WORK/myclone
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nb"&gt;set&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;lesaint@gitserver.work.com:project.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="tips"></category><category term="Git"></category></entry><entry><title>Using Jekyll for GitHub pages</title><link href="https://www.javatronic.fr/posts/2014/01/15/using-jekyll-for-github-pages/" rel="alternate"></link><published>2014-01-15T00:00:00+01:00</published><updated>2014-01-15T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-01-15:/posts/2014/01/15/using-jekyll-for-github-pages/</id><summary type="html">&lt;p&gt;Personnal notes for installing and using Jekyll for GitHub pages&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here I gather notes on how I installed Jekyll for Github pages based mostly on informations from &lt;a href="https://help.github.com/articles/using-jekyll-with-pages"&gt;Github's help page&lt;/a&gt;.&lt;/p&gt;
&lt;h1 id="installing"&gt;Installing&lt;a class="headerlink" href="#installing" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;h2 id="ruby-and-rubygems-as-first-prerequisite"&gt;Ruby and RubyGems as first prerequisite&lt;a class="headerlink" href="#ruby-and-rubygems-as-first-prerequisite" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Ruby 1.9.3 is required (as of now)&lt;/li&gt;
&lt;li&gt;installing rubygems directly only installs Ruby 1.8.x =&amp;gt; need to install ruby manually&lt;/li&gt;
&lt;li&gt;to list installed packages via APT, you can use &lt;code&gt;sudo dpkg --get-selections&lt;/code&gt;&lt;ul&gt;
&lt;li&gt;source &lt;a href="http://akyl.net/how-list-all-installed-packages-ubuntu-centos-and-other-linux-systems"&gt;http://akyl.net/how-list-all-installed-packages-ubuntu-centos-and-other-linux-systems&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;ruby-dev package seems required to build gem github-pages&lt;ul&gt;
&lt;li&gt;otherwise, you might get an error :&lt;/li&gt;
&lt;li&gt;resource : &lt;a href="http://stackoverflow.com/questions/7645918/require-no-such-file-to-load-mkmf-loaderror"&gt;http://stackoverflow.com/questions/7645918/require-no-such-file-to-load-mkmf-loaderror&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;ERROR:&lt;span class="w"&gt;  &lt;/span&gt;Error&lt;span class="w"&gt; &lt;/span&gt;installing&lt;span class="w"&gt; &lt;/span&gt;github-pages:
&lt;span class="w"&gt;    &lt;/span&gt;ERROR:&lt;span class="w"&gt; &lt;/span&gt;Failed&lt;span class="w"&gt; &lt;/span&gt;to&lt;span class="w"&gt; &lt;/span&gt;build&lt;span class="w"&gt; &lt;/span&gt;gem&lt;span class="w"&gt; &lt;/span&gt;native&lt;span class="w"&gt; &lt;/span&gt;extension.

&lt;span class="w"&gt;          &lt;/span&gt;/usr/bin/ruby1.9.1&lt;span class="w"&gt; &lt;/span&gt;extconf.rb
&lt;span class="w"&gt;          &lt;/span&gt;/usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;require&lt;span class="s1"&gt;&amp;#39;: cannot load such file -- mkmf (LoadError)&lt;/span&gt;
&lt;span class="s1"&gt;            from /usr/lib/ruby/1.9.1/rubygems/custom_require.rb:36:in `require&amp;#39;&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;from&lt;span class="w"&gt; &lt;/span&gt;extconf.rb:1:in&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="sb"&gt;`&lt;/span&gt;&amp;lt;main&amp;gt;&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;installation&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ruby1.9.1
sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;ruby1.9.1-dev
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Under Ubuntu 12.04 on my XPS 13, ruby 1.8 is the default alternative. To force 1.9.1 :&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;unlink&lt;span class="w"&gt; &lt;/span&gt;/etc/alternatives/ruby
sudo&lt;span class="w"&gt; &lt;/span&gt;ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;/usr/bin/ruby1.9.1&lt;span class="w"&gt; &lt;/span&gt;/etc/alternatives/ruby
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;RubyGems&lt;/li&gt;
&lt;li&gt;Under Ubuntu 12.04 on my XPS 13, there seems to be an already install rubygems 1.8.11, which was not installed via apt-get &lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;apt-get&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;rubygems
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="jekyll"&gt;Jekyll&lt;a class="headerlink" href="#jekyll" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;gem&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="github-pages"&gt;GitHub Pages&lt;a class="headerlink" href="#github-pages" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;gem&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;github-pages
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;https://help.github.com/articles/using-jekyll-with-pages#installing-jekyll&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h2 id="rake"&gt;Rake&lt;a class="headerlink" href="#rake" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Rake is a build tool that we can use to automate several blog editing task&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;  &lt;/span&gt;sudo&lt;span class="w"&gt; &lt;/span&gt;gem&lt;span class="w"&gt; &lt;/span&gt;install&lt;span class="w"&gt; &lt;/span&gt;rake
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Rake build file is name &lt;code&gt;Rakefile&lt;/code&gt; and is written in pure Ruby&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="using-jekyll"&gt;Using Jekyll&lt;a class="headerlink" href="#using-jekyll" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;p&gt;Run the command below on the root of your GitHub pages clone&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;starts jekyll to diplay posts AND draft and watch for changes&lt;/li&gt;
&lt;li&gt;jekyll can then be stoped with CTRL+C&lt;/li&gt;
&lt;li&gt;by default website is visible on http://localhost:4000&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;jekyll&lt;span class="w"&gt; &lt;/span&gt;serve&lt;span class="w"&gt; &lt;/span&gt;--draft&lt;span class="w"&gt; &lt;/span&gt;--watch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Javatronic"></category><category term="Sublime Text"></category><category term="Github Pages"></category><category term="Ruby"></category></entry><entry><title>Tuning Sublime for Markdown editing</title><link href="https://www.javatronic.fr/posts/2014/01/10/tuning-sublime-for-markdown-editing/" rel="alternate"></link><published>2014-01-10T00:00:00+01:00</published><updated>2014-01-10T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-01-10:/posts/2014/01/10/tuning-sublime-for-markdown-editing/</id><summary type="html">&lt;p&gt;Personal notes for tuning Sublime Text 2&lt;/p&gt;</summary><content type="html">&lt;p&gt;Here I keep a few notes on how to configure Sublime Text 2 to edit Markdown editing.&lt;/p&gt;
&lt;h1 id="markdown-editing-in-sublime-text"&gt;Markdown Editing in Sublime Text&lt;a class="headerlink" href="#markdown-editing-in-sublime-text" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Excellent resource&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.macstories.net/roundups/sublime-text-2-and-markdown-tips-tricks-and-links/"&gt;http://www.macstories.net/roundups/sublime-text-2-and-markdown-tips-tricks-and-links/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Install Sublime Text&lt;/li&gt;
&lt;li&gt;see &lt;a href="https://www.javatronic.fr/posts/2014/01/08/installing-sublime-for-my-use/"&gt;Installing Sublime for my use&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Extends Sublime for better editing experience (via Package Control)&lt;/li&gt;
&lt;li&gt;Add package MarkdownEditing&lt;ul&gt;
&lt;li&gt;installation&lt;/li&gt;
&lt;li&gt;&lt;a href="http://ttscoff.github.com/MarkdownEditing/"&gt;http://ttscoff.github.com/MarkdownEditing/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTRL+SHIFT+P &amp;gt; Install Package&lt;/li&gt;
&lt;li&gt;package name is "MarkdownEditing"&lt;/li&gt;
&lt;li&gt;configuration&lt;/li&gt;
&lt;li&gt;set "GitHub flavored Markdown" as default&lt;ul&gt;
&lt;li&gt;open a Markdown file&lt;/li&gt;
&lt;li&gt;select your flavor from the menu: View &amp;gt; Syntax &amp;gt; Open all with current extension as&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;overwrite few properties of MarkdownEditing to have black theme, not centered editing, no wrapping&lt;ul&gt;
&lt;li&gt;open user preferences Preferences &amp;gt; Package Settings &amp;gt; MarkdownEditing &amp;gt; Markdown GFM Settings - User&lt;/li&gt;
&lt;li&gt;change content with below&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;extensions&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;md&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mdown&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;txt&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;markdown&amp;quot;&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;

&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;color_scheme&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Packages/MarkdownEditing/MarkdownEditor-Dark.tmTheme&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;

&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="c1"&gt;// Layout&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;draw_centered&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;word_wrap&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;false&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;          &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;wrap_width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="mi"&gt;120&lt;/span&gt;
&lt;span class="w"&gt;        &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;Add Syntax highlighting sublime-markdown-extended (for reference, not used, MarkdownEditing is better)&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jonschlinkert/sublime-markdown-extended"&gt;https://github.com/jonschlinkert/sublime-markdown-extended&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTRL+SHIFT+P &amp;gt; Install Package&lt;/li&gt;
&lt;li&gt;package name is "Markdown Extended"&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Add Color Theme Monokai Extended (not used for markdown, but good theme for other files)&lt;ul&gt;
&lt;li&gt;&lt;a href="https://github.com/jonschlinkert/sublime-monokai-extended"&gt;https://github.com/jonschlinkert/sublime-monokai-extended&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;CTRL+SHIFT+P &amp;gt; Install Package&lt;/li&gt;
&lt;li&gt;package name is "Monokai Extended"&lt;/li&gt;
&lt;li&gt;select as default color theme&lt;/li&gt;
&lt;li&gt;Preferences &amp;gt; Color sheme &amp;gt; Monokai Extended &amp;gt; Monokai Extended&lt;/li&gt;
&lt;li&gt;Bright sheme hurts my eyes&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;</content><category term="articles"></category><category term="Sublime Text"></category></entry><entry><title>Installing Sublime for my use</title><link href="https://www.javatronic.fr/posts/2014/01/08/installing-sublime-for-my-use/" rel="alternate"></link><published>2014-01-08T00:00:00+01:00</published><updated>2014-01-08T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-01-08:/posts/2014/01/08/installing-sublime-for-my-use/</id><summary type="html">&lt;p&gt;How I installed Sublime Text 2 on Ubuntu&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this article, I keep track of how I installed &lt;a href="http://www.sublimetext.com/2"&gt;Sublime Text 2&lt;/a&gt; on my computer(s) running Ubuntu, from download to adding a launcher in Unity sidebar.&lt;/p&gt;
&lt;h2 id="installing"&gt;Installing&lt;a class="headerlink" href="#installing" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Download Sublime from website&lt;ul&gt;
&lt;li&gt;download linux 64 bit version at &lt;a href="http://www.sublimetext.com/2"&gt;http://www.sublimetext.com/2&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;latest version at the time of my writing is 2.0.2&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;save to &lt;code&gt;/opt/INSTALL_MEDIA&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;create &lt;code&gt;/opt/sublimetext&lt;/code&gt; directory&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;/opt
sudo&lt;span class="w"&gt; &lt;/span&gt;mkdir&lt;span class="w"&gt; &lt;/span&gt;sublimetext
sudo&lt;span class="w"&gt; &lt;/span&gt;chown&lt;span class="w"&gt; &lt;/span&gt;lesaint:lesaint&lt;span class="w"&gt; &lt;/span&gt;sublimetext
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;cp tar file to &lt;code&gt;/opt/sublime&lt;/code&gt;, decompress it and create symbolic link to the current version&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;cp&lt;span class="w"&gt; &lt;/span&gt;../INSTALL_MEDIA/Sublime&lt;span class="se"&gt;\ &lt;/span&gt;Text&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.0.2&lt;span class="se"&gt;\ &lt;/span&gt;x64.tar.bz2&lt;span class="w"&gt; &lt;/span&gt;.
tar&lt;span class="w"&gt; &lt;/span&gt;xvfj&lt;span class="w"&gt; &lt;/span&gt;Sublime&lt;span class="se"&gt;\ &lt;/span&gt;Text&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.0.2&lt;span class="se"&gt;\ &lt;/span&gt;x64.tar.bz2
mv&lt;span class="w"&gt; &lt;/span&gt;Sublime&lt;span class="se"&gt;\ &lt;/span&gt;Text&lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.0.2
ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;.0.2&lt;span class="w"&gt; &lt;/span&gt;sublime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="executing"&gt;Executing&lt;a class="headerlink" href="#executing" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;add sublime to local bin directory for convenient command line use&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;ln&lt;span class="w"&gt; &lt;/span&gt;-s&lt;span class="w"&gt; &lt;/span&gt;/opt/sublimetext/sublime/sublime_text&lt;span class="w"&gt; &lt;/span&gt;/usr/local/bin/sublime
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;create sidebar launcher in Unity&lt;ul&gt;
&lt;li&gt;create a desktop file in &lt;code&gt;~/.local/share/applications/&lt;/code&gt; called &lt;code&gt;sublimetext.desktop&lt;/code&gt; with following content&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Desktop&lt;span class="w"&gt; &lt;/span&gt;Entry&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Sublime&lt;span class="w"&gt; &lt;/span&gt;Text&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="m"&gt;2&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/sublimetext/sublime/sublime_text&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;%F
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;MimeType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;text/plain&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Terminal&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nb"&gt;false&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Application
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Icon&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/opt/sublimetext/sublime/Icon/256x256/sublime_text.png
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Categories&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;GNOME&lt;span class="p"&gt;;&lt;/span&gt;GTK&lt;span class="p"&gt;;&lt;/span&gt;Utility&lt;span class="p"&gt;;&lt;/span&gt;TextEditor&lt;span class="p"&gt;;&lt;/span&gt;Development&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Actions&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;New&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;Desktop&lt;span class="w"&gt; &lt;/span&gt;Action&lt;span class="w"&gt; &lt;/span&gt;New&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Name&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;New&lt;span class="w"&gt; &lt;/span&gt;Editor&lt;span class="w"&gt; &lt;/span&gt;Window
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;Exec&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/opt/sublimetext/sublime/sublime_text&amp;quot;&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;--new-window
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;MimeType&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;text/plain&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nv"&gt;OnlyShowIn&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;Unity&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;resources&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;:
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[&lt;span class="nv"&gt;http&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;www&lt;/span&gt;.&lt;span class="nv"&gt;sublimetext&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;forum&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;viewtopic&lt;/span&gt;.&lt;span class="nv"&gt;php&lt;/span&gt;?&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3457&lt;/span&gt;#&lt;span class="nv"&gt;p43852&lt;/span&gt;]&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;http&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;www&lt;/span&gt;.&lt;span class="nv"&gt;sublimetext&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;forum&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;viewtopic&lt;/span&gt;.&lt;span class="nv"&gt;php&lt;/span&gt;?&lt;span class="nv"&gt;f&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;t&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;3457&lt;/span&gt;#&lt;span class="nv"&gt;p43852&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;[&lt;span class="nv"&gt;http&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;www&lt;/span&gt;.&lt;span class="nv"&gt;saintsjd&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;sidebar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;launcher&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;sublime&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;unity&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;]&lt;span class="ss"&gt;(&lt;/span&gt;&lt;span class="nv"&gt;http&lt;/span&gt;:&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="nv"&gt;www&lt;/span&gt;.&lt;span class="nv"&gt;saintsjd&lt;/span&gt;.&lt;span class="nv"&gt;com&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2012&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;create&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;a&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;sidebar&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;launcher&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="k"&gt;for&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;sublime&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;text&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;in&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;ubuntu&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;unity&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="ss"&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id="minimal-sublime-tuning"&gt;Minimal Sublime tuning&lt;a class="headerlink" href="#minimal-sublime-tuning" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Install Package Control extension&lt;ul&gt;
&lt;li&gt;Package Control is the most convenient way of extending Sublime Text and offers lots of resources&lt;/li&gt;
&lt;li&gt;see instructions at &lt;a href="https://sublime.wbond.net/installation"&gt;https://sublime.wbond.net/installation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Keyboard shortcuts&lt;ul&gt;
&lt;li&gt;make delete line shortcut actually useable&lt;ul&gt;
&lt;li&gt;default shurtcut ctrl+shift+k can not be used with a single hand&lt;/li&gt;
&lt;li&gt;open shorcut preferences : Preferences &amp;gt; Key Bindings - User&lt;/li&gt;
&lt;li&gt;add the following line (which overwrite default's ctrl+d key binding for command find_under_expand)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;            &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;keys&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ctrl+d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;command&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;run_macro_file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;args&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;file&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Packages/Default/Delete Line.sublime-macro&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;User preferences&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;I found several nice ideas of tuning Sublime Text there : &lt;a href="http://www.synbioz.com/blog/sublime_text"&gt;http://www.synbioz.com/blog/sublime_text&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;open user preferences : Preferences &amp;gt; Settings - User&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;make sure files have trailing new line
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;ensure_newline_at_eof_on_save&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;trim_trailing_white_space_on_save&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;improve visibility of modified files tabs and hightligh line with cursor&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;highlight_line&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="w"&gt;    &lt;/span&gt;&lt;span class="nt"&gt;&amp;quot;highlight_modified_tabs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="kc"&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="articles"></category><category term="Sublime Text"></category></entry><entry><title>Cloning a single branch</title><link href="https://www.javatronic.fr/posts/2014/01/06/cloning-a-single-branch/" rel="alternate"></link><published>2014-01-06T00:00:00+01:00</published><updated>2014-01-06T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-01-06:/posts/2014/01/06/cloning-a-single-branch/</id><summary type="html">&lt;p&gt;On this new project I'm working one, there is this huge repository that serves as a deployment mean for binaries in the stage and production environnement.&lt;/p&gt;
&lt;p&gt;Most branches content is totally different from one another and no one cares about the old branches and rarely use the tags.&lt;/p&gt;
&lt;p&gt;Since my …&lt;/p&gt;</summary><content type="html">&lt;p&gt;On this new project I'm working one, there is this huge repository that serves as a deployment mean for binaries in the stage and production environnement.&lt;/p&gt;
&lt;p&gt;Most branches content is totally different from one another and no one cares about the old branches and rarely use the tags.&lt;/p&gt;
&lt;p&gt;Since my SSD was almost full, I wanted to avoid cloning the whole repository and clone only a specific branch instead. I would later retrieve other branches (and tags, very rarely) one by one.&lt;/p&gt;
&lt;p&gt;Using the &lt;code&gt;-t&lt;/code&gt; option of &lt;code&gt;git remote&lt;/code&gt; and a serie of commands, we can achieve that.&lt;/p&gt;
&lt;h3 id="cloning-a-single-branch"&gt;Cloning a single branch&lt;a class="headerlink" href="#cloning-a-single-branch" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;To clone a repository and retrieve a single branch can be done as follow :&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;http://stackoverflow.com/a/4146786&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# create clone directory&lt;/span&gt;
mkdir&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$REPO&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$REPO&lt;/span&gt;
&lt;span class="c1"&gt;# create an empty local master branch&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;init
&lt;span class="c1"&gt;# add a remote repository for a specific branch&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;add&lt;span class="w"&gt; &lt;/span&gt;-t&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BRANCH&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;-f&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$REMOTE_REPO&lt;/span&gt;
&lt;span class="c1"&gt;# retrieve remote branch on disk&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;fetch
&lt;span class="c1"&gt;# checkout branch locally&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;checkout&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$BRANCH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id="checkout-new-branches"&gt;Checkout new branches&lt;a class="headerlink" href="#checkout-new-branches" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Checking out any branch/tag from the repo can be done as follow :
It indeed requires to know the name of the remote branch from another source than your local checkout.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;cd&lt;/span&gt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$REPO&lt;/span&gt;
&lt;span class="c1"&gt;# add a new remote branch&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;set-branches&lt;span class="w"&gt; &lt;/span&gt;--add&lt;span class="w"&gt; &lt;/span&gt;origin&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$NEW_BRANCH&lt;/span&gt;
&lt;span class="c1"&gt;# fetch all remote branches (the new one included) to disk&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;fetch
&lt;span class="c1"&gt;# checkout branch locally&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;co&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="nv"&gt;$NEW_BRANCH&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the added remote branche does not exist on the remote repository, you will get the following error, fetch will fail.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;fatal:&lt;span class="w"&gt; &lt;/span&gt;Couldn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t&lt;span class="w"&gt; &lt;/span&gt;find&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;ref&lt;span class="w"&gt; &lt;/span&gt;refs/heads/WRONG_BRANCH
fatal:&lt;span class="w"&gt; &lt;/span&gt;The&lt;span class="w"&gt; &lt;/span&gt;remote&lt;span class="w"&gt; &lt;/span&gt;end&lt;span class="w"&gt; &lt;/span&gt;hung&lt;span class="w"&gt; &lt;/span&gt;up&lt;span class="w"&gt; &lt;/span&gt;unexpectedly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The problem is that your local repository get kind of corrupted and all the next &lt;code&gt;git fetch&lt;/code&gt; command will also fail with the same error.&lt;/p&gt;
&lt;p&gt;To fix it, edit file &lt;code&gt;.git/config&lt;/code&gt; and remove the wrong entry under '[remote origin]' starting with &lt;code&gt;fetch =&lt;/code&gt;.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;http://stackoverflow.com/questions/6930147/git-pull-displays-fatal-couldnt-find-remote-ref-refs-heads-xxxx-and-hangs-up#comment8276807_6930399&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="discussion"&gt;Discussion&lt;a class="headerlink" href="#discussion" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;This technic is a litle bit manual, but has many advantages :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;writing a shell script to automate it is only a few hits on the keyboard away&lt;ul&gt;
&lt;li&gt;hay ! How hard would it be to create a new Git command ? I must find time to dig into that&lt;/li&gt;
&lt;li&gt;maybe a simple GIT alias could do the job&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;you don't get pushing problems as you can get when using git shallow cloning&lt;/li&gt;
&lt;li&gt;you really are checking a single reference branch as opposed to using &lt;code&gt;git clone -b option&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# retrieves all the remote branches locally and then checkout branch_name&lt;/span&gt;
git&lt;span class="w"&gt; &lt;/span&gt;clone&lt;span class="w"&gt; &lt;/span&gt;user@git-server:project_name.git&lt;span class="w"&gt; &lt;/span&gt;-b&lt;span class="w"&gt; &lt;/span&gt;branch_name
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</content><category term="tips"></category><category term="Git"></category></entry><entry><title>Creating a patch from a GIT commit</title><link href="https://www.javatronic.fr/posts/2014/01/03/creating-a-patch-from-a-git-commit/" rel="alternate"></link><published>2014-01-03T00:00:00+01:00</published><updated>2014-01-03T00:00:00+01:00</updated><author><name>Sébastien Lesaint</name></author><id>tag:www.javatronic.fr,2014-01-03:/posts/2014/01/03/creating-a-patch-from-a-git-commit/</id><summary type="html">&lt;p&gt;Recently I had to create patch from a local commit to apply a totally different branch and on a different clone. Obviously I couldn't use &lt;code&gt;git cherry-pick&lt;/code&gt; so I tried and found out to create a patch from a GIT commit.&lt;/p&gt;
&lt;p&gt;It all comes down to using git format-patch command …&lt;/p&gt;</summary><content type="html">&lt;p&gt;Recently I had to create patch from a local commit to apply a totally different branch and on a different clone. Obviously I couldn't use &lt;code&gt;git cherry-pick&lt;/code&gt; so I tried and found out to create a patch from a GIT commit.&lt;/p&gt;
&lt;p&gt;It all comes down to using git format-patch command and the patch shell command : &lt;/p&gt;
&lt;h2 id="create-patch-from-last-commit-local-or-not"&gt;create patch from last commit (local or not)&lt;a class="headerlink" href="#create-patch-from-last-commit-local-or-not" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git&lt;span class="w"&gt; &lt;/span&gt;format-patch&lt;span class="w"&gt; &lt;/span&gt;-1&lt;span class="w"&gt; &lt;/span&gt;HEAD
&lt;span class="c1"&gt;# creates a patch file in the root directory of the GIT clone : lest say some_file.patch&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="apply-patch"&gt;apply patch&lt;a class="headerlink" href="#apply-patch" title="Permanent link"&gt;&amp;para;&lt;/a&gt;&lt;/h2&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;patch&lt;span class="w"&gt; &lt;/span&gt;-p1&lt;span class="w"&gt; &lt;/span&gt;&amp;lt;&lt;span class="w"&gt; &lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;path_to&lt;span class="o"&gt;]&lt;/span&gt;/some_file.patch
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class="admonition note"&gt;
&lt;p class="admonition-title"&gt; Sources&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=""&gt;http://stackoverflow.com/questions/13192806/how-to-generate-a-git-patch-with-a-local-commit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;</content><category term="tips"></category><category term="Git"></category></entry></feed>